(function() {var implementors = {};
implementors["actix_codec"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"actix_codec/struct.BytesCodec.html\" title=\"struct actix_codec::BytesCodec\">BytesCodec</a>","synthetic":true,"types":["actix_codec::bcodec::BytesCodec"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"actix_codec/struct.Framed.html\" title=\"struct actix_codec::Framed\">Framed</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_codec::framed::Framed"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"actix_codec/struct.FramedParts.html\" title=\"struct actix_codec::FramedParts\">FramedParts</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_codec::framed::FramedParts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_codec/struct.LinesCodec.html\" title=\"struct actix_codec::LinesCodec\">LinesCodec</a>","synthetic":true,"types":["actix_codec::lines::LinesCodec"]}];
implementors["actix_files"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"actix_files/struct.Directory.html\" title=\"struct actix_files::Directory\">Directory</a>","synthetic":true,"types":["actix_files::directory::Directory"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_files/struct.Files.html\" title=\"struct actix_files::Files\">Files</a>","synthetic":true,"types":["actix_files::files::Files"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_files/struct.NamedFile.html\" title=\"struct actix_files::NamedFile\">NamedFile</a>","synthetic":true,"types":["actix_files::named::NamedFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_files/struct.HttpRange.html\" title=\"struct actix_files::HttpRange\">HttpRange</a>","synthetic":true,"types":["actix_files::range::HttpRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_files/struct.FilesService.html\" title=\"struct actix_files::FilesService\">FilesService</a>","synthetic":true,"types":["actix_files::service::FilesService"]}];
implementors["actix_http"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"actix_http/body/struct.BodyStream.html\" title=\"struct actix_http::body::BodyStream\">BodyStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::body::body_stream::BodyStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_http/body/struct.BoxBody.html\" title=\"struct actix_http::body::BoxBody\">BoxBody</a>","synthetic":true,"types":["actix_http::body::boxed::BoxBody"]},{"text":"impl&lt;L, R&gt; Freeze for <a class=\"enum\" href=\"actix_http/body/enum.EitherBody.html\" title=\"enum actix_http::body::EitherBody\">EitherBody</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::body::either::EitherBody"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/body/struct.None.html\" title=\"struct actix_http::body::None\">None</a>","synthetic":true,"types":["actix_http::body::none::None"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/body/enum.BodySize.html\" title=\"enum actix_http::body::BodySize\">BodySize</a>","synthetic":true,"types":["actix_http::body::size::BodySize"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"actix_http/body/struct.SizedStream.html\" title=\"struct actix_http::body::SizedStream\">SizedStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::body::sized_stream::SizedStream"]},{"text":"impl&lt;T, S, X, U&gt; Freeze for <a class=\"struct\" href=\"actix_http/struct.HttpServiceBuilder.html\" title=\"struct actix_http::HttpServiceBuilder\">HttpServiceBuilder</a>&lt;T, S, X, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::builder::HttpServiceBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/struct.ServiceConfig.html\" title=\"struct actix_http::ServiceConfig\">ServiceConfig</a>","synthetic":true,"types":["actix_http::config::ServiceConfig"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"actix_http/encoding/struct.Decoder.html\" title=\"struct actix_http::encoding::Decoder\">Decoder</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::encoding::decoder::Decoder"]},{"text":"impl&lt;B&gt; !Freeze for <a class=\"struct\" href=\"actix_http/encoding/struct.Encoder.html\" title=\"struct actix_http::encoding::Encoder\">Encoder</a>&lt;B&gt;","synthetic":true,"types":["actix_http::encoding::encoder::Encoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/error/struct.Error.html\" title=\"struct actix_http::error::Error\">Error</a>","synthetic":true,"types":["actix_http::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/error/enum.ParseError.html\" title=\"enum actix_http::error::ParseError\">ParseError</a>","synthetic":true,"types":["actix_http::error::ParseError"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_http/error/enum.PayloadError.html\" title=\"enum actix_http::error::PayloadError\">PayloadError</a>","synthetic":true,"types":["actix_http::error::PayloadError"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_http/error/enum.DispatchError.html\" title=\"enum actix_http::error::DispatchError\">DispatchError</a>","synthetic":true,"types":["actix_http::error::DispatchError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/error/enum.ContentTypeError.html\" title=\"enum actix_http::error::ContentTypeError\">ContentTypeError</a>","synthetic":true,"types":["actix_http::error::ContentTypeError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/struct.Extensions.html\" title=\"struct actix_http::Extensions\">Extensions</a>","synthetic":true,"types":["actix_http::extensions::Extensions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.ClientCodec.html\" title=\"struct actix_http::h1::ClientCodec\">ClientCodec</a>","synthetic":true,"types":["actix_http::h1::client::ClientCodec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.ClientPayloadCodec.html\" title=\"struct actix_http::h1::ClientPayloadCodec\">ClientPayloadCodec</a>","synthetic":true,"types":["actix_http::h1::client::ClientPayloadCodec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.Codec.html\" title=\"struct actix_http::h1::Codec\">Codec</a>","synthetic":true,"types":["actix_http::h1::codec::Codec"]},{"text":"impl&lt;T, S, B, X, U&gt; !Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.Dispatcher.html\" title=\"struct actix_http::h1::Dispatcher\">Dispatcher</a>&lt;T, S, B, X, U&gt;","synthetic":true,"types":["actix_http::h1::dispatcher::Dispatcher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.ExpectHandler.html\" title=\"struct actix_http::h1::ExpectHandler\">ExpectHandler</a>","synthetic":true,"types":["actix_http::h1::expect::ExpectHandler"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.Payload.html\" title=\"struct actix_http::h1::Payload\">Payload</a>","synthetic":true,"types":["actix_http::h1::payload::Payload"]},{"text":"impl&lt;T, S, B, X, U&gt; Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.H1Service.html\" title=\"struct actix_http::h1::H1Service\">H1Service</a>&lt;T, S, B, X, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::h1::service::H1Service"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.UpgradeHandler.html\" title=\"struct actix_http::h1::UpgradeHandler\">UpgradeHandler</a>","synthetic":true,"types":["actix_http::h1::upgrade::UpgradeHandler"]},{"text":"impl&lt;T, B&gt; !Freeze for <a class=\"struct\" href=\"actix_http/h1/struct.SendResponse.html\" title=\"struct actix_http::h1::SendResponse\">SendResponse</a>&lt;T, B&gt;","synthetic":true,"types":["actix_http::h1::utils::SendResponse"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"enum\" href=\"actix_http/h1/enum.Message.html\" title=\"enum actix_http::h1::Message\">Message</a>&lt;T&gt;","synthetic":true,"types":["actix_http::h1::Message"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/h1/enum.MessageType.html\" title=\"enum actix_http::h1::MessageType\">MessageType</a>","synthetic":true,"types":["actix_http::h1::MessageType"]},{"text":"impl&lt;T, S, B, X, U&gt; !Freeze for <a class=\"struct\" href=\"actix_http/h2/struct.Dispatcher.html\" title=\"struct actix_http::h2::Dispatcher\">Dispatcher</a>&lt;T, S, B, X, U&gt;","synthetic":true,"types":["actix_http::h2::dispatcher::Dispatcher"]},{"text":"impl&lt;T, S, B&gt; Freeze for <a class=\"struct\" href=\"actix_http/h2/struct.H2Service.html\" title=\"struct actix_http::h2::H2Service\">H2Service</a>&lt;T, S, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::h2::service::H2Service"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/h2/struct.Payload.html\" title=\"struct actix_http::h2::Payload\">Payload</a>","synthetic":true,"types":["actix_http::h2::Payload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/header/map/struct.HeaderMap.html\" title=\"struct actix_http::header::map::HeaderMap\">HeaderMap</a>","synthetic":true,"types":["actix_http::header::map::HeaderMap"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_http/header/map/struct.Removed.html\" title=\"struct actix_http::header::map::Removed\">Removed</a>","synthetic":true,"types":["actix_http::header::map::Removed"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"actix_http/header/map/struct.Keys.html\" title=\"struct actix_http::header::map::Keys\">Keys</a>&lt;'a&gt;","synthetic":true,"types":["actix_http::header::map::Keys"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"actix_http/header/map/struct.Iter.html\" title=\"struct actix_http::header::map::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["actix_http::header::map::Iter"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"actix_http/header/map/struct.Drain.html\" title=\"struct actix_http::header::map::Drain\">Drain</a>&lt;'a&gt;","synthetic":true,"types":["actix_http::header::map::Drain"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_http/header/map/struct.IntoIter.html\" title=\"struct actix_http::header::map::IntoIter\">IntoIter</a>","synthetic":true,"types":["actix_http::header::map::IntoIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/header/enum.Charset.html\" title=\"enum actix_http::header::Charset\">Charset</a>","synthetic":true,"types":["actix_http::header::shared::charset::Charset"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/header/enum.ContentEncoding.html\" title=\"enum actix_http::header::ContentEncoding\">ContentEncoding</a>","synthetic":true,"types":["actix_http::header::shared::content_encoding::ContentEncoding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/header/struct.ExtendedValue.html\" title=\"struct actix_http::header::ExtendedValue\">ExtendedValue</a>","synthetic":true,"types":["actix_http::header::shared::extended::ExtendedValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/header/struct.HttpDate.html\" title=\"struct actix_http::header::HttpDate\">HttpDate</a>","synthetic":true,"types":["actix_http::header::shared::http_date::HttpDate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/header/struct.Quality.html\" title=\"struct actix_http::header::Quality\">Quality</a>","synthetic":true,"types":["actix_http::header::shared::quality::Quality"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_http/header/struct.QualityItem.html\" title=\"struct actix_http::header::QualityItem\">QualityItem</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::header::shared::quality_item::QualityItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/enum.KeepAlive.html\" title=\"enum actix_http::KeepAlive\">KeepAlive</a>","synthetic":true,"types":["actix_http::keep_alive::KeepAlive"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/enum.ConnectionType.html\" title=\"enum actix_http::ConnectionType\">ConnectionType</a>","synthetic":true,"types":["actix_http::message::ConnectionType"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_http/struct.Message.html\" title=\"struct actix_http::Message\">Message</a>&lt;T&gt;","synthetic":true,"types":["actix_http::message::Message"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"enum\" href=\"actix_http/enum.Payload.html\" title=\"enum actix_http::Payload\">Payload</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::payload::Payload"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_http/struct.RequestHead.html\" title=\"struct actix_http::RequestHead\">RequestHead</a>","synthetic":true,"types":["actix_http::requests::head::RequestHead"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_http/enum.RequestHeadType.html\" title=\"enum actix_http::RequestHeadType\">RequestHeadType</a>","synthetic":true,"types":["actix_http::requests::head::RequestHeadType"]},{"text":"impl&lt;P&nbsp;=&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.64.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.64.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"futures_core/stream/trait.Stream.html\" title=\"trait futures_core::stream::Stream\">Stream</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.64.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>, <a class=\"enum\" href=\"actix_http/error/enum.PayloadError.html\" title=\"enum actix_http::error::PayloadError\">PayloadError</a>&gt;&gt; + 'static, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.64.0/alloc/alloc/struct.Global.html\" title=\"struct alloc::alloc::Global\">Global</a>&gt;&gt;&gt; !Freeze for <a class=\"struct\" href=\"actix_http/struct.Request.html\" title=\"struct actix_http::Request\">Request</a>&lt;P&gt;","synthetic":true,"types":["actix_http::requests::request::Request"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/struct.ResponseBuilder.html\" title=\"struct actix_http::ResponseBuilder\">ResponseBuilder</a>","synthetic":true,"types":["actix_http::responses::builder::ResponseBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/struct.ResponseHead.html\" title=\"struct actix_http::ResponseHead\">ResponseHead</a>","synthetic":true,"types":["actix_http::responses::head::ResponseHead"]},{"text":"impl&lt;B&gt; !Freeze for <a class=\"struct\" href=\"actix_http/struct.Response.html\" title=\"struct actix_http::Response\">Response</a>&lt;B&gt;","synthetic":true,"types":["actix_http::responses::response::Response"]},{"text":"impl&lt;T, S, B, X, U&gt; Freeze for <a class=\"struct\" href=\"actix_http/struct.HttpService.html\" title=\"struct actix_http::HttpService\">HttpService</a>&lt;T, S, B, X, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::service::HttpService"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_http/test/struct.TestRequest.html\" title=\"struct actix_http::test::TestRequest\">TestRequest</a>","synthetic":true,"types":["actix_http::test::TestRequest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/test/struct.TestBuffer.html\" title=\"struct actix_http::test::TestBuffer\">TestBuffer</a>","synthetic":true,"types":["actix_http::test::TestBuffer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/test/struct.TestSeqBuffer.html\" title=\"struct actix_http::test::TestSeqBuffer\">TestSeqBuffer</a>","synthetic":true,"types":["actix_http::test::TestSeqBuffer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/test/struct.TestSeqInner.html\" title=\"struct actix_http::test::TestSeqInner\">TestSeqInner</a>","synthetic":true,"types":["actix_http::test::TestSeqInner"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_http/ws/enum.Message.html\" title=\"enum actix_http::ws::Message\">Message</a>","synthetic":true,"types":["actix_http::ws::codec::Message"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_http/ws/enum.Frame.html\" title=\"enum actix_http::ws::Frame\">Frame</a>","synthetic":true,"types":["actix_http::ws::codec::Frame"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_http/ws/enum.Item.html\" title=\"enum actix_http::ws::Item\">Item</a>","synthetic":true,"types":["actix_http::ws::codec::Item"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/ws/struct.Codec.html\" title=\"struct actix_http::ws::Codec\">Codec</a>","synthetic":true,"types":["actix_http::ws::codec::Codec"]},{"text":"impl&lt;S, T&gt; Freeze for <a class=\"struct\" href=\"actix_http/ws/struct.Dispatcher.html\" title=\"struct actix_http::ws::Dispatcher\">Dispatcher</a>&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"actix_service/trait.Service.html\" title=\"trait actix_service::Service\">Service</a>&lt;<a class=\"enum\" href=\"actix_http/ws/enum.Frame.html\" title=\"enum actix_http::ws::Frame\">Frame</a>&gt;&gt;::<a class=\"associatedtype\" href=\"actix_service/trait.Service.html#associatedtype.Error\" title=\"type actix_service::Service::Error\">Error</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_http::ws::dispatcher::Dispatcher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/ws/struct.Parser.html\" title=\"struct actix_http::ws::Parser\">Parser</a>","synthetic":true,"types":["actix_http::ws::frame::Parser"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/ws/enum.OpCode.html\" title=\"enum actix_http::ws::OpCode\">OpCode</a>","synthetic":true,"types":["actix_http::ws::proto::OpCode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/ws/enum.CloseCode.html\" title=\"enum actix_http::ws::CloseCode\">CloseCode</a>","synthetic":true,"types":["actix_http::ws::proto::CloseCode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_http/ws/struct.CloseReason.html\" title=\"struct actix_http::ws::CloseReason\">CloseReason</a>","synthetic":true,"types":["actix_http::ws::proto::CloseReason"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/ws/enum.ProtocolError.html\" title=\"enum actix_http::ws::ProtocolError\">ProtocolError</a>","synthetic":true,"types":["actix_http::ws::ProtocolError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/ws/enum.HandshakeError.html\" title=\"enum actix_http::ws::HandshakeError\">HandshakeError</a>","synthetic":true,"types":["actix_http::ws::HandshakeError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_http/enum.Protocol.html\" title=\"enum actix_http::Protocol\">Protocol</a>","synthetic":true,"types":["actix_http::Protocol"]}];
implementors["actix_router"] = [{"text":"impl&lt;'de, T&gt; Freeze for <a class=\"struct\" href=\"actix_router/struct.PathDeserializer.html\" title=\"struct actix_router::PathDeserializer\">PathDeserializer</a>&lt;'de, T&gt;","synthetic":true,"types":["actix_router::de::PathDeserializer"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_router/struct.Path.html\" title=\"struct actix_router::Path\">Path</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_router::path::Path"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_router/enum.Patterns.html\" title=\"enum actix_router::Patterns\">Patterns</a>","synthetic":true,"types":["actix_router::pattern::Patterns"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_router/struct.Quoter.html\" title=\"struct actix_router::Quoter\">Quoter</a>","synthetic":true,"types":["actix_router::quoter::Quoter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_router/struct.ResourceDef.html\" title=\"struct actix_router::ResourceDef\">ResourceDef</a>","synthetic":true,"types":["actix_router::resource::ResourceDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_router/struct.ResourceId.html\" title=\"struct actix_router::ResourceId\">ResourceId</a>","synthetic":true,"types":["actix_router::router::ResourceId"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"actix_router/struct.Router.html\" title=\"struct actix_router::Router\">Router</a>&lt;T, U&gt;","synthetic":true,"types":["actix_router::router::Router"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"actix_router/struct.RouterBuilder.html\" title=\"struct actix_router::RouterBuilder\">RouterBuilder</a>&lt;T, U&gt;","synthetic":true,"types":["actix_router::router::RouterBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_router/struct.Url.html\" title=\"struct actix_router::Url\">Url</a>","synthetic":true,"types":["actix_router::url::Url"]}];
implementors["actix_rt"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"actix_rt/struct.ArbiterHandle.html\" title=\"struct actix_rt::ArbiterHandle\">ArbiterHandle</a>","synthetic":true,"types":["actix_rt::arbiter::ArbiterHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_rt/struct.Arbiter.html\" title=\"struct actix_rt::Arbiter\">Arbiter</a>","synthetic":true,"types":["actix_rt::arbiter::Arbiter"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_rt/struct.Runtime.html\" title=\"struct actix_rt::Runtime\">Runtime</a>","synthetic":true,"types":["actix_rt::runtime::Runtime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_rt/struct.System.html\" title=\"struct actix_rt::System\">System</a>","synthetic":true,"types":["actix_rt::system::System"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_rt/struct.SystemRunner.html\" title=\"struct actix_rt::SystemRunner\">SystemRunner</a>","synthetic":true,"types":["actix_rt::system::SystemRunner"]}];
implementors["actix_server"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"actix_server/struct.ServerBuilder.html\" title=\"struct actix_server::ServerBuilder\">ServerBuilder</a>","synthetic":true,"types":["actix_server::builder::ServerBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_server/struct.ServerHandle.html\" title=\"struct actix_server::ServerHandle\">ServerHandle</a>","synthetic":true,"types":["actix_server::handle::ServerHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_server/struct.Server.html\" title=\"struct actix_server::Server\">Server</a>","synthetic":true,"types":["actix_server::server::Server"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_server/struct.TestServer.html\" title=\"struct actix_server::TestServer\">TestServer</a>","synthetic":true,"types":["actix_server::test_server::TestServer"]}];
implementors["actix_service"] = [{"text":"impl&lt;Cfg, Req, Res, Err, InitErr&gt; Freeze for <a class=\"struct\" href=\"actix_service/boxed/struct.BoxServiceFactory.html\" title=\"struct actix_service::boxed::BoxServiceFactory\">BoxServiceFactory</a>&lt;Cfg, Req, Res, Err, InitErr&gt;","synthetic":true,"types":["actix_service::boxed::BoxServiceFactory"]},{"text":"impl&lt;T, S, Req&gt; Freeze for <a class=\"struct\" href=\"actix_service/struct.ApplyTransform.html\" title=\"struct actix_service::ApplyTransform\">ApplyTransform</a>&lt;T, S, Req&gt;","synthetic":true,"types":["actix_service::transform::ApplyTransform"]}];
implementors["actix_utils"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"actix_utils/counter/struct.Counter.html\" title=\"struct actix_utils::counter::Counter\">Counter</a>","synthetic":true,"types":["actix_utils::counter::Counter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_utils/counter/struct.CounterGuard.html\" title=\"struct actix_utils::counter::CounterGuard\">CounterGuard</a>","synthetic":true,"types":["actix_utils::counter::CounterGuard"]},{"text":"impl&lt;L, R&gt; Freeze for <a class=\"enum\" href=\"actix_utils/future/enum.Either.html\" title=\"enum actix_utils::future::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::future::either::Either"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"actix_utils/future/struct.PollFn.html\" title=\"struct actix_utils::future::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::future::poll_fn::PollFn"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_utils/future/struct.Ready.html\" title=\"struct actix_utils::future::Ready\">Ready</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_utils::future::ready::Ready"]}];
implementors["actix_web"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/struct.App.html\" title=\"struct actix_web::App\">App</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::app::App"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.AppService.html\" title=\"struct actix_web::dev::AppService\">AppService</a>","synthetic":true,"types":["actix_web::config::AppService"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.AppConfig.html\" title=\"struct actix_web::dev::AppConfig\">AppConfig</a>","synthetic":true,"types":["actix_web::config::AppConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/web/struct.ServiceConfig.html\" title=\"struct actix_web::web::ServiceConfig\">ServiceConfig</a>","synthetic":true,"types":["actix_web::config::ServiceConfig"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"actix_web/web/struct.Data.html\" title=\"struct actix_web::web::Data\">Data</a>&lt;T&gt;","synthetic":true,"types":["actix_web::data::Data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.ConnectionInfo.html\" title=\"struct actix_web::dev::ConnectionInfo\">ConnectionInfo</a>","synthetic":true,"types":["actix_web::info::ConnectionInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.PeerAddr.html\" title=\"struct actix_web::dev::PeerAddr\">PeerAddr</a>","synthetic":true,"types":["actix_web::info::PeerAddr"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.ResourceMap.html\" title=\"struct actix_web::dev::ResourceMap\">ResourceMap</a>","synthetic":true,"types":["actix_web::rmap::ResourceMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.ServiceRequest.html\" title=\"struct actix_web::dev::ServiceRequest\">ServiceRequest</a>","synthetic":true,"types":["actix_web::service::ServiceRequest"]},{"text":"impl&lt;B&nbsp;=&nbsp;<a class=\"struct\" href=\"actix_web/body/struct.BoxBody.html\" title=\"struct actix_web::body::BoxBody\">BoxBody</a>&gt; !Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.ServiceResponse.html\" title=\"struct actix_web::dev::ServiceResponse\">ServiceResponse</a>&lt;B&gt;","synthetic":true,"types":["actix_web::service::ServiceResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.WebService.html\" title=\"struct actix_web::dev::WebService\">WebService</a>","synthetic":true,"types":["actix_web::service::WebService"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"enum\" href=\"actix_web/dev/enum.JsonBody.html\" title=\"enum actix_web::dev::JsonBody\">JsonBody</a>&lt;T&gt;","synthetic":true,"types":["actix_web::types::json::JsonBody"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.Readlines.html\" title=\"struct actix_web::dev::Readlines\">Readlines</a>&lt;T&gt;","synthetic":true,"types":["actix_web::types::readlines::Readlines"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"actix_web/dev/struct.UrlEncoded.html\" title=\"struct actix_web::dev::UrlEncoded\">UrlEncoded</a>&lt;T&gt;","synthetic":true,"types":["actix_web::types::form::UrlEncoded"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/error/struct.Error.html\" title=\"struct actix_web::error::Error\">Error</a>","synthetic":true,"types":["actix_web::error::error::Error"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"actix_web/error/struct.InternalError.html\" title=\"struct actix_web::error::InternalError\">InternalError</a>&lt;T&gt;","synthetic":true,"types":["actix_web::error::internal::InternalError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/error/struct.BlockingError.html\" title=\"struct actix_web::error::BlockingError\">BlockingError</a>","synthetic":true,"types":["actix_web::error::BlockingError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/error/enum.UrlGenerationError.html\" title=\"enum actix_web::error::UrlGenerationError\">UrlGenerationError</a>","synthetic":true,"types":["actix_web::error::UrlGenerationError"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_web/error/enum.UrlencodedError.html\" title=\"enum actix_web::error::UrlencodedError\">UrlencodedError</a>","synthetic":true,"types":["actix_web::error::UrlencodedError"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_web/error/enum.JsonPayloadError.html\" title=\"enum actix_web::error::JsonPayloadError\">JsonPayloadError</a>","synthetic":true,"types":["actix_web::error::JsonPayloadError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/error/enum.PathError.html\" title=\"enum actix_web::error::PathError\">PathError</a>","synthetic":true,"types":["actix_web::error::PathError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/error/enum.QueryPayloadError.html\" title=\"enum actix_web::error::QueryPayloadError\">QueryPayloadError</a>","synthetic":true,"types":["actix_web::error::QueryPayloadError"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"actix_web/error/enum.ReadlinesError.html\" title=\"enum actix_web::error::ReadlinesError\">ReadlinesError</a>","synthetic":true,"types":["actix_web::error::ReadlinesError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"actix_web/guard/struct.GuardContext.html\" title=\"struct actix_web::guard::GuardContext\">GuardContext</a>&lt;'a&gt;","synthetic":true,"types":["actix_web::guard::GuardContext"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/guard/struct.AnyGuard.html\" title=\"struct actix_web::guard::AnyGuard\">AnyGuard</a>","synthetic":true,"types":["actix_web::guard::AnyGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/guard/struct.AllGuard.html\" title=\"struct actix_web::guard::AllGuard\">AllGuard</a>","synthetic":true,"types":["actix_web::guard::AllGuard"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"actix_web/guard/struct.Not.html\" title=\"struct actix_web::guard::Not\">Not</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::guard::Not"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.Accept.html\" title=\"struct actix_web::http::header::Accept\">Accept</a>","synthetic":true,"types":["actix_web::http::header::accept::Accept"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.AcceptCharset.html\" title=\"struct actix_web::http::header::AcceptCharset\">AcceptCharset</a>","synthetic":true,"types":["actix_web::http::header::accept_charset::AcceptCharset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.AcceptEncoding.html\" title=\"struct actix_web::http::header::AcceptEncoding\">AcceptEncoding</a>","synthetic":true,"types":["actix_web::http::header::accept_encoding::AcceptEncoding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.AcceptLanguage.html\" title=\"struct actix_web::http::header::AcceptLanguage\">AcceptLanguage</a>","synthetic":true,"types":["actix_web::http::header::accept_language::AcceptLanguage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.Allow.html\" title=\"struct actix_web::http::header::Allow\">Allow</a>","synthetic":true,"types":["actix_web::http::header::allow::Allow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.CacheControl.html\" title=\"struct actix_web::http::header::CacheControl\">CacheControl</a>","synthetic":true,"types":["actix_web::http::header::cache_control::CacheControl"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/http/header/enum.CacheDirective.html\" title=\"enum actix_web::http::header::CacheDirective\">CacheDirective</a>","synthetic":true,"types":["actix_web::http::header::cache_control::CacheDirective"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/http/header/enum.DispositionType.html\" title=\"enum actix_web::http::header::DispositionType\">DispositionType</a>","synthetic":true,"types":["actix_web::http::header::content_disposition::DispositionType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/http/header/enum.DispositionParam.html\" title=\"enum actix_web::http::header::DispositionParam\">DispositionParam</a>","synthetic":true,"types":["actix_web::http::header::content_disposition::DispositionParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.ContentDisposition.html\" title=\"struct actix_web::http::header::ContentDisposition\">ContentDisposition</a>","synthetic":true,"types":["actix_web::http::header::content_disposition::ContentDisposition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.ContentLanguage.html\" title=\"struct actix_web::http::header::ContentLanguage\">ContentLanguage</a>","synthetic":true,"types":["actix_web::http::header::content_language::ContentLanguage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.ContentRange.html\" title=\"struct actix_web::http::header::ContentRange\">ContentRange</a>","synthetic":true,"types":["actix_web::http::header::content_range::ContentRange"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/http/header/enum.ContentRangeSpec.html\" title=\"enum actix_web::http::header::ContentRangeSpec\">ContentRangeSpec</a>","synthetic":true,"types":["actix_web::http::header::content_range::ContentRangeSpec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.ContentType.html\" title=\"struct actix_web::http::header::ContentType\">ContentType</a>","synthetic":true,"types":["actix_web::http::header::content_type::ContentType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.Date.html\" title=\"struct actix_web::http::header::Date\">Date</a>","synthetic":true,"types":["actix_web::http::header::date::Date"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/http/header/enum.Encoding.html\" title=\"enum actix_web::http::header::Encoding\">Encoding</a>","synthetic":true,"types":["actix_web::http::header::encoding::Encoding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.EntityTag.html\" title=\"struct actix_web::http::header::EntityTag\">EntityTag</a>","synthetic":true,"types":["actix_web::http::header::entity::EntityTag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.ETag.html\" title=\"struct actix_web::http::header::ETag\">ETag</a>","synthetic":true,"types":["actix_web::http::header::etag::ETag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.Expires.html\" title=\"struct actix_web::http::header::Expires\">Expires</a>","synthetic":true,"types":["actix_web::http::header::expires::Expires"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/http/header/enum.IfMatch.html\" title=\"enum actix_web::http::header::IfMatch\">IfMatch</a>","synthetic":true,"types":["actix_web::http::header::if_match::IfMatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.IfModifiedSince.html\" title=\"struct actix_web::http::header::IfModifiedSince\">IfModifiedSince</a>","synthetic":true,"types":["actix_web::http::header::if_modified_since::IfModifiedSince"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/http/header/enum.IfNoneMatch.html\" title=\"enum actix_web::http::header::IfNoneMatch\">IfNoneMatch</a>","synthetic":true,"types":["actix_web::http::header::if_none_match::IfNoneMatch"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/http/header/enum.IfRange.html\" title=\"enum actix_web::http::header::IfRange\">IfRange</a>","synthetic":true,"types":["actix_web::http::header::if_range::IfRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.IfUnmodifiedSince.html\" title=\"struct actix_web::http::header::IfUnmodifiedSince\">IfUnmodifiedSince</a>","synthetic":true,"types":["actix_web::http::header::if_unmodified_since::IfUnmodifiedSince"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/http/header/struct.LastModified.html\" title=\"struct actix_web::http::header::LastModified\">LastModified</a>","synthetic":true,"types":["actix_web::http::header::last_modified::LastModified"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"actix_web/http/header/enum.Preference.html\" title=\"enum actix_web::http::header::Preference\">Preference</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::http::header::preference::Preference"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/http/header/enum.Range.html\" title=\"enum actix_web::http::header::Range\">Range</a>","synthetic":true,"types":["actix_web::http::header::range::Range"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/http/header/enum.ByteRangeSpec.html\" title=\"enum actix_web::http::header::ByteRangeSpec\">ByteRangeSpec</a>","synthetic":true,"types":["actix_web::http::header::range::ByteRangeSpec"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/middleware/struct.Compat.html\" title=\"struct actix_web::middleware::Compat\">Compat</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::middleware::compat::Compat"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/middleware/struct.Condition.html\" title=\"struct actix_web::middleware::Condition\">Condition</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::middleware::condition::Condition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/middleware/struct.DefaultHeaders.html\" title=\"struct actix_web::middleware::DefaultHeaders\">DefaultHeaders</a>","synthetic":true,"types":["actix_web::middleware::default_headers::DefaultHeaders"]},{"text":"impl&lt;B&gt; !Freeze for <a class=\"enum\" href=\"actix_web/middleware/enum.ErrorHandlerResponse.html\" title=\"enum actix_web::middleware::ErrorHandlerResponse\">ErrorHandlerResponse</a>&lt;B&gt;","synthetic":true,"types":["actix_web::middleware::err_handlers::ErrorHandlerResponse"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"actix_web/middleware/struct.ErrorHandlers.html\" title=\"struct actix_web::middleware::ErrorHandlers\">ErrorHandlers</a>&lt;B&gt;","synthetic":true,"types":["actix_web::middleware::err_handlers::ErrorHandlers"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/middleware/struct.Logger.html\" title=\"struct actix_web::middleware::Logger\">Logger</a>","synthetic":true,"types":["actix_web::middleware::logger::Logger"]},{"text":"impl Freeze for <a class=\"enum\" href=\"actix_web/middleware/enum.TrailingSlash.html\" title=\"enum actix_web::middleware::TrailingSlash\">TrailingSlash</a>","synthetic":true,"types":["actix_web::middleware::normalize::TrailingSlash"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/middleware/struct.NormalizePath.html\" title=\"struct actix_web::middleware::NormalizePath\">NormalizePath</a>","synthetic":true,"types":["actix_web::middleware::normalize::NormalizePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/middleware/struct.Compress.html\" title=\"struct actix_web::middleware::Compress\">Compress</a>","synthetic":true,"types":["actix_web::middleware::compress::Compress"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/struct.HttpRequest.html\" title=\"struct actix_web::HttpRequest\">HttpRequest</a>","synthetic":true,"types":["actix_web::request::HttpRequest"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/web/struct.ReqData.html\" title=\"struct actix_web::web::ReqData\">ReqData</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::request_data::ReqData"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/struct.Resource.html\" title=\"struct actix_web::Resource\">Resource</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::resource::Resource"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_web/struct.HttpResponseBuilder.html\" title=\"struct actix_web::HttpResponseBuilder\">HttpResponseBuilder</a>","synthetic":true,"types":["actix_web::response::builder::HttpResponseBuilder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"actix_web/struct.CustomizeResponder.html\" title=\"struct actix_web::CustomizeResponder\">CustomizeResponder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::response::customize_responder::CustomizeResponder"]},{"text":"impl&lt;B&nbsp;=&nbsp;<a class=\"struct\" href=\"actix_web/body/struct.BoxBody.html\" title=\"struct actix_web::body::BoxBody\">BoxBody</a>&gt; !Freeze for <a class=\"struct\" href=\"actix_web/struct.HttpResponse.html\" title=\"struct actix_web::HttpResponse\">HttpResponse</a>&lt;B&gt;","synthetic":true,"types":["actix_web::response::response::HttpResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/struct.Route.html\" title=\"struct actix_web::Route\">Route</a>","synthetic":true,"types":["actix_web::route::Route"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/struct.Scope.html\" title=\"struct actix_web::Scope\">Scope</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::scope::Scope"]},{"text":"impl&lt;F, I, S, B&gt; Freeze for <a class=\"struct\" href=\"actix_web/struct.HttpServer.html\" title=\"struct actix_web::HttpServer\">HttpServer</a>&lt;F, I, S, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::server::HttpServer"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"actix_web/test/struct.TestRequest.html\" title=\"struct actix_web::test::TestRequest\">TestRequest</a>","synthetic":true,"types":["actix_web::test::test_request::TestRequest"]},{"text":"impl&lt;L, R&gt; Freeze for <a class=\"enum\" href=\"actix_web/web/enum.Either.html\" title=\"enum actix_web::web::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::types::either::Either"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/web/struct.Form.html\" title=\"struct actix_web::web::Form\">Form</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::types::form::Form"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/web/struct.FormConfig.html\" title=\"struct actix_web::web::FormConfig\">FormConfig</a>","synthetic":true,"types":["actix_web::types::form::FormConfig"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/web/struct.Header.html\" title=\"struct actix_web::web::Header\">Header</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::types::header::Header"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/web/struct.Json.html\" title=\"struct actix_web::web::Json\">Json</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::types::json::Json"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/web/struct.JsonConfig.html\" title=\"struct actix_web::web::JsonConfig\">JsonConfig</a>","synthetic":true,"types":["actix_web::types::json::JsonConfig"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/web/struct.Path.html\" title=\"struct actix_web::web::Path\">Path</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::types::path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/web/struct.PathConfig.html\" title=\"struct actix_web::web::PathConfig\">PathConfig</a>","synthetic":true,"types":["actix_web::types::path::PathConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/web/struct.Payload.html\" title=\"struct actix_web::web::Payload\">Payload</a>","synthetic":true,"types":["actix_web::types::payload::Payload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/web/struct.PayloadConfig.html\" title=\"struct actix_web::web::PayloadConfig\">PayloadConfig</a>","synthetic":true,"types":["actix_web::types::payload::PayloadConfig"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"actix_web/web/struct.Query.html\" title=\"struct actix_web::web::Query\">Query</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["actix_web::types::query::Query"]},{"text":"impl Freeze for <a class=\"struct\" href=\"actix_web/web/struct.QueryConfig.html\" title=\"struct actix_web::web::QueryConfig\">QueryConfig</a>","synthetic":true,"types":["actix_web::types::query::QueryConfig"]}];
implementors["adler"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"adler/struct.Adler32.html\" title=\"struct adler::Adler32\">Adler32</a>","synthetic":true,"types":["adler::Adler32"]}];
implementors["ahash"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ahash/struct.AHasher.html\" title=\"struct ahash::AHasher\">AHasher</a>","synthetic":true,"types":["ahash::fallback_hash::AHasher"]},{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"ahash/struct.AHashMap.html\" title=\"struct ahash::AHashMap\">AHashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["ahash::hash_map::AHashMap"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"ahash/struct.AHashSet.html\" title=\"struct ahash::AHashSet\">AHashSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["ahash::hash_set::AHashSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ahash/struct.RandomState.html\" title=\"struct ahash::RandomState\">RandomState</a>","synthetic":true,"types":["ahash::random_state::RandomState"]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.AhoCorasick.html\" title=\"struct aho_corasick::AhoCorasick\">AhoCorasick</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::AhoCorasick"]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.FindIter.html\" title=\"struct aho_corasick::FindIter\">FindIter</a>&lt;'a, 'b, S&gt;","synthetic":true,"types":["aho_corasick::ahocorasick::FindIter"]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.FindOverlappingIter.html\" title=\"struct aho_corasick::FindOverlappingIter\">FindOverlappingIter</a>&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::FindOverlappingIter"]},{"text":"impl&lt;'a, R, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.StreamFindIter.html\" title=\"struct aho_corasick::StreamFindIter\">StreamFindIter</a>&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::StreamFindIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.AhoCorasickBuilder.html\" title=\"struct aho_corasick::AhoCorasickBuilder\">AhoCorasickBuilder</a>","synthetic":true,"types":["aho_corasick::ahocorasick::AhoCorasickBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/enum.MatchKind.html\" title=\"enum aho_corasick::MatchKind\">MatchKind</a>","synthetic":true,"types":["aho_corasick::ahocorasick::MatchKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.Error.html\" title=\"struct aho_corasick::Error\">Error</a>","synthetic":true,"types":["aho_corasick::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/enum.ErrorKind.html\" title=\"enum aho_corasick::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["aho_corasick::error::ErrorKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/packed/enum.MatchKind.html\" title=\"enum aho_corasick::packed::MatchKind\">MatchKind</a>","synthetic":true,"types":["aho_corasick::packed::api::MatchKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Config.html\" title=\"struct aho_corasick::packed::Config\">Config</a>","synthetic":true,"types":["aho_corasick::packed::api::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Builder.html\" title=\"struct aho_corasick::packed::Builder\">Builder</a>","synthetic":true,"types":["aho_corasick::packed::api::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Searcher.html\" title=\"struct aho_corasick::packed::Searcher\">Searcher</a>","synthetic":true,"types":["aho_corasick::packed::api::Searcher"]},{"text":"impl&lt;'s, 'h&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.FindIter.html\" title=\"struct aho_corasick::packed::FindIter\">FindIter</a>&lt;'s, 'h&gt;","synthetic":true,"types":["aho_corasick::packed::api::FindIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.Match.html\" title=\"struct aho_corasick::Match\">Match</a>","synthetic":true,"types":["aho_corasick::Match"]}];
implementors["alloc_no_stdlib"] = [{"text":"impl&lt;'a, T, U&gt; Freeze for <a class=\"struct\" href=\"alloc_no_stdlib/struct.StackAllocator.html\" title=\"struct alloc_no_stdlib::StackAllocator\">StackAllocator</a>&lt;'a, T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["alloc_no_stdlib::stack_allocator::StackAllocator"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc_no_stdlib/struct.AllocatedStackMemory.html\" title=\"struct alloc_no_stdlib::AllocatedStackMemory\">AllocatedStackMemory</a>&lt;'a, T&gt;","synthetic":true,"types":["alloc_no_stdlib::allocated_stack_memory::AllocatedStackMemory"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc_no_stdlib/struct.CallocBackingStore.html\" title=\"struct alloc_no_stdlib::CallocBackingStore\">CallocBackingStore</a>&lt;'a, T&gt;","synthetic":true,"types":["alloc_no_stdlib::CallocBackingStore"]},{"text":"impl Freeze for <a class=\"enum\" href=\"alloc_no_stdlib/enum.AllocatorC.html\" title=\"enum alloc_no_stdlib::AllocatorC\">AllocatorC</a>","synthetic":true,"types":["alloc_no_stdlib::AllocatorC"]}];
implementors["alloc_stdlib"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"alloc_stdlib/heap_alloc/struct.WrapBox.html\" title=\"struct alloc_stdlib::heap_alloc::WrapBox\">WrapBox</a>&lt;T&gt;","synthetic":true,"types":["alloc_stdlib::heap_alloc::WrapBox"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"alloc_stdlib/heap_alloc/struct.HeapAlloc.html\" title=\"struct alloc_stdlib::heap_alloc::HeapAlloc\">HeapAlloc</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["alloc_stdlib::heap_alloc::HeapAlloc"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc_stdlib/heap_alloc/struct.HeapPrealloc.html\" title=\"struct alloc_stdlib::heap_alloc::HeapPrealloc\">HeapPrealloc</a>&lt;'a, T&gt;","synthetic":true,"types":["alloc_stdlib::heap_alloc::HeapPrealloc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alloc_stdlib/std_alloc/struct.StandardAlloc.html\" title=\"struct alloc_stdlib::std_alloc::StandardAlloc\">StandardAlloc</a>","synthetic":true,"types":["alloc_stdlib::std_alloc::StandardAlloc"]}];
implementors["askama_escape"] = [{"text":"impl&lt;E, T&gt; Freeze for <a class=\"struct\" href=\"askama_escape/struct.MarkupDisplay.html\" title=\"struct askama_escape::MarkupDisplay\">MarkupDisplay</a>&lt;E, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["askama_escape::MarkupDisplay"]},{"text":"impl&lt;'a, E, W&gt; Freeze for <a class=\"struct\" href=\"askama_escape/struct.EscapeWriter.html\" title=\"struct askama_escape::EscapeWriter\">EscapeWriter</a>&lt;'a, E, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["askama_escape::EscapeWriter"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"askama_escape/struct.Escaped.html\" title=\"struct askama_escape::Escaped\">Escaped</a>&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["askama_escape::Escaped"]},{"text":"impl Freeze for <a class=\"struct\" href=\"askama_escape/struct.Html.html\" title=\"struct askama_escape::Html\">Html</a>","synthetic":true,"types":["askama_escape::Html"]},{"text":"impl Freeze for <a class=\"struct\" href=\"askama_escape/struct.Text.html\" title=\"struct askama_escape::Text\">Text</a>","synthetic":true,"types":["askama_escape::Text"]}];
implementors["atty"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"atty/enum.Stream.html\" title=\"enum atty::Stream\">Stream</a>","synthetic":true,"types":["atty::Stream"]}];
implementors["base64"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"base64/display/struct.Base64Display.html\" title=\"struct base64::display::Base64Display\">Base64Display</a>&lt;'a&gt;","synthetic":true,"types":["base64::display::Base64Display"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"base64/read/struct.DecoderReader.html\" title=\"struct base64::read::DecoderReader\">DecoderReader</a>&lt;'a, R&gt;","synthetic":true,"types":["base64::read::decoder::DecoderReader"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"base64/write/struct.EncoderWriter.html\" title=\"struct base64::write::EncoderWriter\">EncoderWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["base64::write::encoder::EncoderWriter"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"base64/write/struct.EncoderStringWriter.html\" title=\"struct base64::write::EncoderStringWriter\">EncoderStringWriter</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["base64::write::encoder_string_writer::EncoderStringWriter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"base64/enum.DecodeError.html\" title=\"enum base64::DecodeError\">DecodeError</a>","synthetic":true,"types":["base64::decode::DecodeError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"base64/enum.CharacterSet.html\" title=\"enum base64::CharacterSet\">CharacterSet</a>","synthetic":true,"types":["base64::CharacterSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"base64/struct.Config.html\" title=\"struct base64::Config\">Config</a>","synthetic":true,"types":["base64::Config"]}];
implementors["block_buffer"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"block_buffer/struct.Eager.html\" title=\"struct block_buffer::Eager\">Eager</a>","synthetic":true,"types":["block_buffer::Eager"]},{"text":"impl Freeze for <a class=\"struct\" href=\"block_buffer/struct.Lazy.html\" title=\"struct block_buffer::Lazy\">Lazy</a>","synthetic":true,"types":["block_buffer::Lazy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"block_buffer/struct.Error.html\" title=\"struct block_buffer::Error\">Error</a>","synthetic":true,"types":["block_buffer::Error"]},{"text":"impl&lt;BlockSize, Kind&gt; Freeze for <a class=\"struct\" href=\"block_buffer/struct.BlockBuffer.html\" title=\"struct block_buffer::BlockBuffer\">BlockBuffer</a>&lt;BlockSize, Kind&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;BlockSize as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["block_buffer::BlockBuffer"]}];
implementors["brotli"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/input_pair/struct.InputReference.html\" title=\"struct brotli::enc::input_pair::InputReference\">InputReference</a>&lt;'a&gt;","synthetic":true,"types":["brotli::enc::input_pair::InputReference"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/input_pair/struct.InputReferenceMut.html\" title=\"struct brotli::enc::input_pair::InputReferenceMut\">InputReferenceMut</a>&lt;'a&gt;","synthetic":true,"types":["brotli::enc::input_pair::InputReferenceMut"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/input_pair/struct.InputPair.html\" title=\"struct brotli::enc::input_pair::InputPair\">InputPair</a>&lt;'a&gt;","synthetic":true,"types":["brotli::enc::input_pair::InputPair"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/command/struct.BrotliDistanceParams.html\" title=\"struct brotli::enc::command::BrotliDistanceParams\">BrotliDistanceParams</a>","synthetic":true,"types":["brotli::enc::command::BrotliDistanceParams"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/command/struct.Command.html\" title=\"struct brotli::enc::command::Command\">Command</a>","synthetic":true,"types":["brotli::enc::command::Command"]},{"text":"impl&lt;Alloc&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/block_split/struct.BlockSplit.html\" title=\"struct brotli::enc::block_split::BlockSplit\">BlockSplit</a>&lt;Alloc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::block_split::BlockSplit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/brotli_bit_stream/struct.PrefixCodeRange.html\" title=\"struct brotli::enc::brotli_bit_stream::PrefixCodeRange\">PrefixCodeRange</a>","synthetic":true,"types":["brotli::enc::brotli_bit_stream::PrefixCodeRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/brotli_bit_stream/struct.SimpleSortHuffmanTree.html\" title=\"struct brotli::enc::brotli_bit_stream::SimpleSortHuffmanTree\">SimpleSortHuffmanTree</a>","synthetic":true,"types":["brotli::enc::brotli_bit_stream::SimpleSortHuffmanTree"]},{"text":"impl&lt;Alloc&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/brotli_bit_stream/struct.MetaBlockSplit.html\" title=\"struct brotli::enc::brotli_bit_stream::MetaBlockSplit\">MetaBlockSplit</a>&lt;Alloc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"brotli/enc/histogram/struct.HistogramLiteral.html\" title=\"struct brotli::enc::histogram::HistogramLiteral\">HistogramLiteral</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"brotli/enc/histogram/struct.HistogramCommand.html\" title=\"struct brotli::enc::histogram::HistogramCommand\">HistogramCommand</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"brotli/enc/histogram/struct.HistogramDistance.html\" title=\"struct brotli::enc::histogram::HistogramDistance\">HistogramDistance</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::brotli_bit_stream::MetaBlockSplit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/brotli_bit_stream/struct.BlockTypeCodeCalculator.html\" title=\"struct brotli::enc::brotli_bit_stream::BlockTypeCodeCalculator\">BlockTypeCodeCalculator</a>","synthetic":true,"types":["brotli::enc::brotli_bit_stream::BlockTypeCodeCalculator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/brotli_bit_stream/struct.BlockSplitCode.html\" title=\"struct brotli::enc::brotli_bit_stream::BlockSplitCode\">BlockSplitCode</a>","synthetic":true,"types":["brotli::enc::brotli_bit_stream::BlockSplitCode"]},{"text":"impl&lt;'a, Alloc&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/brotli_bit_stream/struct.BlockEncoder.html\" title=\"struct brotli::enc::brotli_bit_stream::BlockEncoder\">BlockEncoder</a>&lt;'a, Alloc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::brotli_bit_stream::BlockEncoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/brotli_bit_stream/struct.RecoderState.html\" title=\"struct brotli::enc::brotli_bit_stream::RecoderState\">RecoderState</a>","synthetic":true,"types":["brotli::enc::brotli_bit_stream::RecoderState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/entropy_encode/struct.HuffmanTree.html\" title=\"struct brotli::enc::entropy_encode::HuffmanTree\">HuffmanTree</a>","synthetic":true,"types":["brotli::enc::entropy_encode::HuffmanTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/entropy_encode/struct.SortHuffmanTree.html\" title=\"struct brotli::enc::entropy_encode::SortHuffmanTree\">SortHuffmanTree</a>","synthetic":true,"types":["brotli::enc::entropy_encode::SortHuffmanTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/static_dict/struct.BrotliDictionary.html\" title=\"struct brotli::enc::static_dict::BrotliDictionary\">BrotliDictionary</a>","synthetic":true,"types":["brotli::enc::static_dict::BrotliDictionary"]},{"text":"impl&lt;AllocU8, AllocU16, AllocI32, AllocU32, AllocU64, AllocCommand, AllocFloatX, AllocV8, AllocS16, AllocPDF, AllocStaticCommand, AllocHistogramLiteral, AllocHistogramCommand, AllocHistogramDistance, AllocHistogramPair, AllocContextType, AllocHuffmanTree, AllocZopfliNode&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/combined_alloc/struct.CombiningAllocator.html\" title=\"struct brotli::enc::combined_alloc::CombiningAllocator\">CombiningAllocator</a>&lt;AllocU8, AllocU16, AllocI32, AllocU32, AllocU64, AllocCommand, AllocFloatX, AllocV8, AllocS16, AllocPDF, AllocStaticCommand, AllocHistogramLiteral, AllocHistogramCommand, AllocHistogramDistance, AllocHistogramPair, AllocContextType, AllocHuffmanTree, AllocZopfliNode&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocCommand: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocContextType: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocFloatX: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocHistogramCommand: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocHistogramDistance: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocHistogramLiteral: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocHistogramPair: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocHuffmanTree: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocI32: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocPDF: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocS16: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocStaticCommand: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocU16: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocU32: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocU64: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocU8: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocV8: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocZopfliNode: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::combined_alloc::CombiningAllocator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/static_dict_lut/struct.DictWord.html\" title=\"struct brotli::enc::static_dict_lut::DictWord\">DictWord</a>","synthetic":true,"types":["brotli::enc::static_dict_lut::DictWord"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/cluster/struct.HistogramPair.html\" title=\"struct brotli::enc::cluster::HistogramPair\">HistogramPair</a>","synthetic":true,"types":["brotli::enc::cluster::HistogramPair"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/histogram/struct.HistogramLiteral.html\" title=\"struct brotli::enc::histogram::HistogramLiteral\">HistogramLiteral</a>","synthetic":true,"types":["brotli::enc::histogram::HistogramLiteral"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/histogram/struct.HistogramCommand.html\" title=\"struct brotli::enc::histogram::HistogramCommand\">HistogramCommand</a>","synthetic":true,"types":["brotli::enc::histogram::HistogramCommand"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/histogram/struct.HistogramDistance.html\" title=\"struct brotli::enc::histogram::HistogramDistance\">HistogramDistance</a>","synthetic":true,"types":["brotli::enc::histogram::HistogramDistance"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/histogram/struct.Array264i.html\" title=\"struct brotli::enc::histogram::Array264i\">Array264i</a>","synthetic":true,"types":["brotli::enc::histogram::Array264i"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/histogram/struct.Array528i.html\" title=\"struct brotli::enc::histogram::Array528i\">Array528i</a>","synthetic":true,"types":["brotli::enc::histogram::Array528i"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/histogram/struct.Array712i.html\" title=\"struct brotli::enc::histogram::Array712i\">Array712i</a>","synthetic":true,"types":["brotli::enc::histogram::Array712i"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/histogram/struct.EmptyIVec.html\" title=\"struct brotli::enc::histogram::EmptyIVec\">EmptyIVec</a>","synthetic":true,"types":["brotli::enc::histogram::EmptyIVec"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli/enc/histogram/enum.ContextType.html\" title=\"enum brotli::enc::histogram::ContextType\">ContextType</a>","synthetic":true,"types":["brotli::enc::histogram::ContextType"]},{"text":"impl&lt;'a, Alloc&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/histogram/struct.BlockSplitIterator.html\" title=\"struct brotli::enc::histogram::BlockSplitIterator\">BlockSplitIterator</a>&lt;'a, Alloc&gt;","synthetic":true,"types":["brotli::enc::histogram::BlockSplitIterator"]},{"text":"impl&lt;AllocF&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/hq/struct.ZopfliCostModel.html\" title=\"struct brotli::enc::backward_references::hq::ZopfliCostModel\">ZopfliCostModel</a>&lt;AllocF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocF as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.f32.html\">f32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::backward_references::hq::ZopfliCostModel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/hq/struct.PosData.html\" title=\"struct brotli::enc::backward_references::hq::PosData\">PosData</a>","synthetic":true,"types":["brotli::enc::backward_references::hq::PosData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/hq/struct.StartPosQueue.html\" title=\"struct brotli::enc::backward_references::hq::StartPosQueue\">StartPosQueue</a>","synthetic":true,"types":["brotli::enc::backward_references::hq::StartPosQueue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli/enc/backward_references/hash_to_binary_tree/enum.Union1.html\" title=\"enum brotli::enc::backward_references::hash_to_binary_tree::Union1\">Union1</a>","synthetic":true,"types":["brotli::enc::backward_references::hash_to_binary_tree::Union1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/hash_to_binary_tree/struct.ZopfliNode.html\" title=\"struct brotli::enc::backward_references::hash_to_binary_tree::ZopfliNode\">ZopfliNode</a>","synthetic":true,"types":["brotli::enc::backward_references::hash_to_binary_tree::ZopfliNode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/hash_to_binary_tree/struct.H10DefaultParams.html\" title=\"struct brotli::enc::backward_references::hash_to_binary_tree::H10DefaultParams\">H10DefaultParams</a>","synthetic":true,"types":["brotli::enc::backward_references::hash_to_binary_tree::H10DefaultParams"]},{"text":"impl&lt;AllocU32&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/hash_to_binary_tree/struct.H10Buckets.html\" title=\"struct brotli::enc::backward_references::hash_to_binary_tree::H10Buckets\">H10Buckets</a>&lt;AllocU32&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU32 as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::backward_references::hash_to_binary_tree::H10Buckets"]},{"text":"impl&lt;AllocU32, Buckets, Params&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/hash_to_binary_tree/struct.H10.html\" title=\"struct brotli::enc::backward_references::hash_to_binary_tree::H10\">H10</a>&lt;AllocU32, Buckets, Params&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Buckets: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU32 as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::backward_references::hash_to_binary_tree::H10"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/hash_to_binary_tree/struct.BackwardMatch.html\" title=\"struct brotli::enc::backward_references::hash_to_binary_tree::BackwardMatch\">BackwardMatch</a>","synthetic":true,"types":["brotli::enc::backward_references::hash_to_binary_tree::BackwardMatch"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/hash_to_binary_tree/struct.BackwardMatchMut.html\" title=\"struct brotli::enc::backward_references::hash_to_binary_tree::BackwardMatchMut\">BackwardMatchMut</a>&lt;'a&gt;","synthetic":true,"types":["brotli::enc::backward_references::hash_to_binary_tree::BackwardMatchMut"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli/enc/backward_references/enum.BrotliEncoderMode.html\" title=\"enum brotli::enc::backward_references::BrotliEncoderMode\">BrotliEncoderMode</a>","synthetic":true,"types":["brotli::enc::backward_references::BrotliEncoderMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.BrotliHasherParams.html\" title=\"struct brotli::enc::backward_references::BrotliHasherParams\">BrotliHasherParams</a>","synthetic":true,"types":["brotli::enc::backward_references::BrotliHasherParams"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.BrotliEncoderParams.html\" title=\"struct brotli::enc::backward_references::BrotliEncoderParams\">BrotliEncoderParams</a>","synthetic":true,"types":["brotli::enc::backward_references::BrotliEncoderParams"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.H9Opts.html\" title=\"struct brotli::enc::backward_references::H9Opts\">H9Opts</a>","synthetic":true,"types":["brotli::enc::backward_references::H9Opts"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli/enc/backward_references/enum.HowPrepared.html\" title=\"enum brotli::enc::backward_references::HowPrepared\">HowPrepared</a>","synthetic":true,"types":["brotli::enc::backward_references::HowPrepared"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.Struct1.html\" title=\"struct brotli::enc::backward_references::Struct1\">Struct1</a>","synthetic":true,"types":["brotli::enc::backward_references::Struct1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.HasherSearchResult.html\" title=\"struct brotli::enc::backward_references::HasherSearchResult\">HasherSearchResult</a>","synthetic":true,"types":["brotli::enc::backward_references::HasherSearchResult"]},{"text":"impl&lt;Buckets&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.BasicHasher.html\" title=\"struct brotli::enc::backward_references::BasicHasher\">BasicHasher</a>&lt;Buckets&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Buckets: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::backward_references::BasicHasher"]},{"text":"impl&lt;AllocU32&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.H2Sub.html\" title=\"struct brotli::enc::backward_references::H2Sub\">H2Sub</a>&lt;AllocU32&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU32 as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::backward_references::H2Sub"]},{"text":"impl&lt;AllocU32&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.H3Sub.html\" title=\"struct brotli::enc::backward_references::H3Sub\">H3Sub</a>&lt;AllocU32&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU32 as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::backward_references::H3Sub"]},{"text":"impl&lt;AllocU32&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.H4Sub.html\" title=\"struct brotli::enc::backward_references::H4Sub\">H4Sub</a>&lt;AllocU32&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU32 as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::backward_references::H4Sub"]},{"text":"impl&lt;AllocU32&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.H54Sub.html\" title=\"struct brotli::enc::backward_references::H54Sub\">H54Sub</a>&lt;AllocU32&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU32 as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::backward_references::H54Sub"]},{"text":"impl&lt;Alloc&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.H9.html\" title=\"struct brotli::enc::backward_references::H9\">H9</a>&lt;Alloc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::backward_references::H9"]},{"text":"impl&lt;Specialization, Alloc&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.AdvHasher.html\" title=\"struct brotli::enc::backward_references::AdvHasher\">AdvHasher</a>&lt;Specialization, Alloc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Specialization: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::backward_references::AdvHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.HQ5Sub.html\" title=\"struct brotli::enc::backward_references::HQ5Sub\">HQ5Sub</a>","synthetic":true,"types":["brotli::enc::backward_references::HQ5Sub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.HQ7Sub.html\" title=\"struct brotli::enc::backward_references::HQ7Sub\">HQ7Sub</a>","synthetic":true,"types":["brotli::enc::backward_references::HQ7Sub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.H5Sub.html\" title=\"struct brotli::enc::backward_references::H5Sub\">H5Sub</a>","synthetic":true,"types":["brotli::enc::backward_references::H5Sub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.H6Sub.html\" title=\"struct brotli::enc::backward_references::H6Sub\">H6Sub</a>","synthetic":true,"types":["brotli::enc::backward_references::H6Sub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.BankH40.html\" title=\"struct brotli::enc::backward_references::BankH40\">BankH40</a>","synthetic":true,"types":["brotli::enc::backward_references::BankH40"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.BankH41.html\" title=\"struct brotli::enc::backward_references::BankH41\">BankH41</a>","synthetic":true,"types":["brotli::enc::backward_references::BankH41"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.BankH42.html\" title=\"struct brotli::enc::backward_references::BankH42\">BankH42</a>","synthetic":true,"types":["brotli::enc::backward_references::BankH42"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.SlotH40.html\" title=\"struct brotli::enc::backward_references::SlotH40\">SlotH40</a>","synthetic":true,"types":["brotli::enc::backward_references::SlotH40"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.SlotH41.html\" title=\"struct brotli::enc::backward_references::SlotH41\">SlotH41</a>","synthetic":true,"types":["brotli::enc::backward_references::SlotH41"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.SlotH42.html\" title=\"struct brotli::enc::backward_references::SlotH42\">SlotH42</a>","synthetic":true,"types":["brotli::enc::backward_references::SlotH42"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.H40.html\" title=\"struct brotli::enc::backward_references::H40\">H40</a>","synthetic":true,"types":["brotli::enc::backward_references::H40"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.H41.html\" title=\"struct brotli::enc::backward_references::H41\">H41</a>","synthetic":true,"types":["brotli::enc::backward_references::H41"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/backward_references/struct.H42.html\" title=\"struct brotli::enc::backward_references::H42\">H42</a>","synthetic":true,"types":["brotli::enc::backward_references::H42"]},{"text":"impl&lt;Alloc&gt; Freeze for <a class=\"enum\" href=\"brotli/enc/backward_references/enum.UnionHasher.html\" title=\"enum brotli::enc::backward_references::UnionHasher\">UnionHasher</a>&lt;Alloc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::backward_references::UnionHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/metablock/struct.BlockSplitter.html\" title=\"struct brotli::enc::metablock::BlockSplitter\">BlockSplitter</a>","synthetic":true,"types":["brotli::enc::metablock::BlockSplitter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/metablock/struct.ContextBlockSplitter.html\" title=\"struct brotli::enc::metablock::ContextBlockSplitter\">ContextBlockSplitter</a>","synthetic":true,"types":["brotli::enc::metablock::ContextBlockSplitter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli/enc/compress_fragment/enum.CodeBlockState.html\" title=\"enum brotli::enc::compress_fragment::CodeBlockState\">CodeBlockState</a>","synthetic":true,"types":["brotli::enc::compress_fragment::CodeBlockState"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli/enc/encode/enum.BrotliEncoderParameter.html\" title=\"enum brotli::enc::encode::BrotliEncoderParameter\">BrotliEncoderParameter</a>","synthetic":true,"types":["brotli::enc::parameters::BrotliEncoderParameter"]},{"text":"impl&lt;AllocU8&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/encode/struct.RingBuffer.html\" title=\"struct brotli::enc::encode::RingBuffer\">RingBuffer</a>&lt;AllocU8&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU8 as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::encode::RingBuffer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli/enc/encode/enum.BrotliEncoderStreamState.html\" title=\"enum brotli::enc::encode::BrotliEncoderStreamState\">BrotliEncoderStreamState</a>","synthetic":true,"types":["brotli::enc::encode::BrotliEncoderStreamState"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli/enc/encode/enum.IsFirst.html\" title=\"enum brotli::enc::encode::IsFirst\">IsFirst</a>","synthetic":true,"types":["brotli::enc::encode::IsFirst"]},{"text":"impl&lt;Alloc&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/encode/struct.BrotliEncoderStateStruct.html\" title=\"struct brotli::enc::encode::BrotliEncoderStateStruct\">BrotliEncoderStateStruct</a>&lt;Alloc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Alloc: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"brotli/enc/command/struct.Command.html\" title=\"struct brotli::enc::command::Command\">Command</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::encode::BrotliEncoderStateStruct"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli/enc/encode/enum.BrotliEncoderOperation.html\" title=\"enum brotli::enc::encode::BrotliEncoderOperation\">BrotliEncoderOperation</a>","synthetic":true,"types":["brotli::enc::encode::BrotliEncoderOperation"]},{"text":"impl&lt;R, BufferType, Alloc&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/reader/struct.CompressorReaderCustomAlloc.html\" title=\"struct brotli::enc::reader::CompressorReaderCustomAlloc\">CompressorReaderCustomAlloc</a>&lt;R, BufferType, Alloc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Alloc: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;BufferType: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"brotli/enc/command/struct.Command.html\" title=\"struct brotli::enc::command::Command\">Command</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::reader::CompressorReaderCustomAlloc"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/reader/struct.CompressorReader.html\" title=\"struct brotli::enc::reader::CompressorReader\">CompressorReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::reader::CompressorReader"]},{"text":"impl&lt;ErrType, R, BufferType, Alloc&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/reader/struct.CompressorReaderCustomIo.html\" title=\"struct brotli::enc::reader::CompressorReaderCustomIo\">CompressorReaderCustomIo</a>&lt;ErrType, R, BufferType, Alloc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Alloc: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;BufferType: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ErrType: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"brotli/enc/command/struct.Command.html\" title=\"struct brotli::enc::command::Command\">Command</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::reader::CompressorReaderCustomIo"]},{"text":"impl&lt;W, BufferType, Alloc&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/writer/struct.CompressorWriterCustomAlloc.html\" title=\"struct brotli::enc::writer::CompressorWriterCustomAlloc\">CompressorWriterCustomAlloc</a>&lt;W, BufferType, Alloc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Alloc: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;BufferType: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"brotli/enc/command/struct.Command.html\" title=\"struct brotli::enc::command::Command\">Command</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::writer::CompressorWriterCustomAlloc"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/writer/struct.CompressorWriter.html\" title=\"struct brotli::enc::writer::CompressorWriter\">CompressorWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::writer::CompressorWriter"]},{"text":"impl&lt;ErrType, W, BufferType, Alloc&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/writer/struct.CompressorWriterCustomIo.html\" title=\"struct brotli::enc::writer::CompressorWriterCustomIo\">CompressorWriterCustomIo</a>&lt;ErrType, W, BufferType, Alloc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Alloc: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;BufferType: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ErrType: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"brotli/enc/command/struct.Command.html\" title=\"struct brotli::enc::command::Command\">Command</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::writer::CompressorWriterCustomIo"]},{"text":"impl&lt;AllocU32&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/find_stride/struct.EntropyBucketPopulation.html\" title=\"struct brotli::enc::find_stride::EntropyBucketPopulation\">EntropyBucketPopulation</a>&lt;AllocU32&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU32 as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::find_stride::EntropyBucketPopulation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/find_stride/struct.BucketPopIndex.html\" title=\"struct brotli::enc::find_stride::BucketPopIndex\">BucketPopIndex</a>","synthetic":true,"types":["brotli::enc::find_stride::BucketPopIndex"]},{"text":"impl&lt;AllocU32&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/find_stride/struct.EntropyTally.html\" title=\"struct brotli::enc::find_stride::EntropyTally\">EntropyTally</a>&lt;AllocU32&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU32 as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::find_stride::EntropyTally"]},{"text":"impl&lt;AllocU32&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/find_stride/struct.EntropyPyramid.html\" title=\"struct brotli::enc::find_stride::EntropyPyramid\">EntropyPyramid</a>&lt;AllocU32&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU32 as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::find_stride::EntropyPyramid"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/interface/struct.BlockSwitch.html\" title=\"struct brotli::enc::interface::BlockSwitch\">BlockSwitch</a>","synthetic":true,"types":["brotli::enc::interface::BlockSwitch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/interface/struct.LiteralBlockSwitch.html\" title=\"struct brotli::enc::interface::LiteralBlockSwitch\">LiteralBlockSwitch</a>","synthetic":true,"types":["brotli::enc::interface::LiteralBlockSwitch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/interface/struct.LiteralPredictionModeNibble.html\" title=\"struct brotli::enc::interface::LiteralPredictionModeNibble\">LiteralPredictionModeNibble</a>","synthetic":true,"types":["brotli::enc::interface::LiteralPredictionModeNibble"]},{"text":"impl&lt;SliceType&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/interface/struct.PredictionModeContextMap.html\" title=\"struct brotli::enc::interface::PredictionModeContextMap\">PredictionModeContextMap</a>&lt;SliceType&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SliceType: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::interface::PredictionModeContextMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/interface/struct.CopyCommand.html\" title=\"struct brotli::enc::interface::CopyCommand\">CopyCommand</a>","synthetic":true,"types":["brotli::enc::interface::CopyCommand"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/interface/struct.DictCommand.html\" title=\"struct brotli::enc::interface::DictCommand\">DictCommand</a>","synthetic":true,"types":["brotli::enc::interface::DictCommand"]},{"text":"impl&lt;SliceType&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/interface/struct.FeatureFlagSliceType.html\" title=\"struct brotli::enc::interface::FeatureFlagSliceType\">FeatureFlagSliceType</a>&lt;SliceType&gt;","synthetic":true,"types":["brotli::enc::interface::FeatureFlagSliceType"]},{"text":"impl&lt;SliceType&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/interface/struct.LiteralCommand.html\" title=\"struct brotli::enc::interface::LiteralCommand\">LiteralCommand</a>&lt;SliceType&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SliceType: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::interface::LiteralCommand"]},{"text":"impl&lt;SliceType&gt; Freeze for <a class=\"enum\" href=\"brotli/enc/interface/enum.Command.html\" title=\"enum brotli::enc::interface::Command\">Command</a>&lt;SliceType&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SliceType: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::interface::Command"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/interface/struct.SliceOffset.html\" title=\"struct brotli::enc::interface::SliceOffset\">SliceOffset</a>","synthetic":true,"types":["brotli::enc::interface::SliceOffset"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli/enc/prior_eval/enum.WhichPrior.html\" title=\"enum brotli::enc::prior_eval::WhichPrior\">WhichPrior</a>","synthetic":true,"types":["brotli::enc::prior_eval::WhichPrior"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/prior_eval/struct.Stride1Prior.html\" title=\"struct brotli::enc::prior_eval::Stride1Prior\">Stride1Prior</a>","synthetic":true,"types":["brotli::enc::prior_eval::Stride1Prior"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/prior_eval/struct.Stride2Prior.html\" title=\"struct brotli::enc::prior_eval::Stride2Prior\">Stride2Prior</a>","synthetic":true,"types":["brotli::enc::prior_eval::Stride2Prior"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/prior_eval/struct.Stride3Prior.html\" title=\"struct brotli::enc::prior_eval::Stride3Prior\">Stride3Prior</a>","synthetic":true,"types":["brotli::enc::prior_eval::Stride3Prior"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/prior_eval/struct.Stride4Prior.html\" title=\"struct brotli::enc::prior_eval::Stride4Prior\">Stride4Prior</a>","synthetic":true,"types":["brotli::enc::prior_eval::Stride4Prior"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/prior_eval/struct.CMPrior.html\" title=\"struct brotli::enc::prior_eval::CMPrior\">CMPrior</a>","synthetic":true,"types":["brotli::enc::prior_eval::CMPrior"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/prior_eval/struct.FastCMPrior.html\" title=\"struct brotli::enc::prior_eval::FastCMPrior\">FastCMPrior</a>","synthetic":true,"types":["brotli::enc::prior_eval::FastCMPrior"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/prior_eval/struct.SlowCMPrior.html\" title=\"struct brotli::enc::prior_eval::SlowCMPrior\">SlowCMPrior</a>","synthetic":true,"types":["brotli::enc::prior_eval::SlowCMPrior"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/prior_eval/struct.AdvPrior.html\" title=\"struct brotli::enc::prior_eval::AdvPrior\">AdvPrior</a>","synthetic":true,"types":["brotli::enc::prior_eval::AdvPrior"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/prior_eval/struct.CDF.html\" title=\"struct brotli::enc::prior_eval::CDF\">CDF</a>&lt;'a&gt;","synthetic":true,"types":["brotli::enc::prior_eval::CDF"]},{"text":"impl&lt;'a, Alloc&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/prior_eval/struct.PriorEval.html\" title=\"struct brotli::enc::prior_eval::PriorEval\">PriorEval</a>&lt;'a, Alloc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;Compat16x16&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;CompatF8&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::prior_eval::PriorEval"]},{"text":"impl&lt;'a, Alloc&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/stride_eval/struct.StrideEval.html\" title=\"struct brotli::enc::stride_eval::StrideEval\">StrideEval</a>&lt;'a, Alloc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.f32.html\">f32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::stride_eval::StrideEval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/context_map_entropy/struct.SpeedAndMax.html\" title=\"struct brotli::enc::context_map_entropy::SpeedAndMax\">SpeedAndMax</a>","synthetic":true,"types":["brotli::enc::context_map_entropy::SpeedAndMax"]},{"text":"impl&lt;'a, Alloc&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/context_map_entropy/struct.ContextMapEntropy.html\" title=\"struct brotli::enc::context_map_entropy::ContextMapEntropy\">ContextMapEntropy</a>&lt;'a, Alloc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::context_map_entropy::ContextMapEntropy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/pdf/struct.PDF.html\" title=\"struct brotli::enc::pdf::PDF\">PDF</a>","synthetic":true,"types":["brotli::enc::pdf::PDF"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli/enc/threading/enum.BrotliEncoderThreadError.html\" title=\"enum brotli::enc::threading::BrotliEncoderThreadError\">BrotliEncoderThreadError</a>","synthetic":true,"types":["brotli::enc::threading::BrotliEncoderThreadError"]},{"text":"impl&lt;Alloc&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/threading/struct.CompressedFileChunk.html\" title=\"struct brotli::enc::threading::CompressedFileChunk\">CompressedFileChunk</a>&lt;Alloc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::threading::CompressedFileChunk"]},{"text":"impl&lt;Alloc&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/threading/struct.CompressionThreadResult.html\" title=\"struct brotli::enc::threading::CompressionThreadResult\">CompressionThreadResult</a>&lt;Alloc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Alloc: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc as <a class=\"trait\" href=\"brotli/writer/trait.Allocator.html\" title=\"trait brotli::writer::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli/writer/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli::writer::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::threading::CompressionThreadResult"]},{"text":"impl&lt;ReturnVal, ExtraInput, Alloc, Join&gt; Freeze for <a class=\"enum\" href=\"brotli/enc/threading/enum.InternalSendAlloc.html\" title=\"enum brotli::enc::threading::InternalSendAlloc\">InternalSendAlloc</a>&lt;ReturnVal, ExtraInput, Alloc, Join&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Alloc: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ExtraInput: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Join: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::threading::InternalSendAlloc"]},{"text":"impl&lt;ReturnValue, ExtraInput, Alloc, Join&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/threading/struct.SendAlloc.html\" title=\"struct brotli::enc::threading::SendAlloc\">SendAlloc</a>&lt;ReturnValue, ExtraInput, Alloc, Join&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Alloc: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ExtraInput: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Join: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::threading::SendAlloc"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"brotli/enc/threading/enum.InternalOwned.html\" title=\"enum brotli::enc::threading::InternalOwned\">InternalOwned</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::threading::InternalOwned"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/threading/struct.Owned.html\" title=\"struct brotli::enc::threading::Owned\">Owned</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::threading::Owned"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/singlethreading/struct.SingleThreadedJoinable.html\" title=\"struct brotli::enc::singlethreading::SingleThreadedJoinable\">SingleThreadedJoinable</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::singlethreading::SingleThreadedJoinable"]},{"text":"impl&lt;U&gt; !Freeze for <a class=\"struct\" href=\"brotli/enc/singlethreading/struct.SingleThreadedOwnedRetriever.html\" title=\"struct brotli::enc::singlethreading::SingleThreadedOwnedRetriever\">SingleThreadedOwnedRetriever</a>&lt;U&gt;","synthetic":true,"types":["brotli::enc::singlethreading::SingleThreadedOwnedRetriever"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/singlethreading/struct.SingleThreadedSpawner.html\" title=\"struct brotli::enc::singlethreading::SingleThreadedSpawner\">SingleThreadedSpawner</a>","synthetic":true,"types":["brotli::enc::singlethreading::SingleThreadedSpawner"]},{"text":"impl&lt;A, B, C, D&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/singlethreading/struct.WorkerPool.html\" title=\"struct brotli::enc::singlethreading::WorkerPool\">WorkerPool</a>&lt;A, B, C, D&gt;","synthetic":true,"types":["brotli::enc::singlethreading::WorkerPool"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/multithreading/struct.MultiThreadedJoinable.html\" title=\"struct brotli::enc::multithreading::MultiThreadedJoinable\">MultiThreadedJoinable</a>&lt;T, U&gt;","synthetic":true,"types":["brotli::enc::multithreading::MultiThreadedJoinable"]},{"text":"impl&lt;U&gt; !Freeze for <a class=\"struct\" href=\"brotli/enc/multithreading/struct.MultiThreadedOwnedRetriever.html\" title=\"struct brotli::enc::multithreading::MultiThreadedOwnedRetriever\">MultiThreadedOwnedRetriever</a>&lt;U&gt;","synthetic":true,"types":["brotli::enc::multithreading::MultiThreadedOwnedRetriever"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/enc/multithreading/struct.MultiThreadedSpawner.html\" title=\"struct brotli::enc::multithreading::MultiThreadedSpawner\">MultiThreadedSpawner</a>","synthetic":true,"types":["brotli::enc::multithreading::MultiThreadedSpawner"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/fixed_queue/struct.FixedQueue.html\" title=\"struct brotli::enc::fixed_queue::FixedQueue\">FixedQueue</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli::enc::fixed_queue::FixedQueue"]},{"text":"impl&lt;ReturnValue, ExtraInput, Alloc, U&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/worker_pool/struct.GuardedQueue.html\" title=\"struct brotli::enc::worker_pool::GuardedQueue\">GuardedQueue</a>&lt;ReturnValue, ExtraInput, Alloc, U&gt;","synthetic":true,"types":["brotli::enc::worker_pool::GuardedQueue"]},{"text":"impl&lt;ReturnValue, ExtraInput, Alloc, U&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/worker_pool/struct.WorkerPool.html\" title=\"struct brotli::enc::worker_pool::WorkerPool\">WorkerPool</a>&lt;ReturnValue, ExtraInput, Alloc, U&gt;","synthetic":true,"types":["brotli::enc::worker_pool::WorkerPool"]},{"text":"impl&lt;ReturnValue, ExtraInput, Alloc, U&gt; Freeze for <a class=\"struct\" href=\"brotli/enc/worker_pool/struct.WorkerJoinable.html\" title=\"struct brotli::enc::worker_pool::WorkerJoinable\">WorkerJoinable</a>&lt;ReturnValue, ExtraInput, Alloc, U&gt;","synthetic":true,"types":["brotli::enc::worker_pool::WorkerJoinable"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli/concat/enum.BroCatliResult.html\" title=\"enum brotli::concat::BroCatliResult\">BroCatliResult</a>","synthetic":true,"types":["brotli::concat::BroCatliResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/concat/struct.BroCatli.html\" title=\"struct brotli::concat::BroCatli\">BroCatli</a>","synthetic":true,"types":["brotli::concat::BroCatli"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/ffi/alloc_util/struct.BrotliSubclassableAllocator.html\" title=\"struct brotli::ffi::alloc_util::BrotliSubclassableAllocator\">BrotliSubclassableAllocator</a>","synthetic":true,"types":["brotli::ffi::alloc_util::BrotliSubclassableAllocator"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"brotli/ffi/alloc_util/struct.SendableMemoryBlock.html\" title=\"struct brotli::ffi::alloc_util::SendableMemoryBlock\">SendableMemoryBlock</a>&lt;T&gt;","synthetic":true,"types":["brotli::ffi::alloc_util::SendableMemoryBlock"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli/ffi/compressor/enum.BrotliEncoderOperation.html\" title=\"enum brotli::ffi::compressor::BrotliEncoderOperation\">BrotliEncoderOperation</a>","synthetic":true,"types":["brotli::ffi::compressor::BrotliEncoderOperation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli/ffi/compressor/enum.BrotliEncoderMode.html\" title=\"enum brotli::ffi::compressor::BrotliEncoderMode\">BrotliEncoderMode</a>","synthetic":true,"types":["brotli::ffi::compressor::BrotliEncoderMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/ffi/compressor/struct.BrotliEncoderState.html\" title=\"struct brotli::ffi::compressor::BrotliEncoderState\">BrotliEncoderState</a>","synthetic":true,"types":["brotli::ffi::compressor::BrotliEncoderState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/ffi/broccoli/struct.BroccoliState.html\" title=\"struct brotli::ffi::broccoli::BroccoliState\">BroccoliState</a>","synthetic":true,"types":["brotli::ffi::broccoli::BroccoliState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli/ffi/multicompress/struct.BrotliEncoderWorkPool.html\" title=\"struct brotli::ffi::multicompress::BrotliEncoderWorkPool\">BrotliEncoderWorkPool</a>","synthetic":true,"types":["brotli::ffi::multicompress::BrotliEncoderWorkPool"]}];
implementors["brotli_decompressor"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"brotli_decompressor/reader/struct.HuffmanCode.html\" title=\"struct brotli_decompressor::reader::HuffmanCode\">HuffmanCode</a>","synthetic":true,"types":["brotli_decompressor::huffman::HuffmanCode"]},{"text":"impl&lt;Alloc32, AllocHC&gt; Freeze for <a class=\"struct\" href=\"brotli_decompressor/reader/struct.HuffmanTreeGroup.html\" title=\"struct brotli_decompressor::reader::HuffmanTreeGroup\">HuffmanTreeGroup</a>&lt;Alloc32, AllocHC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Alloc32 as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocHC as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"brotli_decompressor/reader/struct.HuffmanCode.html\" title=\"struct brotli_decompressor::reader::HuffmanCode\">HuffmanCode</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli_decompressor::huffman::HuffmanTreeGroup"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli_decompressor/ffi/enum.BrotliDecoderErrorCode.html\" title=\"enum brotli_decompressor::ffi::BrotliDecoderErrorCode\">BrotliDecoderErrorCode</a>","synthetic":true,"types":["brotli_decompressor::state::BrotliDecoderErrorCode"]},{"text":"impl&lt;AllocU8, AllocU32, AllocHC&gt; Freeze for <a class=\"struct\" href=\"brotli_decompressor/reader/struct.BrotliState.html\" title=\"struct brotli_decompressor::reader::BrotliState\">BrotliState</a>&lt;AllocU8, AllocU32, AllocHC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocHC: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocU32: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocU8: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocHC as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"brotli_decompressor/reader/struct.HuffmanCode.html\" title=\"struct brotli_decompressor::reader::HuffmanCode\">HuffmanCode</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU32 as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU8 as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli_decompressor::state::BrotliState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli_decompressor/transform/struct.Transform.html\" title=\"struct brotli_decompressor::transform::Transform\">Transform</a>","synthetic":true,"types":["brotli_decompressor::transform::Transform"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli_decompressor/reader/enum.BrotliResult.html\" title=\"enum brotli_decompressor::reader::BrotliResult\">BrotliResult</a>","synthetic":true,"types":["brotli_decompressor::decode::BrotliResult"]},{"text":"impl&lt;InputType&gt; Freeze for <a class=\"struct\" href=\"brotli_decompressor/io_wrappers/struct.IntoIoReader.html\" title=\"struct brotli_decompressor::io_wrappers::IntoIoReader\">IntoIoReader</a>&lt;InputType&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;InputType: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli_decompressor::io_wrappers::IntoIoReader"]},{"text":"impl&lt;InputType&gt; Freeze for <a class=\"struct\" href=\"brotli_decompressor/io_wrappers/struct.IntoIoWriter.html\" title=\"struct brotli_decompressor::io_wrappers::IntoIoWriter\">IntoIoWriter</a>&lt;InputType&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;InputType: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli_decompressor::io_wrappers::IntoIoWriter"]},{"text":"impl&lt;'a, OutputType&gt; Freeze for <a class=\"struct\" href=\"brotli_decompressor/io_wrappers/struct.IoWriterWrapper.html\" title=\"struct brotli_decompressor::io_wrappers::IoWriterWrapper\">IoWriterWrapper</a>&lt;'a, OutputType&gt;","synthetic":true,"types":["brotli_decompressor::io_wrappers::IoWriterWrapper"]},{"text":"impl&lt;'a, OutputType&gt; Freeze for <a class=\"struct\" href=\"brotli_decompressor/io_wrappers/struct.IoReaderWrapper.html\" title=\"struct brotli_decompressor::io_wrappers::IoReaderWrapper\">IoReaderWrapper</a>&lt;'a, OutputType&gt;","synthetic":true,"types":["brotli_decompressor::io_wrappers::IoReaderWrapper"]},{"text":"impl&lt;R, BufferType, AllocU8, AllocU32, AllocHC&gt; Freeze for <a class=\"struct\" href=\"brotli_decompressor/reader/struct.DecompressorCustomAlloc.html\" title=\"struct brotli_decompressor::reader::DecompressorCustomAlloc\">DecompressorCustomAlloc</a>&lt;R, BufferType, AllocU8, AllocU32, AllocHC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocHC: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocU32: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocU8: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;BufferType: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocHC as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"brotli_decompressor/reader/struct.HuffmanCode.html\" title=\"struct brotli_decompressor::reader::HuffmanCode\">HuffmanCode</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU32 as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU8 as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli_decompressor::reader::DecompressorCustomAlloc"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"brotli_decompressor/reader/struct.Decompressor.html\" title=\"struct brotli_decompressor::reader::Decompressor\">Decompressor</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli_decompressor::reader::Decompressor"]},{"text":"impl&lt;ErrType, R, BufferType, AllocU8, AllocU32, AllocHC&gt; Freeze for <a class=\"struct\" href=\"brotli_decompressor/reader/struct.DecompressorCustomIo.html\" title=\"struct brotli_decompressor::reader::DecompressorCustomIo\">DecompressorCustomIo</a>&lt;ErrType, R, BufferType, AllocU8, AllocU32, AllocHC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocHC: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocU32: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocU8: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;BufferType: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ErrType: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocHC as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"brotli_decompressor/reader/struct.HuffmanCode.html\" title=\"struct brotli_decompressor::reader::HuffmanCode\">HuffmanCode</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU32 as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU8 as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli_decompressor::reader::DecompressorCustomIo"]},{"text":"impl&lt;W, BufferType, AllocU8, AllocU32, AllocHC&gt; Freeze for <a class=\"struct\" href=\"brotli_decompressor/writer/struct.DecompressorWriterCustomAlloc.html\" title=\"struct brotli_decompressor::writer::DecompressorWriterCustomAlloc\">DecompressorWriterCustomAlloc</a>&lt;W, BufferType, AllocU8, AllocU32, AllocHC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocHC: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocU32: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocU8: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;BufferType: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocHC as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"brotli_decompressor/reader/struct.HuffmanCode.html\" title=\"struct brotli_decompressor::reader::HuffmanCode\">HuffmanCode</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU32 as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU8 as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli_decompressor::writer::DecompressorWriterCustomAlloc"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"brotli_decompressor/writer/struct.DecompressorWriter.html\" title=\"struct brotli_decompressor::writer::DecompressorWriter\">DecompressorWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli_decompressor::writer::DecompressorWriter"]},{"text":"impl&lt;ErrType, W, BufferType, AllocU8, AllocU32, AllocHC&gt; Freeze for <a class=\"struct\" href=\"brotli_decompressor/writer/struct.DecompressorWriterCustomIo.html\" title=\"struct brotli_decompressor::writer::DecompressorWriterCustomIo\">DecompressorWriterCustomIo</a>&lt;ErrType, W, BufferType, AllocU8, AllocU32, AllocHC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocHC: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocU32: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AllocU8: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;BufferType: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ErrType: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocHC as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"struct\" href=\"brotli_decompressor/reader/struct.HuffmanCode.html\" title=\"struct brotli_decompressor::reader::HuffmanCode\">HuffmanCode</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU32 as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AllocU8 as <a class=\"trait\" href=\"brotli_decompressor/trait.Allocator.html\" title=\"trait brotli_decompressor::Allocator\">Allocator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"brotli_decompressor/trait.Allocator.html#associatedtype.AllocatedMemory\" title=\"type brotli_decompressor::Allocator::AllocatedMemory\">AllocatedMemory</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["brotli_decompressor::writer::DecompressorWriterCustomIo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli_decompressor/ffi/interface/enum.c_void.html\" title=\"enum brotli_decompressor::ffi::interface::c_void\">c_void</a>","synthetic":true,"types":["brotli_decompressor::ffi::interface::c_void"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli_decompressor/ffi/interface/enum.BrotliDecoderParameter.html\" title=\"enum brotli_decompressor::ffi::interface::BrotliDecoderParameter\">BrotliDecoderParameter</a>","synthetic":true,"types":["brotli_decompressor::ffi::interface::BrotliDecoderParameter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"brotli_decompressor/ffi/interface/enum.BrotliDecoderResult.html\" title=\"enum brotli_decompressor::ffi::interface::BrotliDecoderResult\">BrotliDecoderResult</a>","synthetic":true,"types":["brotli_decompressor::ffi::interface::BrotliDecoderResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli_decompressor/ffi/interface/struct.CAllocator.html\" title=\"struct brotli_decompressor::ffi::interface::CAllocator\">CAllocator</a>","synthetic":true,"types":["brotli_decompressor::ffi::interface::CAllocator"]},{"text":"impl&lt;Ty&gt; Freeze for <a class=\"struct\" href=\"brotli_decompressor/ffi/alloc_util/struct.MemoryBlock.html\" title=\"struct brotli_decompressor::ffi::alloc_util::MemoryBlock\">MemoryBlock</a>&lt;Ty&gt;","synthetic":true,"types":["brotli_decompressor::ffi::alloc_util::MemoryBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli_decompressor/ffi/alloc_util/struct.SubclassableAllocator.html\" title=\"struct brotli_decompressor::ffi::alloc_util::SubclassableAllocator\">SubclassableAllocator</a>","synthetic":true,"types":["brotli_decompressor::ffi::alloc_util::SubclassableAllocator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli_decompressor/ffi/struct.BrotliDecoderState.html\" title=\"struct brotli_decompressor::ffi::BrotliDecoderState\">BrotliDecoderState</a>","synthetic":true,"types":["brotli_decompressor::ffi::BrotliDecoderState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"brotli_decompressor/struct.BrotliDecoderReturnInfo.html\" title=\"struct brotli_decompressor::BrotliDecoderReturnInfo\">BrotliDecoderReturnInfo</a>","synthetic":true,"types":["brotli_decompressor::BrotliDecoderReturnInfo"]}];
implementors["bstr"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"bstr/struct.BStr.html\" title=\"struct bstr::BStr\">BStr</a>","synthetic":true,"types":["bstr::bstr::BStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bstr/struct.BString.html\" title=\"struct bstr::BString\">BString</a>","synthetic":true,"types":["bstr::bstring::BString"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Finder.html\" title=\"struct bstr::Finder\">Finder</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Finder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.FinderReverse.html\" title=\"struct bstr::FinderReverse\">FinderReverse</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::FinderReverse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Find.html\" title=\"struct bstr::Find\">Find</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Find"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.FindReverse.html\" title=\"struct bstr::FindReverse\">FindReverse</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::FindReverse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Bytes.html\" title=\"struct bstr::Bytes\">Bytes</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Bytes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Fields.html\" title=\"struct bstr::Fields\">Fields</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Fields"]},{"text":"impl&lt;'a, F&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.FieldsWith.html\" title=\"struct bstr::FieldsWith\">FieldsWith</a>&lt;'a, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["bstr::ext_slice::FieldsWith"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Split.html\" title=\"struct bstr::Split\">Split</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Split"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.SplitReverse.html\" title=\"struct bstr::SplitReverse\">SplitReverse</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::SplitReverse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.SplitN.html\" title=\"struct bstr::SplitN\">SplitN</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::SplitN"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.SplitNReverse.html\" title=\"struct bstr::SplitNReverse\">SplitNReverse</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::SplitNReverse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Lines.html\" title=\"struct bstr::Lines\">Lines</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Lines"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.LinesWithTerminator.html\" title=\"struct bstr::LinesWithTerminator\">LinesWithTerminator</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::LinesWithTerminator"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.DrainBytes.html\" title=\"struct bstr::DrainBytes\">DrainBytes</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_vec::DrainBytes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bstr/struct.FromUtf8Error.html\" title=\"struct bstr::FromUtf8Error\">FromUtf8Error</a>","synthetic":true,"types":["bstr::ext_vec::FromUtf8Error"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bstr/io/struct.ByteLines.html\" title=\"struct bstr::io::ByteLines\">ByteLines</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bstr::io::ByteLines"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bstr/io/struct.ByteRecords.html\" title=\"struct bstr::io::ByteRecords\">ByteRecords</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bstr::io::ByteRecords"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Chars.html\" title=\"struct bstr::Chars\">Chars</a>&lt;'a&gt;","synthetic":true,"types":["bstr::utf8::Chars"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.CharIndices.html\" title=\"struct bstr::CharIndices\">CharIndices</a>&lt;'a&gt;","synthetic":true,"types":["bstr::utf8::CharIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Utf8Chunks.html\" title=\"struct bstr::Utf8Chunks\">Utf8Chunks</a>&lt;'a&gt;","synthetic":true,"types":["bstr::utf8::Utf8Chunks"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Utf8Chunk.html\" title=\"struct bstr::Utf8Chunk\">Utf8Chunk</a>&lt;'a&gt;","synthetic":true,"types":["bstr::utf8::Utf8Chunk"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bstr/struct.Utf8Error.html\" title=\"struct bstr::Utf8Error\">Utf8Error</a>","synthetic":true,"types":["bstr::utf8::Utf8Error"]}];
implementors["bytes"] = [{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Chain.html\" title=\"struct bytes::buf::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::chain::Chain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.IntoIter.html\" title=\"struct bytes::buf::IntoIter\">IntoIter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::iter::IntoIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Limit.html\" title=\"struct bytes::buf::Limit\">Limit</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::limit::Limit"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Reader.html\" title=\"struct bytes::buf::Reader\">Reader</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::reader::Reader"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Take.html\" title=\"struct bytes::buf::Take\">Take</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::take::Take"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bytes/buf/struct.UninitSlice.html\" title=\"struct bytes::buf::UninitSlice\">UninitSlice</a>","synthetic":true,"types":["bytes::buf::uninit_slice::UninitSlice"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Writer.html\" title=\"struct bytes::buf::Writer\">Writer</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::writer::Writer"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>","synthetic":true,"types":["bytes::bytes::Bytes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bytes/struct.BytesMut.html\" title=\"struct bytes::BytesMut\">BytesMut</a>","synthetic":true,"types":["bytes::bytes_mut::BytesMut"]}];
implementors["bytestring"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"bytestring/struct.ByteString.html\" title=\"struct bytestring::ByteString\">ByteString</a>","synthetic":true,"types":["bytestring::ByteString"]}];
implementors["chrono"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/struct.Duration.html\" title=\"struct chrono::Duration\">Duration</a>","synthetic":true,"types":["chrono::oldtime::Duration"]},{"text":"impl&lt;Tz&gt; Freeze for <a class=\"struct\" href=\"chrono/struct.Date.html\" title=\"struct chrono::Date\">Date</a>&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"associatedtype\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::date::Date"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/enum.SecondsFormat.html\" title=\"enum chrono::SecondsFormat\">SecondsFormat</a>","synthetic":true,"types":["chrono::datetime::SecondsFormat"]},{"text":"impl&lt;Tz&gt; Freeze for <a class=\"struct\" href=\"chrono/struct.DateTime.html\" title=\"struct chrono::DateTime\">DateTime</a>&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"associatedtype\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::datetime::DateTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.Parsed.html\" title=\"struct chrono::format::Parsed\">Parsed</a>","synthetic":true,"types":["chrono::format::parsed::Parsed"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"chrono/format/strftime/struct.StrftimeItems.html\" title=\"struct chrono::format::strftime::StrftimeItems\">StrftimeItems</a>&lt;'a&gt;","synthetic":true,"types":["chrono::format::strftime::StrftimeItems"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Pad.html\" title=\"enum chrono::format::Pad\">Pad</a>","synthetic":true,"types":["chrono::format::Pad"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Numeric.html\" title=\"enum chrono::format::Numeric\">Numeric</a>","synthetic":true,"types":["chrono::format::Numeric"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.InternalNumeric.html\" title=\"struct chrono::format::InternalNumeric\">InternalNumeric</a>","synthetic":true,"types":["chrono::format::InternalNumeric"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Fixed.html\" title=\"enum chrono::format::Fixed\">Fixed</a>","synthetic":true,"types":["chrono::format::Fixed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.InternalFixed.html\" title=\"struct chrono::format::InternalFixed\">InternalFixed</a>","synthetic":true,"types":["chrono::format::InternalFixed"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"chrono/format/enum.Item.html\" title=\"enum chrono::format::Item\">Item</a>&lt;'a&gt;","synthetic":true,"types":["chrono::format::Item"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.ParseError.html\" title=\"struct chrono::format::ParseError\">ParseError</a>","synthetic":true,"types":["chrono::format::ParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.ParseErrorKind.html\" title=\"enum chrono::format::ParseErrorKind\">ParseErrorKind</a>","synthetic":true,"types":["chrono::format::ParseErrorKind"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"chrono/format/struct.DelayedFormat.html\" title=\"struct chrono::format::DelayedFormat\">DelayedFormat</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::format::DelayedFormat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveWeek.html\" title=\"struct chrono::naive::NaiveWeek\">NaiveWeek</a>","synthetic":true,"types":["chrono::naive::date::NaiveWeek"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDate.html\" title=\"struct chrono::naive::NaiveDate\">NaiveDate</a>","synthetic":true,"types":["chrono::naive::date::NaiveDate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDateTime.html\" title=\"struct chrono::naive::NaiveDateTime\">NaiveDateTime</a>","synthetic":true,"types":["chrono::naive::datetime::NaiveDateTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.IsoWeek.html\" title=\"struct chrono::naive::IsoWeek\">IsoWeek</a>","synthetic":true,"types":["chrono::naive::isoweek::IsoWeek"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveTime.html\" title=\"struct chrono::naive::NaiveTime\">NaiveTime</a>","synthetic":true,"types":["chrono::naive::time::NaiveTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.FixedOffset.html\" title=\"struct chrono::offset::FixedOffset\">FixedOffset</a>","synthetic":true,"types":["chrono::offset::fixed::FixedOffset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.Local.html\" title=\"struct chrono::offset::Local\">Local</a>","synthetic":true,"types":["chrono::offset::local::Local"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.Utc.html\" title=\"struct chrono::offset::Utc\">Utc</a>","synthetic":true,"types":["chrono::offset::utc::Utc"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"chrono/offset/enum.LocalResult.html\" title=\"enum chrono::offset::LocalResult\">LocalResult</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::offset::LocalResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/enum.RoundingError.html\" title=\"enum chrono::RoundingError\">RoundingError</a>","synthetic":true,"types":["chrono::round::RoundingError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/enum.Weekday.html\" title=\"enum chrono::Weekday\">Weekday</a>","synthetic":true,"types":["chrono::weekday::Weekday"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/struct.ParseWeekdayError.html\" title=\"struct chrono::ParseWeekdayError\">ParseWeekdayError</a>","synthetic":true,"types":["chrono::weekday::ParseWeekdayError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/enum.Month.html\" title=\"enum chrono::Month\">Month</a>","synthetic":true,"types":["chrono::month::Month"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/struct.Months.html\" title=\"struct chrono::Months\">Months</a>","synthetic":true,"types":["chrono::month::Months"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/struct.ParseMonthError.html\" title=\"struct chrono::ParseMonthError\">ParseMonthError</a>","synthetic":true,"types":["chrono::month::ParseMonthError"]}];
implementors["chrono_tz"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"chrono_tz/enum.Tz.html\" title=\"enum chrono_tz::Tz\">Tz</a>","synthetic":true,"types":["chrono_tz::timezones::Tz"]}];
implementors["convert_case"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"convert_case/enum.Case.html\" title=\"enum convert_case::Case\">Case</a>","synthetic":true,"types":["convert_case::case::Case"]},{"text":"impl Freeze for <a class=\"struct\" href=\"convert_case/struct.FromCasing.html\" title=\"struct convert_case::FromCasing\">FromCasing</a>","synthetic":true,"types":["convert_case::FromCasing"]}];
implementors["cookie"] = [{"text":"impl&lt;'c&gt; Freeze for <a class=\"struct\" href=\"cookie/struct.CookieBuilder.html\" title=\"struct cookie::CookieBuilder\">CookieBuilder</a>&lt;'c&gt;","synthetic":true,"types":["cookie::builder::CookieBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cookie/enum.ParseError.html\" title=\"enum cookie::ParseError\">ParseError</a>","synthetic":true,"types":["cookie::parse::ParseError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"cookie/struct.CookieJar.html\" title=\"struct cookie::CookieJar\">CookieJar</a>","synthetic":true,"types":["cookie::jar::CookieJar"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"cookie/struct.Delta.html\" title=\"struct cookie::Delta\">Delta</a>&lt;'a&gt;","synthetic":true,"types":["cookie::jar::Delta"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"cookie/struct.Iter.html\" title=\"struct cookie::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["cookie::jar::Iter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cookie/enum.SameSite.html\" title=\"enum cookie::SameSite\">SameSite</a>","synthetic":true,"types":["cookie::draft::SameSite"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cookie/enum.Expiration.html\" title=\"enum cookie::Expiration\">Expiration</a>","synthetic":true,"types":["cookie::expiration::Expiration"]},{"text":"impl&lt;'c&gt; Freeze for <a class=\"struct\" href=\"cookie/struct.Cookie.html\" title=\"struct cookie::Cookie\">Cookie</a>&lt;'c&gt;","synthetic":true,"types":["cookie::Cookie"]},{"text":"impl&lt;'a, 'c&gt; Freeze for <a class=\"struct\" href=\"cookie/struct.Display.html\" title=\"struct cookie::Display\">Display</a>&lt;'a, 'c&gt;","synthetic":true,"types":["cookie::Display"]}];
implementors["core_foundation_sys"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/array/struct.CFArrayCallBacks.html\" title=\"struct core_foundation_sys::array::CFArrayCallBacks\">CFArrayCallBacks</a>","synthetic":true,"types":["core_foundation_sys::array::CFArrayCallBacks"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/array/struct.__CFArray.html\" title=\"struct core_foundation_sys::array::__CFArray\">__CFArray</a>","synthetic":true,"types":["core_foundation_sys::array::__CFArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/attributed_string/struct.__CFAttributedString.html\" title=\"struct core_foundation_sys::attributed_string::__CFAttributedString\">__CFAttributedString</a>","synthetic":true,"types":["core_foundation_sys::attributed_string::__CFAttributedString"]},{"text":"impl Freeze for <a class=\"enum\" href=\"core_foundation_sys/base/enum.CFComparisonResult.html\" title=\"enum core_foundation_sys::base::CFComparisonResult\">CFComparisonResult</a>","synthetic":true,"types":["core_foundation_sys::base::CFComparisonResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/base/struct.CFRange.html\" title=\"struct core_foundation_sys::base::CFRange\">CFRange</a>","synthetic":true,"types":["core_foundation_sys::base::CFRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/base/struct.CFAllocatorContext.html\" title=\"struct core_foundation_sys::base::CFAllocatorContext\">CFAllocatorContext</a>","synthetic":true,"types":["core_foundation_sys::base::CFAllocatorContext"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/bundle/struct.__CFBundle.html\" title=\"struct core_foundation_sys::bundle::__CFBundle\">__CFBundle</a>","synthetic":true,"types":["core_foundation_sys::bundle::__CFBundle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/characterset/struct.__CFCharacterSet.html\" title=\"struct core_foundation_sys::characterset::__CFCharacterSet\">__CFCharacterSet</a>","synthetic":true,"types":["core_foundation_sys::characterset::__CFCharacterSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/data/struct.__CFData.html\" title=\"struct core_foundation_sys::data::__CFData\">__CFData</a>","synthetic":true,"types":["core_foundation_sys::data::__CFData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/date/struct.__CFDate.html\" title=\"struct core_foundation_sys::date::__CFDate\">__CFDate</a>","synthetic":true,"types":["core_foundation_sys::date::__CFDate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/dictionary/struct.CFDictionaryKeyCallBacks.html\" title=\"struct core_foundation_sys::dictionary::CFDictionaryKeyCallBacks\">CFDictionaryKeyCallBacks</a>","synthetic":true,"types":["core_foundation_sys::dictionary::CFDictionaryKeyCallBacks"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/dictionary/struct.CFDictionaryValueCallBacks.html\" title=\"struct core_foundation_sys::dictionary::CFDictionaryValueCallBacks\">CFDictionaryValueCallBacks</a>","synthetic":true,"types":["core_foundation_sys::dictionary::CFDictionaryValueCallBacks"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/dictionary/struct.__CFDictionary.html\" title=\"struct core_foundation_sys::dictionary::__CFDictionary\">__CFDictionary</a>","synthetic":true,"types":["core_foundation_sys::dictionary::__CFDictionary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/error/struct.__CFError.html\" title=\"struct core_foundation_sys::error::__CFError\">__CFError</a>","synthetic":true,"types":["core_foundation_sys::error::__CFError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/filedescriptor/struct.__CFFileDescriptor.html\" title=\"struct core_foundation_sys::filedescriptor::__CFFileDescriptor\">__CFFileDescriptor</a>","synthetic":true,"types":["core_foundation_sys::filedescriptor::__CFFileDescriptor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/filedescriptor/struct.CFFileDescriptorContext.html\" title=\"struct core_foundation_sys::filedescriptor::CFFileDescriptorContext\">CFFileDescriptorContext</a>","synthetic":true,"types":["core_foundation_sys::filedescriptor::CFFileDescriptorContext"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/messageport/struct.CFMessagePortContext.html\" title=\"struct core_foundation_sys::messageport::CFMessagePortContext\">CFMessagePortContext</a>","synthetic":true,"types":["core_foundation_sys::messageport::CFMessagePortContext"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/messageport/struct.__CFMessagePort.html\" title=\"struct core_foundation_sys::messageport::__CFMessagePort\">__CFMessagePort</a>","synthetic":true,"types":["core_foundation_sys::messageport::__CFMessagePort"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/number/struct.__CFBoolean.html\" title=\"struct core_foundation_sys::number::__CFBoolean\">__CFBoolean</a>","synthetic":true,"types":["core_foundation_sys::number::__CFBoolean"]},{"text":"impl Freeze for <a class=\"enum\" href=\"core_foundation_sys/number/enum.__CFNumber.html\" title=\"enum core_foundation_sys::number::__CFNumber\">__CFNumber</a>","synthetic":true,"types":["core_foundation_sys::number::__CFNumber"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/runloop/struct.__CFRunLoop.html\" title=\"struct core_foundation_sys::runloop::__CFRunLoop\">__CFRunLoop</a>","synthetic":true,"types":["core_foundation_sys::runloop::__CFRunLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/runloop/struct.__CFRunLoopSource.html\" title=\"struct core_foundation_sys::runloop::__CFRunLoopSource\">__CFRunLoopSource</a>","synthetic":true,"types":["core_foundation_sys::runloop::__CFRunLoopSource"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/runloop/struct.__CFRunLoopObserver.html\" title=\"struct core_foundation_sys::runloop::__CFRunLoopObserver\">__CFRunLoopObserver</a>","synthetic":true,"types":["core_foundation_sys::runloop::__CFRunLoopObserver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/runloop/struct.CFRunLoopSourceContext.html\" title=\"struct core_foundation_sys::runloop::CFRunLoopSourceContext\">CFRunLoopSourceContext</a>","synthetic":true,"types":["core_foundation_sys::runloop::CFRunLoopSourceContext"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/runloop/struct.CFRunLoopSourceContext1.html\" title=\"struct core_foundation_sys::runloop::CFRunLoopSourceContext1\">CFRunLoopSourceContext1</a>","synthetic":true,"types":["core_foundation_sys::runloop::CFRunLoopSourceContext1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/runloop/struct.CFRunLoopObserverContext.html\" title=\"struct core_foundation_sys::runloop::CFRunLoopObserverContext\">CFRunLoopObserverContext</a>","synthetic":true,"types":["core_foundation_sys::runloop::CFRunLoopObserverContext"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/runloop/struct.CFRunLoopTimerContext.html\" title=\"struct core_foundation_sys::runloop::CFRunLoopTimerContext\">CFRunLoopTimerContext</a>","synthetic":true,"types":["core_foundation_sys::runloop::CFRunLoopTimerContext"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/runloop/struct.__CFRunLoopTimer.html\" title=\"struct core_foundation_sys::runloop::__CFRunLoopTimer\">__CFRunLoopTimer</a>","synthetic":true,"types":["core_foundation_sys::runloop::__CFRunLoopTimer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/set/struct.CFSetCallBacks.html\" title=\"struct core_foundation_sys::set::CFSetCallBacks\">CFSetCallBacks</a>","synthetic":true,"types":["core_foundation_sys::set::CFSetCallBacks"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/set/struct.__CFSet.html\" title=\"struct core_foundation_sys::set::__CFSet\">__CFSet</a>","synthetic":true,"types":["core_foundation_sys::set::__CFSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/string/struct.__CFString.html\" title=\"struct core_foundation_sys::string::__CFString\">__CFString</a>","synthetic":true,"types":["core_foundation_sys::string::__CFString"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/timezone/struct.__CFTimeZone.html\" title=\"struct core_foundation_sys::timezone::__CFTimeZone\">__CFTimeZone</a>","synthetic":true,"types":["core_foundation_sys::timezone::__CFTimeZone"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/url/struct.__CFURL.html\" title=\"struct core_foundation_sys::url::__CFURL\">__CFURL</a>","synthetic":true,"types":["core_foundation_sys::url::__CFURL"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/uuid/struct.__CFUUID.html\" title=\"struct core_foundation_sys::uuid::__CFUUID\">__CFUUID</a>","synthetic":true,"types":["core_foundation_sys::uuid::__CFUUID"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/uuid/struct.CFUUIDBytes.html\" title=\"struct core_foundation_sys::uuid::CFUUIDBytes\">CFUUIDBytes</a>","synthetic":true,"types":["core_foundation_sys::uuid::CFUUIDBytes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"core_foundation_sys/mach_port/struct.__CFMachPort.html\" title=\"struct core_foundation_sys::mach_port::__CFMachPort\">__CFMachPort</a>","synthetic":true,"types":["core_foundation_sys::mach_port::__CFMachPort"]}];
implementors["crc32fast"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"crc32fast/struct.Hasher.html\" title=\"struct crc32fast::Hasher\">Hasher</a>","synthetic":true,"types":["crc32fast::Hasher"]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_utils/atomic/struct.AtomicCell.html\" title=\"struct crossbeam_utils::atomic::AtomicCell\">AtomicCell</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_utils::atomic::atomic_cell::AtomicCell"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/struct.CachePadded.html\" title=\"struct crossbeam_utils::CachePadded\">CachePadded</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_utils::cache_padded::CachePadded"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"crossbeam_utils/struct.Backoff.html\" title=\"struct crossbeam_utils::Backoff\">Backoff</a>","synthetic":true,"types":["crossbeam_utils::backoff::Backoff"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Parker.html\" title=\"struct crossbeam_utils::sync::Parker\">Parker</a>","synthetic":true,"types":["crossbeam_utils::sync::parker::Parker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Unparker.html\" title=\"struct crossbeam_utils::sync::Unparker\">Unparker</a>","synthetic":true,"types":["crossbeam_utils::sync::parker::Unparker"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLock.html\" title=\"struct crossbeam_utils::sync::ShardedLock\">ShardedLock</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockReadGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockReadGuard\">ShardedLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockWriteGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockWriteGuard\">ShardedLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLockWriteGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.WaitGroup.html\" title=\"struct crossbeam_utils::sync::WaitGroup\">WaitGroup</a>","synthetic":true,"types":["crossbeam_utils::sync::wait_group::WaitGroup"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.Scope.html\" title=\"struct crossbeam_utils::thread::Scope\">Scope</a>&lt;'env&gt;","synthetic":true,"types":["crossbeam_utils::thread::Scope"]},{"text":"impl&lt;'scope, 'env&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.ScopedThreadBuilder.html\" title=\"struct crossbeam_utils::thread::ScopedThreadBuilder\">ScopedThreadBuilder</a>&lt;'scope, 'env&gt;","synthetic":true,"types":["crossbeam_utils::thread::ScopedThreadBuilder"]},{"text":"impl&lt;'scope, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.ScopedJoinHandle.html\" title=\"struct crossbeam_utils::thread::ScopedJoinHandle\">ScopedJoinHandle</a>&lt;'scope, T&gt;","synthetic":true,"types":["crossbeam_utils::thread::ScopedJoinHandle"]}];
implementors["crypto_common"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"crypto_common/struct.InvalidLength.html\" title=\"struct crypto_common::InvalidLength\">InvalidLength</a>","synthetic":true,"types":["crypto_common::InvalidLength"]}];
implementors["deunicode"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"deunicode/struct.AsciiCharsIter.html\" title=\"struct deunicode::AsciiCharsIter\">AsciiCharsIter</a>&lt;'a&gt;","synthetic":true,"types":["deunicode::AsciiCharsIter"]}];
implementors["digest"] = [{"text":"impl&lt;T, OutSize, O&gt; Freeze for <a class=\"struct\" href=\"digest/core_api/struct.CtVariableCoreWrapper.html\" title=\"struct digest::core_api::CtVariableCoreWrapper\">CtVariableCoreWrapper</a>&lt;T, OutSize, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["digest::core_api::ct_variable::CtVariableCoreWrapper"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"digest/core_api/struct.RtVariableCoreWrapper.html\" title=\"struct digest::core_api::RtVariableCoreWrapper\">RtVariableCoreWrapper</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as <a class=\"trait\" href=\"digest/core_api/trait.BlockSizeUser.html\" title=\"trait digest::core_api::BlockSizeUser\">BlockSizeUser</a>&gt;::<a class=\"associatedtype\" href=\"digest/core_api/trait.BlockSizeUser.html#associatedtype.BlockSize\" title=\"type digest::core_api::BlockSizeUser::BlockSize\">BlockSize</a> as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["digest::core_api::rt_variable::RtVariableCoreWrapper"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"digest/core_api/struct.CoreWrapper.html\" title=\"struct digest::core_api::CoreWrapper\">CoreWrapper</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as <a class=\"trait\" href=\"digest/core_api/trait.BlockSizeUser.html\" title=\"trait digest::core_api::BlockSizeUser\">BlockSizeUser</a>&gt;::<a class=\"associatedtype\" href=\"digest/core_api/trait.BlockSizeUser.html#associatedtype.BlockSize\" title=\"type digest::core_api::BlockSizeUser::BlockSize\">BlockSize</a> as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["digest::core_api::wrapper::CoreWrapper"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"digest/core_api/struct.XofReaderCoreWrapper.html\" title=\"struct digest::core_api::XofReaderCoreWrapper\">XofReaderCoreWrapper</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as <a class=\"trait\" href=\"digest/core_api/trait.BlockSizeUser.html\" title=\"trait digest::core_api::BlockSizeUser\">BlockSizeUser</a>&gt;::<a class=\"associatedtype\" href=\"digest/core_api/trait.BlockSizeUser.html#associatedtype.BlockSize\" title=\"type digest::core_api::BlockSizeUser::BlockSize\">BlockSize</a> as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["digest::core_api::xof_reader::XofReaderCoreWrapper"]},{"text":"impl Freeze for <a class=\"enum\" href=\"digest/core_api/enum.TruncSide.html\" title=\"enum digest::core_api::TruncSide\">TruncSide</a>","synthetic":true,"types":["digest::core_api::TruncSide"]},{"text":"impl Freeze for <a class=\"struct\" href=\"digest/struct.InvalidOutputSize.html\" title=\"struct digest::InvalidOutputSize\">InvalidOutputSize</a>","synthetic":true,"types":["digest::InvalidOutputSize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"digest/struct.InvalidBufferSize.html\" title=\"struct digest::InvalidBufferSize\">InvalidBufferSize</a>","synthetic":true,"types":["digest::InvalidBufferSize"]}];
implementors["encoding_rs"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"encoding_rs/mem/enum.Latin1Bidi.html\" title=\"enum encoding_rs::mem::Latin1Bidi\">Latin1Bidi</a>","synthetic":true,"types":["encoding_rs::mem::Latin1Bidi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"encoding_rs/struct.Encoding.html\" title=\"struct encoding_rs::Encoding\">Encoding</a>","synthetic":true,"types":["encoding_rs::Encoding"]},{"text":"impl Freeze for <a class=\"enum\" href=\"encoding_rs/enum.CoderResult.html\" title=\"enum encoding_rs::CoderResult\">CoderResult</a>","synthetic":true,"types":["encoding_rs::CoderResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"encoding_rs/enum.DecoderResult.html\" title=\"enum encoding_rs::DecoderResult\">DecoderResult</a>","synthetic":true,"types":["encoding_rs::DecoderResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"encoding_rs/struct.Decoder.html\" title=\"struct encoding_rs::Decoder\">Decoder</a>","synthetic":true,"types":["encoding_rs::Decoder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"encoding_rs/enum.EncoderResult.html\" title=\"enum encoding_rs::EncoderResult\">EncoderResult</a>","synthetic":true,"types":["encoding_rs::EncoderResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"encoding_rs/struct.Encoder.html\" title=\"struct encoding_rs::Encoder\">Encoder</a>","synthetic":true,"types":["encoding_rs::Encoder"]}];
implementors["env_logger"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/filter/struct.Filter.html\" title=\"struct env_logger::filter::Filter\">Filter</a>","synthetic":true,"types":["env_logger::filter::Filter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/filter/struct.Builder.html\" title=\"struct env_logger::filter::Builder\">Builder</a>","synthetic":true,"types":["env_logger::filter::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.Timestamp.html\" title=\"struct env_logger::fmt::Timestamp\">Timestamp</a>","synthetic":true,"types":["env_logger::fmt::humantime::imp::Timestamp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.Style.html\" title=\"struct env_logger::fmt::Style\">Style</a>","synthetic":true,"types":["env_logger::fmt::writer::termcolor::imp::Style"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.StyledValue.html\" title=\"struct env_logger::fmt::StyledValue\">StyledValue</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["env_logger::fmt::writer::termcolor::imp::StyledValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"env_logger/fmt/enum.Color.html\" title=\"enum env_logger::fmt::Color\">Color</a>","synthetic":true,"types":["env_logger::fmt::writer::termcolor::imp::Color"]},{"text":"impl Freeze for <a class=\"enum\" href=\"env_logger/fmt/enum.Target.html\" title=\"enum env_logger::fmt::Target\">Target</a>","synthetic":true,"types":["env_logger::fmt::writer::Target"]},{"text":"impl Freeze for <a class=\"enum\" href=\"env_logger/fmt/enum.WriteStyle.html\" title=\"enum env_logger::fmt::WriteStyle\">WriteStyle</a>","synthetic":true,"types":["env_logger::fmt::writer::WriteStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"env_logger/fmt/enum.TimestampPrecision.html\" title=\"enum env_logger::fmt::TimestampPrecision\">TimestampPrecision</a>","synthetic":true,"types":["env_logger::fmt::TimestampPrecision"]},{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.Formatter.html\" title=\"struct env_logger::fmt::Formatter\">Formatter</a>","synthetic":true,"types":["env_logger::fmt::Formatter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"env_logger/struct.Env.html\" title=\"struct env_logger::Env\">Env</a>&lt;'a&gt;","synthetic":true,"types":["env_logger::Env"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"env_logger/struct.Logger.html\" title=\"struct env_logger::Logger\">Logger</a>","synthetic":true,"types":["env_logger::Logger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"env_logger/struct.Builder.html\" title=\"struct env_logger::Builder\">Builder</a>","synthetic":true,"types":["env_logger::Builder"]}];
implementors["flate2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.Crc.html\" title=\"struct flate2::Crc\">Crc</a>","synthetic":true,"types":["flate2::crc::Crc"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/struct.CrcReader.html\" title=\"struct flate2::CrcReader\">CrcReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::crc::CrcReader"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/struct.CrcWriter.html\" title=\"struct flate2::CrcWriter\">CrcWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::crc::CrcWriter"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.DeflateEncoder.html\" title=\"struct flate2::bufread::DeflateEncoder\">DeflateEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::bufread::DeflateEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.DeflateDecoder.html\" title=\"struct flate2::bufread::DeflateDecoder\">DeflateDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::bufread::DeflateDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.DeflateEncoder.html\" title=\"struct flate2::read::DeflateEncoder\">DeflateEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::read::DeflateEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.DeflateDecoder.html\" title=\"struct flate2::read::DeflateDecoder\">DeflateDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::read::DeflateDecoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.DeflateEncoder.html\" title=\"struct flate2::write::DeflateEncoder\">DeflateEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::write::DeflateEncoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.DeflateDecoder.html\" title=\"struct flate2::write::DeflateDecoder\">DeflateDecoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::write::DeflateDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.GzEncoder.html\" title=\"struct flate2::bufread::GzEncoder\">GzEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::bufread::GzEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.GzDecoder.html\" title=\"struct flate2::bufread::GzDecoder\">GzDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::bufread::GzDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.MultiGzDecoder.html\" title=\"struct flate2::bufread::MultiGzDecoder\">MultiGzDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::bufread::MultiGzDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.GzEncoder.html\" title=\"struct flate2::read::GzEncoder\">GzEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::read::GzEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.GzDecoder.html\" title=\"struct flate2::read::GzDecoder\">GzDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::read::GzDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.MultiGzDecoder.html\" title=\"struct flate2::read::MultiGzDecoder\">MultiGzDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::read::MultiGzDecoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.GzEncoder.html\" title=\"struct flate2::write::GzEncoder\">GzEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::write::GzEncoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.GzDecoder.html\" title=\"struct flate2::write::GzDecoder\">GzDecoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::write::GzDecoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.GzHeader.html\" title=\"struct flate2::GzHeader\">GzHeader</a>","synthetic":true,"types":["flate2::gz::GzHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.GzBuilder.html\" title=\"struct flate2::GzBuilder\">GzBuilder</a>","synthetic":true,"types":["flate2::gz::GzBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.Compress.html\" title=\"struct flate2::Compress\">Compress</a>","synthetic":true,"types":["flate2::mem::Compress"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.Decompress.html\" title=\"struct flate2::Decompress\">Decompress</a>","synthetic":true,"types":["flate2::mem::Decompress"]},{"text":"impl Freeze for <a class=\"enum\" href=\"flate2/enum.FlushCompress.html\" title=\"enum flate2::FlushCompress\">FlushCompress</a>","synthetic":true,"types":["flate2::mem::FlushCompress"]},{"text":"impl Freeze for <a class=\"enum\" href=\"flate2/enum.FlushDecompress.html\" title=\"enum flate2::FlushDecompress\">FlushDecompress</a>","synthetic":true,"types":["flate2::mem::FlushDecompress"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.DecompressError.html\" title=\"struct flate2::DecompressError\">DecompressError</a>","synthetic":true,"types":["flate2::mem::DecompressError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.CompressError.html\" title=\"struct flate2::CompressError\">CompressError</a>","synthetic":true,"types":["flate2::mem::CompressError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"flate2/enum.Status.html\" title=\"enum flate2::Status\">Status</a>","synthetic":true,"types":["flate2::mem::Status"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.ZlibEncoder.html\" title=\"struct flate2::bufread::ZlibEncoder\">ZlibEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::bufread::ZlibEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.ZlibDecoder.html\" title=\"struct flate2::bufread::ZlibDecoder\">ZlibDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::bufread::ZlibDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.ZlibEncoder.html\" title=\"struct flate2::read::ZlibEncoder\">ZlibEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::read::ZlibEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.ZlibDecoder.html\" title=\"struct flate2::read::ZlibDecoder\">ZlibDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::read::ZlibDecoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.ZlibEncoder.html\" title=\"struct flate2::write::ZlibEncoder\">ZlibEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::write::ZlibEncoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.ZlibDecoder.html\" title=\"struct flate2::write::ZlibDecoder\">ZlibDecoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::write::ZlibDecoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.Compression.html\" title=\"struct flate2::Compression\">Compression</a>","synthetic":true,"types":["flate2::Compression"]}];
implementors["fnv"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"fnv/struct.FnvHasher.html\" title=\"struct fnv::FnvHasher\">FnvHasher</a>","synthetic":true,"types":["fnv::FnvHasher"]}];
implementors["form_urlencoded"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"form_urlencoded/struct.Parse.html\" title=\"struct form_urlencoded::Parse\">Parse</a>&lt;'a&gt;","synthetic":true,"types":["form_urlencoded::Parse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"form_urlencoded/struct.ParseIntoOwned.html\" title=\"struct form_urlencoded::ParseIntoOwned\">ParseIntoOwned</a>&lt;'a&gt;","synthetic":true,"types":["form_urlencoded::ParseIntoOwned"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"form_urlencoded/struct.ByteSerialize.html\" title=\"struct form_urlencoded::ByteSerialize\">ByteSerialize</a>&lt;'a&gt;","synthetic":true,"types":["form_urlencoded::ByteSerialize"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"form_urlencoded/struct.Serializer.html\" title=\"struct form_urlencoded::Serializer\">Serializer</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["form_urlencoded::Serializer"]}];
implementors["futures_task"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"futures_task/struct.SpawnError.html\" title=\"struct futures_task::SpawnError\">SpawnError</a>","synthetic":true,"types":["futures_task::spawn::SpawnError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"futures_task/struct.WakerRef.html\" title=\"struct futures_task::WakerRef\">WakerRef</a>&lt;'a&gt;","synthetic":true,"types":["futures_task::waker_ref::WakerRef"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures_task/struct.LocalFutureObj.html\" title=\"struct futures_task::LocalFutureObj\">LocalFutureObj</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_task::future_obj::LocalFutureObj"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures_task/struct.FutureObj.html\" title=\"struct futures_task::FutureObj\">FutureObj</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_task::future_obj::FutureObj"]}];
implementors["futures_util"] = [{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Fuse.html\" title=\"struct futures_util::future::Fuse\">Fuse</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::fuse::Fuse"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Flatten.html\" title=\"struct futures_util::future::Flatten\">Flatten</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::Flatten"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.FlattenStream.html\" title=\"struct futures_util::future::FlattenStream\">FlattenStream</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::FlattenStream"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Map.html\" title=\"struct futures_util::future::Map\">Map</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::Map"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.IntoStream.html\" title=\"struct futures_util::future::IntoStream\">IntoStream</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::IntoStream"]},{"text":"impl&lt;Fut, T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapInto.html\" title=\"struct futures_util::future::MapInto\">MapInto</a>&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::MapInto"]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Then.html\" title=\"struct futures_util::future::Then\">Then</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::Then"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Inspect.html\" title=\"struct futures_util::future::Inspect\">Inspect</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::Inspect"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.NeverError.html\" title=\"struct futures_util::future::NeverError\">NeverError</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::NeverError"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.UnitError.html\" title=\"struct futures_util::future::UnitError\">UnitError</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::UnitError"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.IntoFuture.html\" title=\"struct futures_util::future::IntoFuture\">IntoFuture</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::into_future::IntoFuture"]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryFlatten.html\" title=\"struct futures_util::future::TryFlatten\">TryFlatten</a>&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::TryFlatten"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryFlattenStream.html\" title=\"struct futures_util::future::TryFlattenStream\">TryFlattenStream</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::TryFlattenStream"]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AndThen.html\" title=\"struct futures_util::future::AndThen\">AndThen</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::AndThen"]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.OrElse.html\" title=\"struct futures_util::future::OrElse\">OrElse</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::OrElse"]},{"text":"impl&lt;Fut, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.ErrInto.html\" title=\"struct futures_util::future::ErrInto\">ErrInto</a>&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::ErrInto"]},{"text":"impl&lt;Fut, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.OkInto.html\" title=\"struct futures_util::future::OkInto\">OkInto</a>&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::OkInto"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.InspectOk.html\" title=\"struct futures_util::future::InspectOk\">InspectOk</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::InspectOk"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.InspectErr.html\" title=\"struct futures_util::future::InspectErr\">InspectErr</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::InspectErr"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapOk.html\" title=\"struct futures_util::future::MapOk\">MapOk</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::MapOk"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapErr.html\" title=\"struct futures_util::future::MapErr\">MapErr</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::MapErr"]},{"text":"impl&lt;Fut, F, G&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapOkOrElse.html\" title=\"struct futures_util::future::MapOkOrElse\">MapOkOrElse</a>&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::MapOkOrElse"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.UnwrapOrElse.html\" title=\"struct futures_util::future::UnwrapOrElse\">UnwrapOrElse</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::UnwrapOrElse"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Lazy.html\" title=\"struct futures_util::future::Lazy\">Lazy</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::lazy::Lazy"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Pending.html\" title=\"struct futures_util::future::Pending\">Pending</a>&lt;T&gt;","synthetic":true,"types":["futures_util::future::pending::Pending"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"enum\" href=\"futures_util/future/enum.MaybeDone.html\" title=\"enum futures_util::future::MaybeDone\">MaybeDone</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::maybe_done::MaybeDone"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"enum\" href=\"futures_util/future/enum.TryMaybeDone.html\" title=\"enum futures_util::future::TryMaybeDone\">TryMaybeDone</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_maybe_done::TryMaybeDone"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.OptionFuture.html\" title=\"struct futures_util::future::OptionFuture\">OptionFuture</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::option::OptionFuture"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.PollFn.html\" title=\"struct futures_util::future::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::poll_fn::PollFn"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.PollImmediate.html\" title=\"struct futures_util::future::PollImmediate\">PollImmediate</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::poll_immediate::PollImmediate"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Ready.html\" title=\"struct futures_util::future::Ready\">Ready</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::ready::Ready"]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join.html\" title=\"struct futures_util::future::Join\">Join</a>&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join"]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join3.html\" title=\"struct futures_util::future::Join3\">Join3</a>&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join3"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join4.html\" title=\"struct futures_util::future::Join4\">Join4</a>&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join4"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join5.html\" title=\"struct futures_util::future::Join5\">Join5</a>&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join5"]},{"text":"impl&lt;F&gt; !Freeze for <a class=\"struct\" href=\"futures_util/future/struct.JoinAll.html\" title=\"struct futures_util::future::JoinAll\">JoinAll</a>&lt;F&gt;","synthetic":true,"types":["futures_util::future::join_all::JoinAll"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Select.html\" title=\"struct futures_util::future::Select\">Select</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::select::Select"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.SelectAll.html\" title=\"struct futures_util::future::SelectAll\">SelectAll</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::future::select_all::SelectAll"]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin.html\" title=\"struct futures_util::future::TryJoin\">TryJoin</a>&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin"]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin3.html\" title=\"struct futures_util::future::TryJoin3\">TryJoin3</a>&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin3"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin4.html\" title=\"struct futures_util::future::TryJoin4\">TryJoin4</a>&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin4"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin5.html\" title=\"struct futures_util::future::TryJoin5\">TryJoin5</a>&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin5"]},{"text":"impl&lt;F&gt; !Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoinAll.html\" title=\"struct futures_util::future::TryJoinAll\">TryJoinAll</a>&lt;F&gt;","synthetic":true,"types":["futures_util::future::try_join_all::TryJoinAll"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TrySelect.html\" title=\"struct futures_util::future::TrySelect\">TrySelect</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_select::TrySelect"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.SelectOk.html\" title=\"struct futures_util::future::SelectOk\">SelectOk</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::future::select_ok::SelectOk"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"enum\" href=\"futures_util/future/enum.Either.html\" title=\"enum futures_util::future::Either\">Either</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::either::Either"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AbortHandle.html\" title=\"struct futures_util::future::AbortHandle\">AbortHandle</a>","synthetic":true,"types":["futures_util::abortable::AbortHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AbortRegistration.html\" title=\"struct futures_util::future::AbortRegistration\">AbortRegistration</a>","synthetic":true,"types":["futures_util::abortable::AbortRegistration"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Abortable.html\" title=\"struct futures_util::future::Abortable\">Abortable</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::abortable::Abortable"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Aborted.html\" title=\"struct futures_util::future::Aborted\">Aborted</a>","synthetic":true,"types":["futures_util::abortable::Aborted"]},{"text":"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Chain.html\" title=\"struct futures_util::stream::Chain\">Chain</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::chain::Chain"]},{"text":"impl&lt;St, C&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Collect.html\" title=\"struct futures_util::stream::Collect\">Collect</a>&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::collect::Collect"]},{"text":"impl&lt;St, FromA, FromB&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Unzip.html\" title=\"struct futures_util::stream::Unzip\">Unzip</a>&lt;St, FromA, FromB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FromA: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;FromB: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::unzip::Unzip"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Concat.html\" title=\"struct futures_util::stream::Concat\">Concat</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::concat::Concat"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Cycle.html\" title=\"struct futures_util::stream::Cycle\">Cycle</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::cycle::Cycle"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Enumerate.html\" title=\"struct futures_util::stream::Enumerate\">Enumerate</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::enumerate::Enumerate"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Filter.html\" title=\"struct futures_util::stream::Filter\">Filter</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::filter::Filter"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FilterMap.html\" title=\"struct futures_util::stream::FilterMap\">FilterMap</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::filter_map::FilterMap"]},{"text":"impl&lt;St, Fut, T, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Fold.html\" title=\"struct futures_util::stream::Fold\">Fold</a>&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::fold::Fold"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ForEach.html\" title=\"struct futures_util::stream::ForEach\">ForEach</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::for_each::ForEach"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Fuse.html\" title=\"struct futures_util::stream::Fuse\">Fuse</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::fuse::Fuse"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.StreamFuture.html\" title=\"struct futures_util::stream::StreamFuture\">StreamFuture</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::into_future::StreamFuture"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Map.html\" title=\"struct futures_util::stream::Map\">Map</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::map::Map"]},{"text":"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Next.html\" title=\"struct futures_util::stream::Next\">Next</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::next::Next"]},{"text":"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SelectNextSome.html\" title=\"struct futures_util::stream::SelectNextSome\">SelectNextSome</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::select_next_some::SelectNextSome"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Peekable.html\" title=\"struct futures_util::stream::Peekable\">Peekable</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::peek::Peekable"]},{"text":"impl&lt;'a, St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Peek.html\" title=\"struct futures_util::stream::Peek\">Peek</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::peek::Peek"]},{"text":"impl&lt;'a, St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.PeekMut.html\" title=\"struct futures_util::stream::PeekMut\">PeekMut</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::peek::PeekMut"]},{"text":"impl&lt;'a, St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.NextIf.html\" title=\"struct futures_util::stream::NextIf\">NextIf</a>&lt;'a, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::peek::NextIf"]},{"text":"impl&lt;'a, St, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.NextIfEq.html\" title=\"struct futures_util::stream::NextIfEq\">NextIfEq</a>&lt;'a, St, T&gt;","synthetic":true,"types":["futures_util::stream::stream::peek::NextIfEq"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Skip.html\" title=\"struct futures_util::stream::Skip\">Skip</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::skip::Skip"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SkipWhile.html\" title=\"struct futures_util::stream::SkipWhile\">SkipWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::skip_while::SkipWhile"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Take.html\" title=\"struct futures_util::stream::Take\">Take</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::take::Take"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TakeWhile.html\" title=\"struct futures_util::stream::TakeWhile\">TakeWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::take_while::TakeWhile"]},{"text":"impl&lt;St, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TakeUntil.html\" title=\"struct futures_util::stream::TakeUntil\">TakeUntil</a>&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::take_until::TakeUntil"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Then.html\" title=\"struct futures_util::stream::Then\">Then</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::then::Then"]},{"text":"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Zip.html\" title=\"struct futures_util::stream::Zip\">Zip</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::zip::Zip"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Chunks.html\" title=\"struct futures_util::stream::Chunks\">Chunks</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::chunks::Chunks"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ReadyChunks.html\" title=\"struct futures_util::stream::ReadyChunks\">ReadyChunks</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::ready_chunks::ReadyChunks"]},{"text":"impl&lt;St, S, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Scan.html\" title=\"struct futures_util::stream::Scan\">Scan</a>&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::scan::Scan"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.BufferUnordered.html\" title=\"struct futures_util::stream::BufferUnordered\">BufferUnordered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::stream::buffer_unordered::BufferUnordered"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Buffered.html\" title=\"struct futures_util::stream::Buffered\">Buffered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::stream::buffered::Buffered"]},{"text":"impl&lt;St, Fut, F&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ForEachConcurrent.html\" title=\"struct futures_util::stream::ForEachConcurrent\">ForEachConcurrent</a>&lt;St, Fut, F&gt;","synthetic":true,"types":["futures_util::stream::stream::for_each_concurrent::ForEachConcurrent"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Flatten.html\" title=\"struct futures_util::stream::Flatten\">Flatten</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::Flatten"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Inspect.html\" title=\"struct futures_util::stream::Inspect\">Inspect</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::Inspect"]},{"text":"impl&lt;St, U, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FlatMap.html\" title=\"struct futures_util::stream::FlatMap\">FlatMap</a>&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::FlatMap"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.AndThen.html\" title=\"struct futures_util::stream::AndThen\">AndThen</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::and_then::AndThen"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.IntoStream.html\" title=\"struct futures_util::stream::IntoStream\">IntoStream</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::into_stream::IntoStream"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.OrElse.html\" title=\"struct futures_util::stream::OrElse\">OrElse</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::or_else::OrElse"]},{"text":"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryNext.html\" title=\"struct futures_util::stream::TryNext\">TryNext</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_next::TryNext"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryForEach.html\" title=\"struct futures_util::stream::TryForEach\">TryForEach</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_for_each::TryForEach"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFilter.html\" title=\"struct futures_util::stream::TryFilter\">TryFilter</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_filter::TryFilter"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFilterMap.html\" title=\"struct futures_util::stream::TryFilterMap\">TryFilterMap</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_filter_map::TryFilterMap"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFlatten.html\" title=\"struct futures_util::stream::TryFlatten\">TryFlatten</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_flatten::TryFlatten"]},{"text":"impl&lt;St, C&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryCollect.html\" title=\"struct futures_util::stream::TryCollect\">TryCollect</a>&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_collect::TryCollect"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryConcat.html\" title=\"struct futures_util::stream::TryConcat\">TryConcat</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_concat::TryConcat"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryChunks.html\" title=\"struct futures_util::stream::TryChunks\">TryChunks</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_chunks::TryChunks"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryChunksError.html\" title=\"struct futures_util::stream::TryChunksError\">TryChunksError</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_chunks::TryChunksError"]},{"text":"impl&lt;St, Fut, T, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFold.html\" title=\"struct futures_util::stream::TryFold\">TryFold</a>&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_fold::TryFold"]},{"text":"impl&lt;T, F, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryUnfold.html\" title=\"struct futures_util::stream::TryUnfold\">TryUnfold</a>&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_unfold::TryUnfold"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TrySkipWhile.html\" title=\"struct futures_util::stream::TrySkipWhile\">TrySkipWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_skip_while::TrySkipWhile"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryTakeWhile.html\" title=\"struct futures_util::stream::TryTakeWhile\">TryTakeWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_take_while::TryTakeWhile"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryBufferUnordered.html\" title=\"struct futures_util::stream::TryBufferUnordered\">TryBufferUnordered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_buffer_unordered::TryBufferUnordered"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryBuffered.html\" title=\"struct futures_util::stream::TryBuffered\">TryBuffered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_buffered::TryBuffered"]},{"text":"impl&lt;St, Fut, F&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryForEachConcurrent.html\" title=\"struct futures_util::stream::TryForEachConcurrent\">TryForEachConcurrent</a>&lt;St, Fut, F&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent"]},{"text":"impl&lt;St, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ErrInto.html\" title=\"struct futures_util::stream::ErrInto\">ErrInto</a>&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::ErrInto"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.InspectOk.html\" title=\"struct futures_util::stream::InspectOk\">InspectOk</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::InspectOk"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.InspectErr.html\" title=\"struct futures_util::stream::InspectErr\">InspectErr</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::InspectErr"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.MapOk.html\" title=\"struct futures_util::stream::MapOk\">MapOk</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::MapOk"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.MapErr.html\" title=\"struct futures_util::stream::MapErr\">MapErr</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::MapErr"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Iter.html\" title=\"struct futures_util::stream::Iter\">Iter</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::iter::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Repeat.html\" title=\"struct futures_util::stream::Repeat\">Repeat</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::repeat::Repeat"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.RepeatWith.html\" title=\"struct futures_util::stream::RepeatWith\">RepeatWith</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::repeat_with::RepeatWith"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Empty.html\" title=\"struct futures_util::stream::Empty\">Empty</a>&lt;T&gt;","synthetic":true,"types":["futures_util::stream::empty::Empty"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Once.html\" title=\"struct futures_util::stream::Once\">Once</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::once::Once"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Pending.html\" title=\"struct futures_util::stream::Pending\">Pending</a>&lt;T&gt;","synthetic":true,"types":["futures_util::stream::pending::Pending"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.PollFn.html\" title=\"struct futures_util::stream::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::poll_fn::PollFn"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.PollImmediate.html\" title=\"struct futures_util::stream::PollImmediate\">PollImmediate</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::poll_immediate::PollImmediate"]},{"text":"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Select.html\" title=\"struct futures_util::stream::Select\">Select</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::select::Select"]},{"text":"impl Freeze for <a class=\"enum\" href=\"futures_util/stream/enum.PollNext.html\" title=\"enum futures_util::stream::PollNext\">PollNext</a>","synthetic":true,"types":["futures_util::stream::select_with_strategy::PollNext"]},{"text":"impl&lt;St1, St2, Clos, State&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SelectWithStrategy.html\" title=\"struct futures_util::stream::SelectWithStrategy\">SelectWithStrategy</a>&lt;St1, St2, Clos, State&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Clos: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;State: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::select_with_strategy::SelectWithStrategy"]},{"text":"impl&lt;T, F, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Unfold.html\" title=\"struct futures_util::stream::Unfold\">Unfold</a>&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::unfold::Unfold"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FuturesOrdered.html\" title=\"struct futures_util::stream::FuturesOrdered\">FuturesOrdered</a>&lt;T&gt;","synthetic":true,"types":["futures_util::stream::futures_ordered::FuturesOrdered"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterPinMut.html\" title=\"struct futures_util::stream::futures_unordered::IterPinMut\">IterPinMut</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IterPinMut"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterMut.html\" title=\"struct futures_util::stream::futures_unordered::IterMut\">IterMut</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IterMut"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterPinRef.html\" title=\"struct futures_util::stream::futures_unordered::IterPinRef\">IterPinRef</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IterPinRef"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.Iter.html\" title=\"struct futures_util::stream::futures_unordered::Iter\">Iter</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::Iter"]},{"text":"impl&lt;Fut&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IntoIter.html\" title=\"struct futures_util::stream::futures_unordered::IntoIter\">IntoIter</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IntoIter"]},{"text":"impl&lt;Fut&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FuturesUnordered.html\" title=\"struct futures_util::stream::FuturesUnordered\">FuturesUnordered</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::FuturesUnordered"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SelectAll.html\" title=\"struct futures_util::stream::SelectAll\">SelectAll</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::select_all::SelectAll"]},{"text":"impl&lt;'a, St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/select_all/struct.Iter.html\" title=\"struct futures_util::stream::select_all::Iter\">Iter</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::select_all::Iter"]},{"text":"impl&lt;'a, St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/select_all/struct.IterMut.html\" title=\"struct futures_util::stream::select_all::IterMut\">IterMut</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::select_all::IterMut"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/select_all/struct.IntoIter.html\" title=\"struct futures_util::stream::select_all::IntoIter\">IntoIter</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::select_all::IntoIter"]}];
implementors["generic_array"] = [{"text":"impl&lt;T, N&gt; Freeze for <a class=\"struct\" href=\"generic_array/iter/struct.GenericArrayIter.html\" title=\"struct generic_array::iter::GenericArrayIter\">GenericArrayIter</a>&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["generic_array::iter::GenericArrayIter"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["generic_array::GenericArray"]}];
implementors["getrandom"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"getrandom/struct.Error.html\" title=\"struct getrandom::Error\">Error</a>","synthetic":true,"types":["getrandom::error::Error"]}];
implementors["globset"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"globset/struct.Glob.html\" title=\"struct globset::Glob\">Glob</a>","synthetic":true,"types":["globset::glob::Glob"]},{"text":"impl Freeze for <a class=\"struct\" href=\"globset/struct.GlobMatcher.html\" title=\"struct globset::GlobMatcher\">GlobMatcher</a>","synthetic":true,"types":["globset::glob::GlobMatcher"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"globset/struct.GlobBuilder.html\" title=\"struct globset::GlobBuilder\">GlobBuilder</a>&lt;'a&gt;","synthetic":true,"types":["globset::glob::GlobBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"globset/struct.Error.html\" title=\"struct globset::Error\">Error</a>","synthetic":true,"types":["globset::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"globset/enum.ErrorKind.html\" title=\"enum globset::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["globset::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"globset/struct.GlobSet.html\" title=\"struct globset::GlobSet\">GlobSet</a>","synthetic":true,"types":["globset::GlobSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"globset/struct.GlobSetBuilder.html\" title=\"struct globset::GlobSetBuilder\">GlobSetBuilder</a>","synthetic":true,"types":["globset::GlobSetBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"globset/struct.Candidate.html\" title=\"struct globset::Candidate\">Candidate</a>&lt;'a&gt;","synthetic":true,"types":["globset::Candidate"]}];
implementors["globwalk"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"globwalk/struct.GlobError.html\" title=\"struct globwalk::GlobError\">GlobError</a>","synthetic":true,"types":["globwalk::GlobError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"globwalk/struct.FileType.html\" title=\"struct globwalk::FileType\">FileType</a>","synthetic":true,"types":["globwalk::FileType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"globwalk/struct.GlobWalkerBuilder.html\" title=\"struct globwalk::GlobWalkerBuilder\">GlobWalkerBuilder</a>","synthetic":true,"types":["globwalk::GlobWalkerBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"globwalk/struct.GlobWalker.html\" title=\"struct globwalk::GlobWalker\">GlobWalker</a>","synthetic":true,"types":["globwalk::GlobWalker"]}];
implementors["h2"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"h2/struct.Error.html\" title=\"struct h2::Error\">Error</a>","synthetic":true,"types":["h2::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.Reason.html\" title=\"struct h2::Reason\">Reason</a>","synthetic":true,"types":["h2::frame::reason::Reason"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/client/struct.SendRequest.html\" title=\"struct h2::client::SendRequest\">SendRequest</a>&lt;B&gt;","synthetic":true,"types":["h2::client::SendRequest"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/client/struct.ReadySendRequest.html\" title=\"struct h2::client::ReadySendRequest\">ReadySendRequest</a>&lt;B&gt;","synthetic":true,"types":["h2::client::ReadySendRequest"]},{"text":"impl&lt;T, B&nbsp;=&nbsp;<a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>&gt; !Freeze for <a class=\"struct\" href=\"h2/client/struct.Connection.html\" title=\"struct h2::client::Connection\">Connection</a>&lt;T, B&gt;","synthetic":true,"types":["h2::client::Connection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/client/struct.ResponseFuture.html\" title=\"struct h2::client::ResponseFuture\">ResponseFuture</a>","synthetic":true,"types":["h2::client::ResponseFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/client/struct.PushedResponseFuture.html\" title=\"struct h2::client::PushedResponseFuture\">PushedResponseFuture</a>","synthetic":true,"types":["h2::client::PushedResponseFuture"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"h2/client/struct.PushPromise.html\" title=\"struct h2::client::PushPromise\">PushPromise</a>","synthetic":true,"types":["h2::client::PushPromise"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/client/struct.PushPromises.html\" title=\"struct h2::client::PushPromises\">PushPromises</a>","synthetic":true,"types":["h2::client::PushPromises"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/client/struct.Builder.html\" title=\"struct h2::client::Builder\">Builder</a>","synthetic":true,"types":["h2::client::Builder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"h2/ext/struct.Protocol.html\" title=\"struct h2::ext::Protocol\">Protocol</a>","synthetic":true,"types":["h2::ext::Protocol"]},{"text":"impl&lt;T, B&nbsp;=&nbsp;<a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>&gt; !Freeze for <a class=\"struct\" href=\"h2/server/struct.Handshake.html\" title=\"struct h2::server::Handshake\">Handshake</a>&lt;T, B&gt;","synthetic":true,"types":["h2::server::Handshake"]},{"text":"impl&lt;T, B&gt; !Freeze for <a class=\"struct\" href=\"h2/server/struct.Connection.html\" title=\"struct h2::server::Connection\">Connection</a>&lt;T, B&gt;","synthetic":true,"types":["h2::server::Connection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/server/struct.Builder.html\" title=\"struct h2::server::Builder\">Builder</a>","synthetic":true,"types":["h2::server::Builder"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/server/struct.SendResponse.html\" title=\"struct h2::server::SendResponse\">SendResponse</a>&lt;B&gt;","synthetic":true,"types":["h2::server::SendResponse"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/server/struct.SendPushedResponse.html\" title=\"struct h2::server::SendPushedResponse\">SendPushedResponse</a>&lt;B&gt;","synthetic":true,"types":["h2::server::SendPushedResponse"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/struct.SendStream.html\" title=\"struct h2::SendStream\">SendStream</a>&lt;B&gt;","synthetic":true,"types":["h2::share::SendStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.StreamId.html\" title=\"struct h2::StreamId\">StreamId</a>","synthetic":true,"types":["h2::share::StreamId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.RecvStream.html\" title=\"struct h2::RecvStream\">RecvStream</a>","synthetic":true,"types":["h2::share::RecvStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.FlowControl.html\" title=\"struct h2::FlowControl\">FlowControl</a>","synthetic":true,"types":["h2::share::FlowControl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.PingPong.html\" title=\"struct h2::PingPong\">PingPong</a>","synthetic":true,"types":["h2::share::PingPong"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.Ping.html\" title=\"struct h2::Ping\">Ping</a>","synthetic":true,"types":["h2::share::Ping"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.Pong.html\" title=\"struct h2::Pong\">Pong</a>","synthetic":true,"types":["h2::share::Pong"]}];
implementors["hashbrown"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.Bucket.html\" title=\"struct hashbrown::raw::Bucket\">Bucket</a>&lt;T&gt;","synthetic":true,"types":["hashbrown::raw::inner::Bucket"]},{"text":"impl&lt;T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawTable.html\" title=\"struct hashbrown::raw::RawTable\">RawTable</a>&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::raw::inner::RawTable"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawIter.html\" title=\"struct hashbrown::raw::RawIter\">RawIter</a>&lt;T&gt;","synthetic":true,"types":["hashbrown::raw::inner::RawIter"]},{"text":"impl&lt;T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawIntoIter.html\" title=\"struct hashbrown::raw::RawIntoIter\">RawIntoIter</a>&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::raw::inner::RawIntoIter"]},{"text":"impl&lt;'a, T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawDrain.html\" title=\"struct hashbrown::raw::RawDrain\">RawDrain</a>&lt;'a, T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::raw::inner::RawDrain"]},{"text":"impl&lt;'a, T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawIterHash.html\" title=\"struct hashbrown::raw::RawIterHash\">RawIterHash</a>&lt;'a, T, A&gt;","synthetic":true,"types":["hashbrown::raw::inner::RawIterHash"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.DefaultHashBuilder.html\" title=\"enum hashbrown::hash_map::DefaultHashBuilder\">DefaultHashBuilder</a>","synthetic":true,"types":["hashbrown::map::DefaultHashBuilder"]},{"text":"impl&lt;K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.HashMap.html\" title=\"struct hashbrown::hash_map::HashMap\">HashMap</a>&lt;K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::HashMap"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Iter.html\" title=\"struct hashbrown::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IterMut.html\" title=\"struct hashbrown::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::IterMut"]},{"text":"impl&lt;K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoIter.html\" title=\"struct hashbrown::hash_map::IntoIter\">IntoIter</a>&lt;K, V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::IntoIter"]},{"text":"impl&lt;K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoKeys.html\" title=\"struct hashbrown::hash_map::IntoKeys\">IntoKeys</a>&lt;K, V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::IntoKeys"]},{"text":"impl&lt;K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoValues.html\" title=\"struct hashbrown::hash_map::IntoValues\">IntoValues</a>&lt;K, V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::IntoValues"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Keys.html\" title=\"struct hashbrown::hash_map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Values.html\" title=\"struct hashbrown::hash_map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::Values"]},{"text":"impl&lt;'a, K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Drain.html\" title=\"struct hashbrown::hash_map::Drain\">Drain</a>&lt;'a, K, V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::Drain"]},{"text":"impl&lt;'a, K, V, F, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.DrainFilter.html\" title=\"struct hashbrown::hash_map::DrainFilter\">DrainFilter</a>&lt;'a, K, V, F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::DrainFilter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.ValuesMut.html\" title=\"struct hashbrown::hash_map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::ValuesMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawEntryBuilderMut.html\" title=\"struct hashbrown::hash_map::RawEntryBuilderMut\">RawEntryBuilderMut</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawEntryBuilderMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.RawEntryMut.html\" title=\"enum hashbrown::hash_map::RawEntryMut\">RawEntryMut</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawEntryMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawOccupiedEntryMut.html\" title=\"struct hashbrown::hash_map::RawOccupiedEntryMut\">RawOccupiedEntryMut</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawOccupiedEntryMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawVacantEntryMut.html\" title=\"struct hashbrown::hash_map::RawVacantEntryMut\">RawVacantEntryMut</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawVacantEntryMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawEntryBuilder.html\" title=\"struct hashbrown::hash_map::RawEntryBuilder\">RawEntryBuilder</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawEntryBuilder"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.Entry.html\" title=\"enum hashbrown::hash_map::Entry\">Entry</a>&lt;'a, K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::Entry"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedEntry.html\" title=\"struct hashbrown::hash_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::OccupiedEntry"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.VacantEntry.html\" title=\"struct hashbrown::hash_map::VacantEntry\">VacantEntry</a>&lt;'a, K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::VacantEntry"]},{"text":"impl&lt;'a, 'b, K, Q:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, V, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.EntryRef.html\" title=\"enum hashbrown::hash_map::EntryRef\">EntryRef</a>&lt;'a, 'b, K, Q, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::EntryRef"]},{"text":"impl&lt;'a, 'b, K, Q:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedEntryRef.html\" title=\"struct hashbrown::hash_map::OccupiedEntryRef\">OccupiedEntryRef</a>&lt;'a, 'b, K, Q, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::OccupiedEntryRef"]},{"text":"impl&lt;'a, 'b, K, Q:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.VacantEntryRef.html\" title=\"struct hashbrown::hash_map::VacantEntryRef\">VacantEntryRef</a>&lt;'a, 'b, K, Q, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::VacantEntryRef"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedError.html\" title=\"struct hashbrown::hash_map::OccupiedError\">OccupiedError</a>&lt;'a, K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::OccupiedError"]},{"text":"impl&lt;T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::HashSet"]},{"text":"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Iter.html\" title=\"struct hashbrown::hash_set::Iter\">Iter</a>&lt;'a, K&gt;","synthetic":true,"types":["hashbrown::set::Iter"]},{"text":"impl&lt;K, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.IntoIter.html\" title=\"struct hashbrown::hash_set::IntoIter\">IntoIter</a>&lt;K, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::IntoIter"]},{"text":"impl&lt;'a, K, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Drain.html\" title=\"struct hashbrown::hash_set::Drain\">Drain</a>&lt;'a, K, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::Drain"]},{"text":"impl&lt;'a, K, F, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.DrainFilter.html\" title=\"struct hashbrown::hash_set::DrainFilter\">DrainFilter</a>&lt;'a, K, F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::DrainFilter"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Intersection.html\" title=\"struct hashbrown::hash_set::Intersection\">Intersection</a>&lt;'a, T, S, A&gt;","synthetic":true,"types":["hashbrown::set::Intersection"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Difference.html\" title=\"struct hashbrown::hash_set::Difference\">Difference</a>&lt;'a, T, S, A&gt;","synthetic":true,"types":["hashbrown::set::Difference"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.SymmetricDifference.html\" title=\"struct hashbrown::hash_set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S, A&gt;","synthetic":true,"types":["hashbrown::set::SymmetricDifference"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Union.html\" title=\"struct hashbrown::hash_set::Union\">Union</a>&lt;'a, T, S, A&gt;","synthetic":true,"types":["hashbrown::set::Union"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_set/enum.Entry.html\" title=\"enum hashbrown::hash_set::Entry\">Entry</a>&lt;'a, T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::Entry"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.OccupiedEntry.html\" title=\"struct hashbrown::hash_set::OccupiedEntry\">OccupiedEntry</a>&lt;'a, T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::OccupiedEntry"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.VacantEntry.html\" title=\"struct hashbrown::hash_set::VacantEntry\">VacantEntry</a>&lt;'a, T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::VacantEntry"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hashbrown/enum.TryReserveError.html\" title=\"enum hashbrown::TryReserveError\">TryReserveError</a>","synthetic":true,"types":["hashbrown::TryReserveError"]}];
implementors["http"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.HeaderMap.html\" title=\"struct http::header::HeaderMap\">HeaderMap</a>&lt;T&gt;","synthetic":true,"types":["http::header::map::HeaderMap"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Iter.html\" title=\"struct http::header::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.IterMut.html\" title=\"struct http::header::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::IterMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.IntoIter.html\" title=\"struct http::header::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["http::header::map::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Keys.html\" title=\"struct http::header::Keys\">Keys</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Keys"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Values.html\" title=\"struct http::header::Values\">Values</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Values"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValuesMut.html\" title=\"struct http::header::ValuesMut\">ValuesMut</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::ValuesMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Drain.html\" title=\"struct http::header::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Drain"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.GetAll.html\" title=\"struct http::header::GetAll\">GetAll</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::GetAll"]},{"text":"impl&lt;'a, T&gt; !Freeze for <a class=\"enum\" href=\"http/header/enum.Entry.html\" title=\"enum http::header::Entry\">Entry</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Entry"]},{"text":"impl&lt;'a, T&gt; !Freeze for <a class=\"struct\" href=\"http/header/struct.VacantEntry.html\" title=\"struct http::header::VacantEntry\">VacantEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::VacantEntry"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.OccupiedEntry.html\" title=\"struct http::header::OccupiedEntry\">OccupiedEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::OccupiedEntry"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValueIter.html\" title=\"struct http::header::ValueIter\">ValueIter</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::ValueIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValueIterMut.html\" title=\"struct http::header::ValueIterMut\">ValueIterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::ValueIterMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValueDrain.html\" title=\"struct http::header::ValueDrain\">ValueDrain</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["http::header::map::ValueDrain"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/header/struct.HeaderName.html\" title=\"struct http::header::HeaderName\">HeaderName</a>","synthetic":true,"types":["http::header::name::HeaderName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/header/struct.InvalidHeaderName.html\" title=\"struct http::header::InvalidHeaderName\">InvalidHeaderName</a>","synthetic":true,"types":["http::header::name::InvalidHeaderName"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/header/struct.HeaderValue.html\" title=\"struct http::header::HeaderValue\">HeaderValue</a>","synthetic":true,"types":["http::header::value::HeaderValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/header/struct.InvalidHeaderValue.html\" title=\"struct http::header::InvalidHeaderValue\">InvalidHeaderValue</a>","synthetic":true,"types":["http::header::value::InvalidHeaderValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/header/struct.ToStrError.html\" title=\"struct http::header::ToStrError\">ToStrError</a>","synthetic":true,"types":["http::header::value::ToStrError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/method/struct.Method.html\" title=\"struct http::method::Method\">Method</a>","synthetic":true,"types":["http::method::Method"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/method/struct.InvalidMethod.html\" title=\"struct http::method::InvalidMethod\">InvalidMethod</a>","synthetic":true,"types":["http::method::InvalidMethod"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;T&gt;","synthetic":true,"types":["http::request::Request"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/request/struct.Parts.html\" title=\"struct http::request::Parts\">Parts</a>","synthetic":true,"types":["http::request::Parts"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/request/struct.Builder.html\" title=\"struct http::request::Builder\">Builder</a>","synthetic":true,"types":["http::request::Builder"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["http::response::Response"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/response/struct.Parts.html\" title=\"struct http::response::Parts\">Parts</a>","synthetic":true,"types":["http::response::Parts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/response/struct.Builder.html\" title=\"struct http::response::Builder\">Builder</a>","synthetic":true,"types":["http::response::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/status/struct.StatusCode.html\" title=\"struct http::status::StatusCode\">StatusCode</a>","synthetic":true,"types":["http::status::StatusCode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/status/struct.InvalidStatusCode.html\" title=\"struct http::status::InvalidStatusCode\">InvalidStatusCode</a>","synthetic":true,"types":["http::status::InvalidStatusCode"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Authority.html\" title=\"struct http::uri::Authority\">Authority</a>","synthetic":true,"types":["http::uri::authority::Authority"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Builder.html\" title=\"struct http::uri::Builder\">Builder</a>","synthetic":true,"types":["http::uri::builder::Builder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.PathAndQuery.html\" title=\"struct http::uri::PathAndQuery\">PathAndQuery</a>","synthetic":true,"types":["http::uri::path::PathAndQuery"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/uri/struct.Port.html\" title=\"struct http::uri::Port\">Port</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["http::uri::port::Port"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/uri/struct.Scheme.html\" title=\"struct http::uri::Scheme\">Scheme</a>","synthetic":true,"types":["http::uri::scheme::Scheme"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Uri.html\" title=\"struct http::uri::Uri\">Uri</a>","synthetic":true,"types":["http::uri::Uri"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Parts.html\" title=\"struct http::uri::Parts\">Parts</a>","synthetic":true,"types":["http::uri::Parts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/uri/struct.InvalidUri.html\" title=\"struct http::uri::InvalidUri\">InvalidUri</a>","synthetic":true,"types":["http::uri::InvalidUri"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/uri/struct.InvalidUriParts.html\" title=\"struct http::uri::InvalidUriParts\">InvalidUriParts</a>","synthetic":true,"types":["http::uri::InvalidUriParts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/version/struct.Version.html\" title=\"struct http::version::Version\">Version</a>","synthetic":true,"types":["http::version::Version"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/struct.Error.html\" title=\"struct http::Error\">Error</a>","synthetic":true,"types":["http::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/struct.Extensions.html\" title=\"struct http::Extensions\">Extensions</a>","synthetic":true,"types":["http::extensions::Extensions"]}];
implementors["http_range"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"http_range/enum.HttpRangeParseError.html\" title=\"enum http_range::HttpRangeParseError\">HttpRangeParseError</a>","synthetic":true,"types":["http_range::HttpRangeParseError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http_range/struct.HttpRange.html\" title=\"struct http_range::HttpRange\">HttpRange</a>","synthetic":true,"types":["http_range::HttpRange"]}];
implementors["httparse"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"httparse/enum.Error.html\" title=\"enum httparse::Error\">Error</a>","synthetic":true,"types":["httparse::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"httparse/struct.InvalidChunkSize.html\" title=\"struct httparse::InvalidChunkSize\">InvalidChunkSize</a>","synthetic":true,"types":["httparse::InvalidChunkSize"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"httparse/enum.Status.html\" title=\"enum httparse::Status\">Status</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["httparse::Status"]},{"text":"impl Freeze for <a class=\"struct\" href=\"httparse/struct.ParserConfig.html\" title=\"struct httparse::ParserConfig\">ParserConfig</a>","synthetic":true,"types":["httparse::ParserConfig"]},{"text":"impl&lt;'headers, 'buf&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Request.html\" title=\"struct httparse::Request\">Request</a>&lt;'headers, 'buf&gt;","synthetic":true,"types":["httparse::Request"]},{"text":"impl&lt;'headers, 'buf&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Response.html\" title=\"struct httparse::Response\">Response</a>&lt;'headers, 'buf&gt;","synthetic":true,"types":["httparse::Response"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Header.html\" title=\"struct httparse::Header\">Header</a>&lt;'a&gt;","synthetic":true,"types":["httparse::Header"]}];
implementors["httpdate"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"httpdate/struct.HttpDate.html\" title=\"struct httpdate::HttpDate\">HttpDate</a>","synthetic":true,"types":["httpdate::date::HttpDate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"httpdate/struct.Error.html\" title=\"struct httpdate::Error\">Error</a>","synthetic":true,"types":["httpdate::Error"]}];
implementors["humansize"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"humansize/file_size_opts/enum.Kilo.html\" title=\"enum humansize::file_size_opts::Kilo\">Kilo</a>","synthetic":true,"types":["humansize::file_size_opts::Kilo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"humansize/file_size_opts/enum.FixedAt.html\" title=\"enum humansize::file_size_opts::FixedAt\">FixedAt</a>","synthetic":true,"types":["humansize::file_size_opts::FixedAt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"humansize/file_size_opts/struct.FileSizeOpts.html\" title=\"struct humansize::file_size_opts::FileSizeOpts\">FileSizeOpts</a>","synthetic":true,"types":["humansize::file_size_opts::FileSizeOpts"]}];
implementors["humantime"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"humantime/enum.DurationError.html\" title=\"enum humantime::DurationError\">Error</a>","synthetic":true,"types":["humantime::duration::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"humantime/struct.FormattedDuration.html\" title=\"struct humantime::FormattedDuration\">FormattedDuration</a>","synthetic":true,"types":["humantime::duration::FormattedDuration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"humantime/struct.Duration.html\" title=\"struct humantime::Duration\">Duration</a>","synthetic":true,"types":["humantime::wrapper::Duration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"humantime/struct.Timestamp.html\" title=\"struct humantime::Timestamp\">Timestamp</a>","synthetic":true,"types":["humantime::wrapper::Timestamp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"humantime/enum.TimestampError.html\" title=\"enum humantime::TimestampError\">Error</a>","synthetic":true,"types":["humantime::date::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"humantime/struct.Rfc3339Timestamp.html\" title=\"struct humantime::Rfc3339Timestamp\">Rfc3339Timestamp</a>","synthetic":true,"types":["humantime::date::Rfc3339Timestamp"]}];
implementors["iana_time_zone"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"iana_time_zone/enum.GetTimezoneError.html\" title=\"enum iana_time_zone::GetTimezoneError\">GetTimezoneError</a>","synthetic":true,"types":["iana_time_zone::GetTimezoneError"]}];
implementors["idna"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"idna/struct.Idna.html\" title=\"struct idna::Idna\">Idna</a>","synthetic":true,"types":["idna::uts46::Idna"]},{"text":"impl Freeze for <a class=\"struct\" href=\"idna/struct.Config.html\" title=\"struct idna::Config\">Config</a>","synthetic":true,"types":["idna::uts46::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"idna/struct.Errors.html\" title=\"struct idna::Errors\">Errors</a>","synthetic":true,"types":["idna::uts46::Errors"]}];
implementors["ignore"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/gitignore/struct.Glob.html\" title=\"struct ignore::gitignore::Glob\">Glob</a>","synthetic":true,"types":["ignore::gitignore::Glob"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/gitignore/struct.Gitignore.html\" title=\"struct ignore::gitignore::Gitignore\">Gitignore</a>","synthetic":true,"types":["ignore::gitignore::Gitignore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/gitignore/struct.GitignoreBuilder.html\" title=\"struct ignore::gitignore::GitignoreBuilder\">GitignoreBuilder</a>","synthetic":true,"types":["ignore::gitignore::GitignoreBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ignore/overrides/struct.Glob.html\" title=\"struct ignore::overrides::Glob\">Glob</a>&lt;'a&gt;","synthetic":true,"types":["ignore::overrides::Glob"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/overrides/struct.Override.html\" title=\"struct ignore::overrides::Override\">Override</a>","synthetic":true,"types":["ignore::overrides::Override"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/overrides/struct.OverrideBuilder.html\" title=\"struct ignore::overrides::OverrideBuilder\">OverrideBuilder</a>","synthetic":true,"types":["ignore::overrides::OverrideBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ignore/types/struct.Glob.html\" title=\"struct ignore::types::Glob\">Glob</a>&lt;'a&gt;","synthetic":true,"types":["ignore::types::Glob"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/types/struct.FileTypeDef.html\" title=\"struct ignore::types::FileTypeDef\">FileTypeDef</a>","synthetic":true,"types":["ignore::types::FileTypeDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/types/struct.Types.html\" title=\"struct ignore::types::Types\">Types</a>","synthetic":true,"types":["ignore::types::Types"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/types/struct.TypesBuilder.html\" title=\"struct ignore::types::TypesBuilder\">TypesBuilder</a>","synthetic":true,"types":["ignore::types::TypesBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/struct.DirEntry.html\" title=\"struct ignore::DirEntry\">DirEntry</a>","synthetic":true,"types":["ignore::walk::DirEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/struct.WalkBuilder.html\" title=\"struct ignore::WalkBuilder\">WalkBuilder</a>","synthetic":true,"types":["ignore::walk::WalkBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/struct.Walk.html\" title=\"struct ignore::Walk\">Walk</a>","synthetic":true,"types":["ignore::walk::Walk"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ignore/enum.WalkState.html\" title=\"enum ignore::WalkState\">WalkState</a>","synthetic":true,"types":["ignore::walk::WalkState"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ignore/struct.WalkParallel.html\" title=\"struct ignore::WalkParallel\">WalkParallel</a>","synthetic":true,"types":["ignore::walk::WalkParallel"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ignore/enum.Error.html\" title=\"enum ignore::Error\">Error</a>","synthetic":true,"types":["ignore::Error"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"ignore/enum.Match.html\" title=\"enum ignore::Match\">Match</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["ignore::Match"]}];
implementors["indexmap"] = [{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.OccupiedEntry.html\" title=\"struct indexmap::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::core::raw::OccupiedEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"enum\" href=\"indexmap/map/enum.Entry.html\" title=\"enum indexmap::map::Entry\">Entry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::core::Entry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.VacantEntry.html\" title=\"struct indexmap::map::VacantEntry\">VacantEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::core::VacantEntry"]},{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IndexMap.html\" title=\"struct indexmap::map::IndexMap\">IndexMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::IndexMap"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Keys.html\" title=\"struct indexmap::map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Keys"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IntoKeys.html\" title=\"struct indexmap::map::IntoKeys\">IntoKeys</a>&lt;K, V&gt;","synthetic":true,"types":["indexmap::map::IntoKeys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Values.html\" title=\"struct indexmap::map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Values"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.ValuesMut.html\" title=\"struct indexmap::map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::ValuesMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IntoValues.html\" title=\"struct indexmap::map::IntoValues\">IntoValues</a>&lt;K, V&gt;","synthetic":true,"types":["indexmap::map::IntoValues"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Iter.html\" title=\"struct indexmap::map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IterMut.html\" title=\"struct indexmap::map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::IterMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IntoIter.html\" title=\"struct indexmap::map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["indexmap::map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Drain.html\" title=\"struct indexmap::map::Drain\">Drain</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Drain"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::set::IndexSet"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.IntoIter.html\" title=\"struct indexmap::set::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["indexmap::set::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Iter.html\" title=\"struct indexmap::set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["indexmap::set::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Drain.html\" title=\"struct indexmap::set::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["indexmap::set::Drain"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Difference.html\" title=\"struct indexmap::set::Difference\">Difference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["indexmap::set::Difference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Intersection.html\" title=\"struct indexmap::set::Intersection\">Intersection</a>&lt;'a, T, S&gt;","synthetic":true,"types":["indexmap::set::Intersection"]},{"text":"impl&lt;'a, T, S1, S2&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.SymmetricDifference.html\" title=\"struct indexmap::set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S1, S2&gt;","synthetic":true,"types":["indexmap::set::SymmetricDifference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Union.html\" title=\"struct indexmap::set::Union\">Union</a>&lt;'a, T, S&gt;","synthetic":true,"types":["indexmap::set::Union"]}];
implementors["itoa"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"itoa/struct.Buffer.html\" title=\"struct itoa::Buffer\">Buffer</a>","synthetic":true,"types":["itoa::Buffer"]}];
implementors["language_tags"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"language_tags/struct.LanguageTag.html\" title=\"struct language_tags::LanguageTag\">LanguageTag</a>","synthetic":true,"types":["language_tags::LanguageTag"]},{"text":"impl Freeze for <a class=\"enum\" href=\"language_tags/enum.ParseError.html\" title=\"enum language_tags::ParseError\">ParseError</a>","synthetic":true,"types":["language_tags::ParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"language_tags/enum.ValidationError.html\" title=\"enum language_tags::ValidationError\">ValidationError</a>","synthetic":true,"types":["language_tags::ValidationError"]}];
implementors["libc"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.max_align_t.html\" title=\"struct libc::max_align_t\">max_align_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::b64::aarch64::align::max_align_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ucontext_t.html\" title=\"struct libc::ucontext_t\">ucontext_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::b64::aarch64::align::ucontext_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__darwin_mcontext64.html\" title=\"struct libc::__darwin_mcontext64\">__darwin_mcontext64</a>","synthetic":true,"types":["libc::unix::bsd::apple::b64::aarch64::align::__darwin_mcontext64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__darwin_arm_exception_state64.html\" title=\"struct libc::__darwin_arm_exception_state64\">__darwin_arm_exception_state64</a>","synthetic":true,"types":["libc::unix::bsd::apple::b64::aarch64::align::__darwin_arm_exception_state64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__darwin_arm_thread_state64.html\" title=\"struct libc::__darwin_arm_thread_state64\">__darwin_arm_thread_state64</a>","synthetic":true,"types":["libc::unix::bsd::apple::b64::aarch64::align::__darwin_arm_thread_state64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__darwin_arm_neon_state64.html\" title=\"struct libc::__darwin_arm_neon_state64\">__darwin_arm_neon_state64</a>","synthetic":true,"types":["libc::unix::bsd::apple::b64::aarch64::align::__darwin_arm_neon_state64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.malloc_zone_t.html\" title=\"struct libc::malloc_zone_t\">malloc_zone_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::b64::aarch64::malloc_zone_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timeval32.html\" title=\"struct libc::timeval32\">timeval32</a>","synthetic":true,"types":["libc::unix::bsd::apple::b64::timeval32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.if_data.html\" title=\"struct libc::if_data\">if_data</a>","synthetic":true,"types":["libc::unix::bsd::apple::b64::if_data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.bpf_hdr.html\" title=\"struct libc::bpf_hdr\">bpf_hdr</a>","synthetic":true,"types":["libc::unix::bsd::apple::b64::bpf_hdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_attr_t.html\" title=\"struct libc::pthread_attr_t\">pthread_attr_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::b64::pthread_attr_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.timezone.html\" title=\"enum libc::timezone\">timezone</a>","synthetic":true,"types":["libc::unix::bsd::apple::timezone"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.qos_class_t.html\" title=\"enum libc::qos_class_t\">qos_class_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::qos_class_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.sysdir_search_path_directory_t.html\" title=\"enum libc::sysdir_search_path_directory_t\">sysdir_search_path_directory_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::sysdir_search_path_directory_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.sysdir_search_path_domain_mask_t.html\" title=\"enum libc::sysdir_search_path_domain_mask_t\">sysdir_search_path_domain_mask_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::sysdir_search_path_domain_mask_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq.html\" title=\"struct libc::ip_mreq\">ip_mreq</a>","synthetic":true,"types":["libc::unix::bsd::apple::ip_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreqn.html\" title=\"struct libc::ip_mreqn\">ip_mreqn</a>","synthetic":true,"types":["libc::unix::bsd::apple::ip_mreqn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq_source.html\" title=\"struct libc::ip_mreq_source\">ip_mreq_source</a>","synthetic":true,"types":["libc::unix::bsd::apple::ip_mreq_source"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.aiocb.html\" title=\"struct libc::aiocb\">aiocb</a>","synthetic":true,"types":["libc::unix::bsd::apple::aiocb"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob_t.html\" title=\"struct libc::glob_t\">glob_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::glob_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.addrinfo.html\" title=\"struct libc::addrinfo\">addrinfo</a>","synthetic":true,"types":["libc::unix::bsd::apple::addrinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mach_timebase_info.html\" title=\"struct libc::mach_timebase_info\">mach_timebase_info</a>","synthetic":true,"types":["libc::unix::bsd::apple::mach_timebase_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat.html\" title=\"struct libc::stat\">stat</a>","synthetic":true,"types":["libc::unix::bsd::apple::stat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutexattr_t.html\" title=\"struct libc::pthread_mutexattr_t\">pthread_mutexattr_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::pthread_mutexattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_condattr_t.html\" title=\"struct libc::pthread_condattr_t\">pthread_condattr_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::pthread_condattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlockattr_t.html\" title=\"struct libc::pthread_rwlockattr_t\">pthread_rwlockattr_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::pthread_rwlockattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.siginfo_t.html\" title=\"struct libc::siginfo_t\">siginfo_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::siginfo_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigaction.html\" title=\"struct libc::sigaction\">sigaction</a>","synthetic":true,"types":["libc::unix::bsd::apple::sigaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stack_t.html\" title=\"struct libc::stack_t\">stack_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::stack_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fstore_t.html\" title=\"struct libc::fstore_t\">fstore_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::fstore_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.radvisory.html\" title=\"struct libc::radvisory\">radvisory</a>","synthetic":true,"types":["libc::unix::bsd::apple::radvisory"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs.html\" title=\"struct libc::statvfs\">statvfs</a>","synthetic":true,"types":["libc::unix::bsd::apple::statvfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Dl_info.html\" title=\"struct libc::Dl_info\">Dl_info</a>","synthetic":true,"types":["libc::unix::bsd::apple::Dl_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in.html\" title=\"struct libc::sockaddr_in\">sockaddr_in</a>","synthetic":true,"types":["libc::unix::bsd::apple::sockaddr_in"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.kevent64_s.html\" title=\"struct libc::kevent64_s\">kevent64_s</a>","synthetic":true,"types":["libc::unix::bsd::apple::kevent64_s"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dqblk.html\" title=\"struct libc::dqblk\">dqblk</a>","synthetic":true,"types":["libc::unix::bsd::apple::dqblk"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.if_msghdr.html\" title=\"struct libc::if_msghdr\">if_msghdr</a>","synthetic":true,"types":["libc::unix::bsd::apple::if_msghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios.html\" title=\"struct libc::termios\">termios</a>","synthetic":true,"types":["libc::unix::bsd::apple::termios"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock.html\" title=\"struct libc::flock\">flock</a>","synthetic":true,"types":["libc::unix::bsd::apple::flock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sf_hdtr.html\" title=\"struct libc::sf_hdtr\">sf_hdtr</a>","synthetic":true,"types":["libc::unix::bsd::apple::sf_hdtr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.lconv.html\" title=\"struct libc::lconv\">lconv</a>","synthetic":true,"types":["libc::unix::bsd::apple::lconv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.proc_taskinfo.html\" title=\"struct libc::proc_taskinfo\">proc_taskinfo</a>","synthetic":true,"types":["libc::unix::bsd::apple::proc_taskinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.proc_bsdinfo.html\" title=\"struct libc::proc_bsdinfo\">proc_bsdinfo</a>","synthetic":true,"types":["libc::unix::bsd::apple::proc_bsdinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.proc_taskallinfo.html\" title=\"struct libc::proc_taskallinfo\">proc_taskallinfo</a>","synthetic":true,"types":["libc::unix::bsd::apple::proc_taskallinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.xsw_usage.html\" title=\"struct libc::xsw_usage\">xsw_usage</a>","synthetic":true,"types":["libc::unix::bsd::apple::xsw_usage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.xucred.html\" title=\"struct libc::xucred\">xucred</a>","synthetic":true,"types":["libc::unix::bsd::apple::xucred"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mach_header.html\" title=\"struct libc::mach_header\">mach_header</a>","synthetic":true,"types":["libc::unix::bsd::apple::mach_header"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mach_header_64.html\" title=\"struct libc::mach_header_64\">mach_header_64</a>","synthetic":true,"types":["libc::unix::bsd::apple::mach_header_64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.segment_command.html\" title=\"struct libc::segment_command\">segment_command</a>","synthetic":true,"types":["libc::unix::bsd::apple::segment_command"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.segment_command_64.html\" title=\"struct libc::segment_command_64\">segment_command_64</a>","synthetic":true,"types":["libc::unix::bsd::apple::segment_command_64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.load_command.html\" title=\"struct libc::load_command\">load_command</a>","synthetic":true,"types":["libc::unix::bsd::apple::load_command"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_dl.html\" title=\"struct libc::sockaddr_dl\">sockaddr_dl</a>","synthetic":true,"types":["libc::unix::bsd::apple::sockaddr_dl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_inarp.html\" title=\"struct libc::sockaddr_inarp\">sockaddr_inarp</a>","synthetic":true,"types":["libc::unix::bsd::apple::sockaddr_inarp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_ctl.html\" title=\"struct libc::sockaddr_ctl\">sockaddr_ctl</a>","synthetic":true,"types":["libc::unix::bsd::apple::sockaddr_ctl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_pktinfo.html\" title=\"struct libc::in_pktinfo\">in_pktinfo</a>","synthetic":true,"types":["libc::unix::bsd::apple::in_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_pktinfo.html\" title=\"struct libc::in6_pktinfo\">in6_pktinfo</a>","synthetic":true,"types":["libc::unix::bsd::apple::in6_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipc_perm.html\" title=\"struct libc::ipc_perm\">ipc_perm</a>","synthetic":true,"types":["libc::unix::bsd::apple::ipc_perm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sembuf.html\" title=\"struct libc::sembuf\">sembuf</a>","synthetic":true,"types":["libc::unix::bsd::apple::sembuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arphdr.html\" title=\"struct libc::arphdr\">arphdr</a>","synthetic":true,"types":["libc::unix::bsd::apple::arphdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_addr.html\" title=\"struct libc::in_addr\">in_addr</a>","synthetic":true,"types":["libc::unix::bsd::apple::in_addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_ndrv.html\" title=\"struct libc::sockaddr_ndrv\">sockaddr_ndrv</a>","synthetic":true,"types":["libc::unix::bsd::apple::sockaddr_ndrv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sa_endpoints_t.html\" title=\"struct libc::sa_endpoints_t\">sa_endpoints_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::sa_endpoints_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timex.html\" title=\"struct libc::timex\">timex</a>","synthetic":true,"types":["libc::unix::bsd::apple::timex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ntptimeval.html\" title=\"struct libc::ntptimeval\">ntptimeval</a>","synthetic":true,"types":["libc::unix::bsd::apple::ntptimeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.thread_standard_policy.html\" title=\"struct libc::thread_standard_policy\">thread_standard_policy</a>","synthetic":true,"types":["libc::unix::bsd::apple::thread_standard_policy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.thread_extended_policy.html\" title=\"struct libc::thread_extended_policy\">thread_extended_policy</a>","synthetic":true,"types":["libc::unix::bsd::apple::thread_extended_policy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.thread_time_constraint_policy.html\" title=\"struct libc::thread_time_constraint_policy\">thread_time_constraint_policy</a>","synthetic":true,"types":["libc::unix::bsd::apple::thread_time_constraint_policy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.thread_precedence_policy.html\" title=\"struct libc::thread_precedence_policy\">thread_precedence_policy</a>","synthetic":true,"types":["libc::unix::bsd::apple::thread_precedence_policy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.thread_affinity_policy.html\" title=\"struct libc::thread_affinity_policy\">thread_affinity_policy</a>","synthetic":true,"types":["libc::unix::bsd::apple::thread_affinity_policy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.thread_background_policy.html\" title=\"struct libc::thread_background_policy\">thread_background_policy</a>","synthetic":true,"types":["libc::unix::bsd::apple::thread_background_policy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.thread_latency_qos_policy.html\" title=\"struct libc::thread_latency_qos_policy\">thread_latency_qos_policy</a>","synthetic":true,"types":["libc::unix::bsd::apple::thread_latency_qos_policy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.thread_throughput_qos_policy.html\" title=\"struct libc::thread_throughput_qos_policy\">thread_throughput_qos_policy</a>","synthetic":true,"types":["libc::unix::bsd::apple::thread_throughput_qos_policy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.malloc_statistics_t.html\" title=\"struct libc::malloc_statistics_t\">malloc_statistics_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::malloc_statistics_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mstats.html\" title=\"struct libc::mstats\">mstats</a>","synthetic":true,"types":["libc::unix::bsd::apple::mstats"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.vm_range_t.html\" title=\"struct libc::vm_range_t\">vm_range_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::vm_range_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sched_param.html\" title=\"struct libc::sched_param\">sched_param</a>","synthetic":true,"types":["libc::unix::bsd::apple::sched_param"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.vinfo_stat.html\" title=\"struct libc::vinfo_stat\">vinfo_stat</a>","synthetic":true,"types":["libc::unix::bsd::apple::vinfo_stat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.vnode_info.html\" title=\"struct libc::vnode_info\">vnode_info</a>","synthetic":true,"types":["libc::unix::bsd::apple::vnode_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.vnode_info_path.html\" title=\"struct libc::vnode_info_path\">vnode_info_path</a>","synthetic":true,"types":["libc::unix::bsd::apple::vnode_info_path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.proc_vnodepathinfo.html\" title=\"struct libc::proc_vnodepathinfo\">proc_vnodepathinfo</a>","synthetic":true,"types":["libc::unix::bsd::apple::proc_vnodepathinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.vm_statistics.html\" title=\"struct libc::vm_statistics\">vm_statistics</a>","synthetic":true,"types":["libc::unix::bsd::apple::vm_statistics"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.task_thread_times_info.html\" title=\"struct libc::task_thread_times_info\">task_thread_times_info</a>","synthetic":true,"types":["libc::unix::bsd::apple::task_thread_times_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rusage_info_v0.html\" title=\"struct libc::rusage_info_v0\">rusage_info_v0</a>","synthetic":true,"types":["libc::unix::bsd::apple::rusage_info_v0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rusage_info_v1.html\" title=\"struct libc::rusage_info_v1\">rusage_info_v1</a>","synthetic":true,"types":["libc::unix::bsd::apple::rusage_info_v1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rusage_info_v2.html\" title=\"struct libc::rusage_info_v2\">rusage_info_v2</a>","synthetic":true,"types":["libc::unix::bsd::apple::rusage_info_v2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rusage_info_v3.html\" title=\"struct libc::rusage_info_v3\">rusage_info_v3</a>","synthetic":true,"types":["libc::unix::bsd::apple::rusage_info_v3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rusage_info_v4.html\" title=\"struct libc::rusage_info_v4\">rusage_info_v4</a>","synthetic":true,"types":["libc::unix::bsd::apple::rusage_info_v4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.image_offset.html\" title=\"struct libc::image_offset\">image_offset</a>","synthetic":true,"types":["libc::unix::bsd::apple::image_offset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.attrlist.html\" title=\"struct libc::attrlist\">attrlist</a>","synthetic":true,"types":["libc::unix::bsd::apple::attrlist"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.attrreference_t.html\" title=\"struct libc::attrreference_t\">attrreference_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::attrreference_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.vol_capabilities_attr_t.html\" title=\"struct libc::vol_capabilities_attr_t\">vol_capabilities_attr_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::vol_capabilities_attr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.attribute_set_t.html\" title=\"struct libc::attribute_set_t\">attribute_set_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::attribute_set_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.vol_attributes_attr_t.html\" title=\"struct libc::vol_attributes_attr_t\">vol_attributes_attr_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::vol_attributes_attr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.kevent.html\" title=\"struct libc::kevent\">kevent</a>","synthetic":true,"types":["libc::unix::bsd::apple::kevent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.semid_ds.html\" title=\"struct libc::semid_ds\">semid_ds</a>","synthetic":true,"types":["libc::unix::bsd::apple::semid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.shmid_ds.html\" title=\"struct libc::shmid_ds\">shmid_ds</a>","synthetic":true,"types":["libc::unix::bsd::apple::shmid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.proc_threadinfo.html\" title=\"struct libc::proc_threadinfo\">proc_threadinfo</a>","synthetic":true,"types":["libc::unix::bsd::apple::proc_threadinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs.html\" title=\"struct libc::statfs\">statfs</a>","synthetic":true,"types":["libc::unix::bsd::apple::statfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent.html\" title=\"struct libc::dirent\">dirent</a>","synthetic":true,"types":["libc::unix::bsd::apple::dirent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlock_t.html\" title=\"struct libc::pthread_rwlock_t\">pthread_rwlock_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::pthread_rwlock_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutex_t.html\" title=\"struct libc::pthread_mutex_t\">pthread_mutex_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::pthread_mutex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_cond_t.html\" title=\"struct libc::pthread_cond_t\">pthread_cond_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::pthread_cond_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_storage.html\" title=\"struct libc::sockaddr_storage\">sockaddr_storage</a>","synthetic":true,"types":["libc::unix::bsd::apple::sockaddr_storage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utmpx.html\" title=\"struct libc::utmpx\">utmpx</a>","synthetic":true,"types":["libc::unix::bsd::apple::utmpx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigevent.html\" title=\"struct libc::sigevent\">sigevent</a>","synthetic":true,"types":["libc::unix::bsd::apple::sigevent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.processor_cpu_load_info.html\" title=\"struct libc::processor_cpu_load_info\">processor_cpu_load_info</a>","synthetic":true,"types":["libc::unix::bsd::apple::processor_cpu_load_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.processor_basic_info.html\" title=\"struct libc::processor_basic_info\">processor_basic_info</a>","synthetic":true,"types":["libc::unix::bsd::apple::processor_basic_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.processor_set_basic_info.html\" title=\"struct libc::processor_set_basic_info\">processor_set_basic_info</a>","synthetic":true,"types":["libc::unix::bsd::apple::processor_set_basic_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.processor_set_load_info.html\" title=\"struct libc::processor_set_load_info\">processor_set_load_info</a>","synthetic":true,"types":["libc::unix::bsd::apple::processor_set_load_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.time_value_t.html\" title=\"struct libc::time_value_t\">time_value_t</a>","synthetic":true,"types":["libc::unix::bsd::apple::time_value_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.thread_basic_info.html\" title=\"struct libc::thread_basic_info\">thread_basic_info</a>","synthetic":true,"types":["libc::unix::bsd::apple::thread_basic_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.thread_identifier_info.html\" title=\"struct libc::thread_identifier_info\">thread_identifier_info</a>","synthetic":true,"types":["libc::unix::bsd::apple::thread_identifier_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.thread_extended_info.html\" title=\"struct libc::thread_extended_info\">thread_extended_info</a>","synthetic":true,"types":["libc::unix::bsd::apple::thread_extended_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.if_data64.html\" title=\"struct libc::if_data64\">if_data64</a>","synthetic":true,"types":["libc::unix::bsd::apple::if_data64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.if_msghdr2.html\" title=\"struct libc::if_msghdr2\">if_msghdr2</a>","synthetic":true,"types":["libc::unix::bsd::apple::if_msghdr2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.vm_statistics64.html\" title=\"struct libc::vm_statistics64\">vm_statistics64</a>","synthetic":true,"types":["libc::unix::bsd::apple::vm_statistics64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mach_task_basic_info.html\" title=\"struct libc::mach_task_basic_info\">mach_task_basic_info</a>","synthetic":true,"types":["libc::unix::bsd::apple::mach_task_basic_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.log2phys.html\" title=\"struct libc::log2phys\">log2phys</a>","synthetic":true,"types":["libc::unix::bsd::apple::log2phys"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.os_unfair_lock_s.html\" title=\"struct libc::os_unfair_lock_s\">os_unfair_lock_s</a>","synthetic":true,"types":["libc::unix::bsd::apple::os_unfair_lock_s"]},{"text":"impl Freeze for <a class=\"union\" href=\"libc/union.semun.html\" title=\"union libc::semun\">semun</a>","synthetic":true,"types":["libc::unix::bsd::apple::semun"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr.html\" title=\"struct libc::sockaddr\">sockaddr</a>","synthetic":true,"types":["libc::unix::bsd::sockaddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in6.html\" title=\"struct libc::sockaddr_in6\">sockaddr_in6</a>","synthetic":true,"types":["libc::unix::bsd::sockaddr_in6"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.passwd.html\" title=\"struct libc::passwd\">passwd</a>","synthetic":true,"types":["libc::unix::bsd::passwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ifaddrs.html\" title=\"struct libc::ifaddrs\">ifaddrs</a>","synthetic":true,"types":["libc::unix::bsd::ifaddrs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fd_set.html\" title=\"struct libc::fd_set\">fd_set</a>","synthetic":true,"types":["libc::unix::bsd::fd_set"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tm.html\" title=\"struct libc::tm\">tm</a>","synthetic":true,"types":["libc::unix::bsd::tm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msghdr.html\" title=\"struct libc::msghdr\">msghdr</a>","synthetic":true,"types":["libc::unix::bsd::msghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.cmsghdr.html\" title=\"struct libc::cmsghdr\">cmsghdr</a>","synthetic":true,"types":["libc::unix::bsd::cmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fsid_t.html\" title=\"struct libc::fsid_t\">fsid_t</a>","synthetic":true,"types":["libc::unix::bsd::fsid_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.if_nameindex.html\" title=\"struct libc::if_nameindex\">if_nameindex</a>","synthetic":true,"types":["libc::unix::bsd::if_nameindex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.regex_t.html\" title=\"struct libc::regex_t\">regex_t</a>","synthetic":true,"types":["libc::unix::bsd::regex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.regmatch_t.html\" title=\"struct libc::regmatch_t\">regmatch_t</a>","synthetic":true,"types":["libc::unix::bsd::regmatch_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_un.html\" title=\"struct libc::sockaddr_un\">sockaddr_un</a>","synthetic":true,"types":["libc::unix::bsd::sockaddr_un"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utsname.html\" title=\"struct libc::utsname\">utsname</a>","synthetic":true,"types":["libc::unix::bsd::utsname"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_addr.html\" title=\"struct libc::in6_addr\">in6_addr</a>","synthetic":true,"types":["libc::unix::align::in6_addr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.DIR.html\" title=\"enum libc::DIR\">DIR</a>","synthetic":true,"types":["libc::unix::DIR"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.group.html\" title=\"struct libc::group\">group</a>","synthetic":true,"types":["libc::unix::group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utimbuf.html\" title=\"struct libc::utimbuf\">utimbuf</a>","synthetic":true,"types":["libc::unix::utimbuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timeval.html\" title=\"struct libc::timeval\">timeval</a>","synthetic":true,"types":["libc::unix::timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timespec.html\" title=\"struct libc::timespec\">timespec</a>","synthetic":true,"types":["libc::unix::timespec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit.html\" title=\"struct libc::rlimit\">rlimit</a>","synthetic":true,"types":["libc::unix::rlimit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rusage.html\" title=\"struct libc::rusage\">rusage</a>","synthetic":true,"types":["libc::unix::rusage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipv6_mreq.html\" title=\"struct libc::ipv6_mreq\">ipv6_mreq</a>","synthetic":true,"types":["libc::unix::ipv6_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.hostent.html\" title=\"struct libc::hostent\">hostent</a>","synthetic":true,"types":["libc::unix::hostent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.iovec.html\" title=\"struct libc::iovec\">iovec</a>","synthetic":true,"types":["libc::unix::iovec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pollfd.html\" title=\"struct libc::pollfd\">pollfd</a>","synthetic":true,"types":["libc::unix::pollfd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.winsize.html\" title=\"struct libc::winsize\">winsize</a>","synthetic":true,"types":["libc::unix::winsize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.linger.html\" title=\"struct libc::linger\">linger</a>","synthetic":true,"types":["libc::unix::linger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigval.html\" title=\"struct libc::sigval\">sigval</a>","synthetic":true,"types":["libc::unix::sigval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerval.html\" title=\"struct libc::itimerval\">itimerval</a>","synthetic":true,"types":["libc::unix::itimerval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tms.html\" title=\"struct libc::tms\">tms</a>","synthetic":true,"types":["libc::unix::tms"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.servent.html\" title=\"struct libc::servent\">servent</a>","synthetic":true,"types":["libc::unix::servent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.protoent.html\" title=\"struct libc::protoent\">protoent</a>","synthetic":true,"types":["libc::unix::protoent"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.FILE.html\" title=\"enum libc::FILE\">FILE</a>","synthetic":true,"types":["libc::unix::FILE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos_t.html\" title=\"enum libc::fpos_t\">fpos_t</a>","synthetic":true,"types":["libc::unix::fpos_t"]}];
implementors["local_channel"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"local_channel/mpsc/struct.Sender.html\" title=\"struct local_channel::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["local_channel::mpsc::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"local_channel/mpsc/struct.Receiver.html\" title=\"struct local_channel::mpsc::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["local_channel::mpsc::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"local_channel/mpsc/struct.SendError.html\" title=\"struct local_channel::mpsc::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["local_channel::mpsc::SendError"]}];
implementors["local_waker"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"local_waker/struct.LocalWaker.html\" title=\"struct local_waker::LocalWaker\">LocalWaker</a>","synthetic":true,"types":["local_waker::LocalWaker"]}];
implementors["lock_api"] = [{"text":"impl&lt;R, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.Mutex.html\" title=\"struct lock_api::Mutex\">Mutex</a>&lt;R, T&gt;","synthetic":true,"types":["lock_api::mutex::Mutex"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MutexGuard.html\" title=\"struct lock_api::MutexGuard\">MutexGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::mutex::MutexGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedMutexGuard.html\" title=\"struct lock_api::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::mutex::MappedMutexGuard"]},{"text":"impl&lt;R, G&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.RawReentrantMutex.html\" title=\"struct lock_api::RawReentrantMutex\">RawReentrantMutex</a>&lt;R, G&gt;","synthetic":true,"types":["lock_api::remutex::RawReentrantMutex"]},{"text":"impl&lt;R, G, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutex.html\" title=\"struct lock_api::ReentrantMutex\">ReentrantMutex</a>&lt;R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::ReentrantMutex"]},{"text":"impl&lt;'a, R, G, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutexGuard.html\" title=\"struct lock_api::ReentrantMutexGuard\">ReentrantMutexGuard</a>&lt;'a, R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::ReentrantMutexGuard"]},{"text":"impl&lt;'a, R, G, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedReentrantMutexGuard.html\" title=\"struct lock_api::MappedReentrantMutexGuard\">MappedReentrantMutexGuard</a>&lt;'a, R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::MappedReentrantMutexGuard"]},{"text":"impl&lt;R, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLock.html\" title=\"struct lock_api::RwLock\">RwLock</a>&lt;R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLock"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockReadGuard.html\" title=\"struct lock_api::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockWriteGuard.html\" title=\"struct lock_api::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockWriteGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockUpgradableReadGuard.html\" title=\"struct lock_api::RwLockUpgradableReadGuard\">RwLockUpgradableReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockUpgradableReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedRwLockReadGuard.html\" title=\"struct lock_api::MappedRwLockReadGuard\">MappedRwLockReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::MappedRwLockReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedRwLockWriteGuard.html\" title=\"struct lock_api::MappedRwLockWriteGuard\">MappedRwLockWriteGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::MappedRwLockWriteGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"lock_api/struct.GuardSend.html\" title=\"struct lock_api::GuardSend\">GuardSend</a>","synthetic":true,"types":["lock_api::GuardSend"]},{"text":"impl Freeze for <a class=\"struct\" href=\"lock_api/struct.GuardNoSend.html\" title=\"struct lock_api::GuardNoSend\">GuardNoSend</a>","synthetic":true,"types":["lock_api::GuardNoSend"]}];
implementors["log"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>","synthetic":true,"types":["log::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>","synthetic":true,"types":["log::LevelFilter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'a&gt;","synthetic":true,"types":["log::Record"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.RecordBuilder.html\" title=\"struct log::RecordBuilder\">RecordBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::RecordBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;","synthetic":true,"types":["log::Metadata"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::MetadataBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.SetLoggerError.html\" title=\"struct log::SetLoggerError\">SetLoggerError</a>","synthetic":true,"types":["log::SetLoggerError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.ParseLevelError.html\" title=\"struct log::ParseLevelError\">ParseLevelError</a>","synthetic":true,"types":["log::ParseLevelError"]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr.html\" title=\"struct memchr::Memchr\">Memchr</a>&lt;'a&gt;","synthetic":true,"types":["memchr::memchr::iter::Memchr"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr2.html\" title=\"struct memchr::Memchr2\">Memchr2</a>&lt;'a&gt;","synthetic":true,"types":["memchr::memchr::iter::Memchr2"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr3.html\" title=\"struct memchr::Memchr3\">Memchr3</a>&lt;'a&gt;","synthetic":true,"types":["memchr::memchr::iter::Memchr3"]},{"text":"impl Freeze for <a class=\"enum\" href=\"memchr/memmem/enum.Prefilter.html\" title=\"enum memchr::memmem::Prefilter\">Prefilter</a>","synthetic":true,"types":["memchr::memmem::prefilter::Prefilter"]},{"text":"impl&lt;'h, 'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FindIter.html\" title=\"struct memchr::memmem::FindIter\">FindIter</a>&lt;'h, 'n&gt;","synthetic":true,"types":["memchr::memmem::FindIter"]},{"text":"impl&lt;'h, 'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FindRevIter.html\" title=\"struct memchr::memmem::FindRevIter\">FindRevIter</a>&lt;'h, 'n&gt;","synthetic":true,"types":["memchr::memmem::FindRevIter"]},{"text":"impl&lt;'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.Finder.html\" title=\"struct memchr::memmem::Finder\">Finder</a>&lt;'n&gt;","synthetic":true,"types":["memchr::memmem::Finder"]},{"text":"impl&lt;'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FinderRev.html\" title=\"struct memchr::memmem::FinderRev\">FinderRev</a>&lt;'n&gt;","synthetic":true,"types":["memchr::memmem::FinderRev"]},{"text":"impl Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FinderBuilder.html\" title=\"struct memchr::memmem::FinderBuilder\">FinderBuilder</a>","synthetic":true,"types":["memchr::memmem::FinderBuilder"]}];
implementors["mime"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"mime/struct.Mime.html\" title=\"struct mime::Mime\">Mime</a>","synthetic":true,"types":["mime::Mime"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mime/struct.Name.html\" title=\"struct mime::Name\">Name</a>&lt;'a&gt;","synthetic":true,"types":["mime::Name"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mime/struct.FromStrError.html\" title=\"struct mime::FromStrError\">FromStrError</a>","synthetic":true,"types":["mime::FromStrError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mime/struct.Params.html\" title=\"struct mime::Params\">Params</a>&lt;'a&gt;","synthetic":true,"types":["mime::Params"]}];
implementors["mime_guess"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"mime_guess/struct.MimeGuess.html\" title=\"struct mime_guess::MimeGuess\">MimeGuess</a>","synthetic":true,"types":["mime_guess::MimeGuess"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mime_guess/struct.Iter.html\" title=\"struct mime_guess::Iter\">Iter</a>","synthetic":true,"types":["mime_guess::Iter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mime_guess/struct.IterRaw.html\" title=\"struct mime_guess::IterRaw\">IterRaw</a>","synthetic":true,"types":["mime_guess::IterRaw"]}];
implementors["miniz_oxide"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/deflate/core/enum.CompressionStrategy.html\" title=\"enum miniz_oxide::deflate::core::CompressionStrategy\">CompressionStrategy</a>","synthetic":true,"types":["miniz_oxide::deflate::core::CompressionStrategy"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/deflate/core/enum.TDEFLFlush.html\" title=\"enum miniz_oxide::deflate::core::TDEFLFlush\">TDEFLFlush</a>","synthetic":true,"types":["miniz_oxide::deflate::core::TDEFLFlush"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/deflate/core/enum.TDEFLStatus.html\" title=\"enum miniz_oxide::deflate::core::TDEFLStatus\">TDEFLStatus</a>","synthetic":true,"types":["miniz_oxide::deflate::core::TDEFLStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/deflate/core/struct.CompressorOxide.html\" title=\"struct miniz_oxide::deflate::core::CompressorOxide\">CompressorOxide</a>","synthetic":true,"types":["miniz_oxide::deflate::core::CompressorOxide"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"miniz_oxide/deflate/core/struct.CallbackFunc.html\" title=\"struct miniz_oxide::deflate::core::CallbackFunc\">CallbackFunc</a>&lt;'a&gt;","synthetic":true,"types":["miniz_oxide::deflate::core::CallbackFunc"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/deflate/enum.CompressionLevel.html\" title=\"enum miniz_oxide::deflate::CompressionLevel\">CompressionLevel</a>","synthetic":true,"types":["miniz_oxide::deflate::CompressionLevel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/core/struct.DecompressorOxide.html\" title=\"struct miniz_oxide::inflate::core::DecompressorOxide\">DecompressorOxide</a>","synthetic":true,"types":["miniz_oxide::inflate::core::DecompressorOxide"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/stream/struct.MinReset.html\" title=\"struct miniz_oxide::inflate::stream::MinReset\">MinReset</a>","synthetic":true,"types":["miniz_oxide::inflate::stream::MinReset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/stream/struct.ZeroReset.html\" title=\"struct miniz_oxide::inflate::stream::ZeroReset\">ZeroReset</a>","synthetic":true,"types":["miniz_oxide::inflate::stream::ZeroReset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/stream/struct.FullReset.html\" title=\"struct miniz_oxide::inflate::stream::FullReset\">FullReset</a>","synthetic":true,"types":["miniz_oxide::inflate::stream::FullReset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/stream/struct.InflateState.html\" title=\"struct miniz_oxide::inflate::stream::InflateState\">InflateState</a>","synthetic":true,"types":["miniz_oxide::inflate::stream::InflateState"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/inflate/enum.TINFLStatus.html\" title=\"enum miniz_oxide::inflate::TINFLStatus\">TINFLStatus</a>","synthetic":true,"types":["miniz_oxide::inflate::TINFLStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/enum.MZFlush.html\" title=\"enum miniz_oxide::MZFlush\">MZFlush</a>","synthetic":true,"types":["miniz_oxide::MZFlush"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/enum.MZStatus.html\" title=\"enum miniz_oxide::MZStatus\">MZStatus</a>","synthetic":true,"types":["miniz_oxide::MZStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/enum.MZError.html\" title=\"enum miniz_oxide::MZError\">MZError</a>","synthetic":true,"types":["miniz_oxide::MZError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/enum.DataFormat.html\" title=\"enum miniz_oxide::DataFormat\">DataFormat</a>","synthetic":true,"types":["miniz_oxide::DataFormat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/struct.StreamResult.html\" title=\"struct miniz_oxide::StreamResult\">StreamResult</a>","synthetic":true,"types":["miniz_oxide::StreamResult"]}];
implementors["mio"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Interest.html\" title=\"struct mio::Interest\">Interest</a>","synthetic":true,"types":["mio::interest::Interest"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/struct.Poll.html\" title=\"struct mio::Poll\">Poll</a>","synthetic":true,"types":["mio::poll::Poll"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/struct.Registry.html\" title=\"struct mio::Registry\">Registry</a>","synthetic":true,"types":["mio::poll::Registry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mio/unix/struct.SourceFd.html\" title=\"struct mio::unix::SourceFd\">SourceFd</a>&lt;'a&gt;","synthetic":true,"types":["mio::sys::unix::sourcefd::SourceFd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/net/struct.SocketAddr.html\" title=\"struct mio::net::SocketAddr\">SocketAddr</a>","synthetic":true,"types":["mio::sys::unix::uds::socketaddr::SocketAddr"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/unix/pipe/struct.Sender.html\" title=\"struct mio::unix::pipe::Sender\">Sender</a>","synthetic":true,"types":["mio::sys::unix::pipe::Sender"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/unix/pipe/struct.Receiver.html\" title=\"struct mio::unix::pipe::Receiver\">Receiver</a>","synthetic":true,"types":["mio::sys::unix::pipe::Receiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Token.html\" title=\"struct mio::Token\">Token</a>","synthetic":true,"types":["mio::token::Token"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/struct.Waker.html\" title=\"struct mio::Waker\">Waker</a>","synthetic":true,"types":["mio::waker::Waker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/event/struct.Event.html\" title=\"struct mio::event::Event\">Event</a>","synthetic":true,"types":["mio::event::event::Event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/event/struct.Events.html\" title=\"struct mio::event::Events\">Events</a>","synthetic":true,"types":["mio::event::events::Events"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mio/event/struct.Iter.html\" title=\"struct mio::event::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["mio::event::events::Iter"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.TcpListener.html\" title=\"struct mio::net::TcpListener\">TcpListener</a>","synthetic":true,"types":["mio::net::tcp::listener::TcpListener"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.TcpStream.html\" title=\"struct mio::net::TcpStream\">TcpStream</a>","synthetic":true,"types":["mio::net::tcp::stream::TcpStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UdpSocket.html\" title=\"struct mio::net::UdpSocket\">UdpSocket</a>","synthetic":true,"types":["mio::net::udp::UdpSocket"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UnixDatagram.html\" title=\"struct mio::net::UnixDatagram\">UnixDatagram</a>","synthetic":true,"types":["mio::net::uds::datagram::UnixDatagram"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UnixListener.html\" title=\"struct mio::net::UnixListener\">UnixListener</a>","synthetic":true,"types":["mio::net::uds::listener::UnixListener"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UnixStream.html\" title=\"struct mio::net::UnixStream\">UnixStream</a>","synthetic":true,"types":["mio::net::uds::stream::UnixStream"]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_integer/struct.ExtendedGcd.html\" title=\"struct num_integer::ExtendedGcd\">ExtendedGcd</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_integer::ExtendedGcd"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"num_integer/struct.IterBinomial.html\" title=\"struct num_integer::IterBinomial\">IterBinomial</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["num_integer::IterBinomial"]}];
implementors["num_traits"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"num_traits/enum.FloatErrorKind.html\" title=\"enum num_traits::FloatErrorKind\">FloatErrorKind</a>","synthetic":true,"types":["num_traits::FloatErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"num_traits/struct.ParseFloatError.html\" title=\"struct num_traits::ParseFloatError\">ParseFloatError</a>","synthetic":true,"types":["num_traits::ParseFloatError"]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/unsync/struct.OnceCell.html\" title=\"struct once_cell::unsync::OnceCell\">OnceCell</a>&lt;T&gt;","synthetic":true,"types":["once_cell::unsync::OnceCell"]},{"text":"impl&lt;T, F&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.fn.html\">fn</a>() -&gt; T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/unsync/struct.Lazy.html\" title=\"struct once_cell::unsync::Lazy\">Lazy</a>&lt;T, F&gt;","synthetic":true,"types":["once_cell::unsync::Lazy"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/sync/struct.OnceCell.html\" title=\"struct once_cell::sync::OnceCell\">OnceCell</a>&lt;T&gt;","synthetic":true,"types":["once_cell::sync::OnceCell"]},{"text":"impl&lt;T, F&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.fn.html\">fn</a>() -&gt; T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/sync/struct.Lazy.html\" title=\"struct once_cell::sync::Lazy\">Lazy</a>&lt;T, F&gt;","synthetic":true,"types":["once_cell::sync::Lazy"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/race/struct.OnceBox.html\" title=\"struct once_cell::race::OnceBox\">OnceBox</a>&lt;T&gt;","synthetic":true,"types":["once_cell::race::once_box::OnceBox"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"once_cell/race/struct.OnceNonZeroUsize.html\" title=\"struct once_cell::race::OnceNonZeroUsize\">OnceNonZeroUsize</a>","synthetic":true,"types":["once_cell::race::OnceNonZeroUsize"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"once_cell/race/struct.OnceBool.html\" title=\"struct once_cell::race::OnceBool\">OnceBool</a>","synthetic":true,"types":["once_cell::race::OnceBool"]}];
implementors["parking_lot"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot/struct.WaitTimeoutResult.html\" title=\"struct parking_lot::WaitTimeoutResult\">WaitTimeoutResult</a>","synthetic":true,"types":["parking_lot::condvar::WaitTimeoutResult"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.Condvar.html\" title=\"struct parking_lot::Condvar\">Condvar</a>","synthetic":true,"types":["parking_lot::condvar::Condvar"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot/enum.OnceState.html\" title=\"enum parking_lot::OnceState\">OnceState</a>","synthetic":true,"types":["parking_lot::once::OnceState"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.Once.html\" title=\"struct parking_lot::Once\">Once</a>","synthetic":true,"types":["parking_lot::once::Once"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawFairMutex.html\" title=\"struct parking_lot::RawFairMutex\">RawFairMutex</a>","synthetic":true,"types":["parking_lot::raw_fair_mutex::RawFairMutex"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawMutex.html\" title=\"struct parking_lot::RawMutex\">RawMutex</a>","synthetic":true,"types":["parking_lot::raw_mutex::RawMutex"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawRwLock.html\" title=\"struct parking_lot::RawRwLock\">RawRwLock</a>","synthetic":true,"types":["parking_lot::raw_rwlock::RawRwLock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot/struct.RawThreadId.html\" title=\"struct parking_lot::RawThreadId\">RawThreadId</a>","synthetic":true,"types":["parking_lot::remutex::RawThreadId"]}];
implementors["parking_lot_core"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot_core/enum.ParkResult.html\" title=\"enum parking_lot_core::ParkResult\">ParkResult</a>","synthetic":true,"types":["parking_lot_core::parking_lot::ParkResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.UnparkResult.html\" title=\"struct parking_lot_core::UnparkResult\">UnparkResult</a>","synthetic":true,"types":["parking_lot_core::parking_lot::UnparkResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot_core/enum.RequeueOp.html\" title=\"enum parking_lot_core::RequeueOp\">RequeueOp</a>","synthetic":true,"types":["parking_lot_core::parking_lot::RequeueOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"parking_lot_core/enum.FilterOp.html\" title=\"enum parking_lot_core::FilterOp\">FilterOp</a>","synthetic":true,"types":["parking_lot_core::parking_lot::FilterOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.UnparkToken.html\" title=\"struct parking_lot_core::UnparkToken\">UnparkToken</a>","synthetic":true,"types":["parking_lot_core::parking_lot::UnparkToken"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.ParkToken.html\" title=\"struct parking_lot_core::ParkToken\">ParkToken</a>","synthetic":true,"types":["parking_lot_core::parking_lot::ParkToken"]},{"text":"impl Freeze for <a class=\"struct\" href=\"parking_lot_core/struct.SpinWait.html\" title=\"struct parking_lot_core::SpinWait\">SpinWait</a>","synthetic":true,"types":["parking_lot_core::spinwait::SpinWait"]}];
implementors["percent_encoding"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"percent_encoding/struct.AsciiSet.html\" title=\"struct percent_encoding::AsciiSet\">AsciiSet</a>","synthetic":true,"types":["percent_encoding::AsciiSet"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"percent_encoding/struct.PercentEncode.html\" title=\"struct percent_encoding::PercentEncode\">PercentEncode</a>&lt;'a&gt;","synthetic":true,"types":["percent_encoding::PercentEncode"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"percent_encoding/struct.PercentDecode.html\" title=\"struct percent_encoding::PercentDecode\">PercentDecode</a>&lt;'a&gt;","synthetic":true,"types":["percent_encoding::PercentDecode"]}];
implementors["pest"] = [{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"pest/error/struct.Error.html\" title=\"struct pest::error::Error\">Error</a>&lt;R&gt;","synthetic":true,"types":["pest::error::Error"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"enum\" href=\"pest/error/enum.ErrorVariant.html\" title=\"enum pest::error::ErrorVariant\">ErrorVariant</a>&lt;R&gt;","synthetic":true,"types":["pest::error::ErrorVariant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest/error/enum.InputLocation.html\" title=\"enum pest::error::InputLocation\">InputLocation</a>","synthetic":true,"types":["pest::error::InputLocation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest/error/enum.LineColLocation.html\" title=\"enum pest::error::LineColLocation\">LineColLocation</a>","synthetic":true,"types":["pest::error::LineColLocation"]},{"text":"impl&lt;'i, R&gt; Freeze for <a class=\"struct\" href=\"pest/iterators/struct.FlatPairs.html\" title=\"struct pest::iterators::FlatPairs\">FlatPairs</a>&lt;'i, R&gt;","synthetic":true,"types":["pest::iterators::flat_pairs::FlatPairs"]},{"text":"impl&lt;'i, R&gt; Freeze for <a class=\"struct\" href=\"pest/iterators/struct.Pair.html\" title=\"struct pest::iterators::Pair\">Pair</a>&lt;'i, R&gt;","synthetic":true,"types":["pest::iterators::pair::Pair"]},{"text":"impl&lt;'i, R&gt; Freeze for <a class=\"struct\" href=\"pest/iterators/struct.Pairs.html\" title=\"struct pest::iterators::Pairs\">Pairs</a>&lt;'i, R&gt;","synthetic":true,"types":["pest::iterators::pairs::Pairs"]},{"text":"impl&lt;'i, R&gt; Freeze for <a class=\"struct\" href=\"pest/iterators/struct.Tokens.html\" title=\"struct pest::iterators::Tokens\">Tokens</a>&lt;'i, R&gt;","synthetic":true,"types":["pest::iterators::tokens::Tokens"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest/enum.Lookahead.html\" title=\"enum pest::Lookahead\">Lookahead</a>","synthetic":true,"types":["pest::parser_state::Lookahead"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest/enum.Atomicity.html\" title=\"enum pest::Atomicity\">Atomicity</a>","synthetic":true,"types":["pest::parser_state::Atomicity"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest/enum.MatchDir.html\" title=\"enum pest::MatchDir\">MatchDir</a>","synthetic":true,"types":["pest::parser_state::MatchDir"]},{"text":"impl&lt;'i, R&gt; Freeze for <a class=\"struct\" href=\"pest/struct.ParserState.html\" title=\"struct pest::ParserState\">ParserState</a>&lt;'i, R&gt;","synthetic":true,"types":["pest::parser_state::ParserState"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"pest/struct.Position.html\" title=\"struct pest::Position\">Position</a>&lt;'i&gt;","synthetic":true,"types":["pest::position::Position"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest/pratt_parser/enum.Assoc.html\" title=\"enum pest::pratt_parser::Assoc\">Assoc</a>","synthetic":true,"types":["pest::pratt_parser::Assoc"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"pest/pratt_parser/struct.Op.html\" title=\"struct pest::pratt_parser::Op\">Op</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["pest::pratt_parser::Op"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"pest/pratt_parser/struct.PrattParser.html\" title=\"struct pest::pratt_parser::PrattParser\">PrattParser</a>&lt;R&gt;","synthetic":true,"types":["pest::pratt_parser::PrattParser"]},{"text":"impl&lt;'pratt, 'i, R, F, T&gt; Freeze for <a class=\"struct\" href=\"pest/pratt_parser/struct.PrattParserMap.html\" title=\"struct pest::pratt_parser::PrattParserMap\">PrattParserMap</a>&lt;'pratt, 'i, R, F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["pest::pratt_parser::PrattParserMap"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest/prec_climber/enum.Assoc.html\" title=\"enum pest::prec_climber::Assoc\">Assoc</a>","synthetic":true,"types":["pest::prec_climber::Assoc"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"pest/prec_climber/struct.Operator.html\" title=\"struct pest::prec_climber::Operator\">Operator</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["pest::prec_climber::Operator"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"pest/prec_climber/struct.PrecClimber.html\" title=\"struct pest::prec_climber::PrecClimber\">PrecClimber</a>&lt;R&gt;","synthetic":true,"types":["pest::prec_climber::PrecClimber"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"pest/struct.Span.html\" title=\"struct pest::Span\">Span</a>&lt;'i&gt;","synthetic":true,"types":["pest::span::Span"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"pest/struct.LinesSpan.html\" title=\"struct pest::LinesSpan\">LinesSpan</a>&lt;'i&gt;","synthetic":true,"types":["pest::span::LinesSpan"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"pest/struct.Lines.html\" title=\"struct pest::Lines\">Lines</a>&lt;'i&gt;","synthetic":true,"types":["pest::span::Lines"]},{"text":"impl&lt;'i, R&gt; Freeze for <a class=\"enum\" href=\"pest/enum.Token.html\" title=\"enum pest::Token\">Token</a>&lt;'i, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["pest::token::Token"]}];
implementors["pest_meta"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"pest_meta/ast/struct.Rule.html\" title=\"struct pest_meta::ast::Rule\">Rule</a>","synthetic":true,"types":["pest_meta::ast::Rule"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest_meta/ast/enum.RuleType.html\" title=\"enum pest_meta::ast::RuleType\">RuleType</a>","synthetic":true,"types":["pest_meta::ast::RuleType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest_meta/ast/enum.Expr.html\" title=\"enum pest_meta::ast::Expr\">Expr</a>","synthetic":true,"types":["pest_meta::ast::Expr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pest_meta/ast/struct.ExprTopDownIterator.html\" title=\"struct pest_meta::ast::ExprTopDownIterator\">ExprTopDownIterator</a>","synthetic":true,"types":["pest_meta::ast::ExprTopDownIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pest_meta/optimizer/struct.OptimizedRule.html\" title=\"struct pest_meta::optimizer::OptimizedRule\">OptimizedRule</a>","synthetic":true,"types":["pest_meta::optimizer::OptimizedRule"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest_meta/optimizer/enum.OptimizedExpr.html\" title=\"enum pest_meta::optimizer::OptimizedExpr\">OptimizedExpr</a>","synthetic":true,"types":["pest_meta::optimizer::OptimizedExpr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pest_meta/optimizer/struct.OptimizedExprTopDownIterator.html\" title=\"struct pest_meta::optimizer::OptimizedExprTopDownIterator\">OptimizedExprTopDownIterator</a>","synthetic":true,"types":["pest_meta::optimizer::OptimizedExprTopDownIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pest_meta/parser/struct.PestParser.html\" title=\"struct pest_meta::parser::PestParser\">PestParser</a>","synthetic":true,"types":["pest_meta::parser::grammar::PestParser"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pest_meta/parser/enum.Rule.html\" title=\"enum pest_meta::parser::Rule\">Rule</a>","synthetic":true,"types":["pest_meta::parser::grammar::Rule"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"pest_meta/parser/struct.ParserRule.html\" title=\"struct pest_meta::parser::ParserRule\">ParserRule</a>&lt;'i&gt;","synthetic":true,"types":["pest_meta::parser::ParserRule"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"pest_meta/parser/struct.ParserNode.html\" title=\"struct pest_meta::parser::ParserNode\">ParserNode</a>&lt;'i&gt;","synthetic":true,"types":["pest_meta::parser::ParserNode"]},{"text":"impl&lt;'i&gt; Freeze for <a class=\"enum\" href=\"pest_meta/parser/enum.ParserExpr.html\" title=\"enum pest_meta::parser::ParserExpr\">ParserExpr</a>&lt;'i&gt;","synthetic":true,"types":["pest_meta::parser::ParserExpr"]}];
implementors["phf"] = [{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"phf/struct.Map.html\" title=\"struct phf::Map\">Map</a>&lt;K, V&gt;","synthetic":true,"types":["phf::map::Map"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/map/struct.Entries.html\" title=\"struct phf::map::Entries\">Entries</a>&lt;'a, K, V&gt;","synthetic":true,"types":["phf::map::Entries"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/map/struct.Keys.html\" title=\"struct phf::map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["phf::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/map/struct.Values.html\" title=\"struct phf::map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["phf::map::Values"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"phf/struct.OrderedMap.html\" title=\"struct phf::OrderedMap\">OrderedMap</a>&lt;K, V&gt;","synthetic":true,"types":["phf::ordered_map::OrderedMap"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/ordered_map/struct.Entries.html\" title=\"struct phf::ordered_map::Entries\">Entries</a>&lt;'a, K, V&gt;","synthetic":true,"types":["phf::ordered_map::Entries"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/ordered_map/struct.Keys.html\" title=\"struct phf::ordered_map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["phf::ordered_map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/ordered_map/struct.Values.html\" title=\"struct phf::ordered_map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["phf::ordered_map::Values"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"phf/struct.OrderedSet.html\" title=\"struct phf::OrderedSet\">OrderedSet</a>&lt;T&gt;","synthetic":true,"types":["phf::ordered_set::OrderedSet"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"phf/ordered_set/struct.Iter.html\" title=\"struct phf::ordered_set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["phf::ordered_set::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"phf/struct.Set.html\" title=\"struct phf::Set\">Set</a>&lt;T&gt;","synthetic":true,"types":["phf::set::Set"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"phf/set/struct.Iter.html\" title=\"struct phf::set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["phf::set::Iter"]}];
implementors["phf_shared"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"phf_shared/struct.Hashes.html\" title=\"struct phf_shared::Hashes\">Hashes</a>","synthetic":true,"types":["phf_shared::Hashes"]}];
implementors["ppv_lite86"] = [{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/generic/union.vec128_storage.html\" title=\"union ppv_lite86::generic::vec128_storage\">vec128_storage</a>","synthetic":true,"types":["ppv_lite86::generic::vec128_storage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/generic/struct.vec256_storage.html\" title=\"struct ppv_lite86::generic::vec256_storage\">vec256_storage</a>","synthetic":true,"types":["ppv_lite86::generic::vec256_storage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/generic/struct.vec512_storage.html\" title=\"struct ppv_lite86::generic::vec512_storage\">vec512_storage</a>","synthetic":true,"types":["ppv_lite86::generic::vec512_storage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/generic/struct.GenericMachine.html\" title=\"struct ppv_lite86::generic::GenericMachine\">GenericMachine</a>","synthetic":true,"types":["ppv_lite86::generic::GenericMachine"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/generic/struct.u32x4_generic.html\" title=\"struct ppv_lite86::generic::u32x4_generic\">u32x4_generic</a>","synthetic":true,"types":["ppv_lite86::generic::u32x4_generic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/generic/struct.u64x2_generic.html\" title=\"struct ppv_lite86::generic::u64x2_generic\">u64x2_generic</a>","synthetic":true,"types":["ppv_lite86::generic::u64x2_generic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/generic/struct.u128x1_generic.html\" title=\"struct ppv_lite86::generic::u128x1_generic\">u128x1_generic</a>","synthetic":true,"types":["ppv_lite86::generic::u128x1_generic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/generic/struct.G0.html\" title=\"struct ppv_lite86::generic::G0\">G0</a>","synthetic":true,"types":["ppv_lite86::generic::G0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/generic/struct.G1.html\" title=\"struct ppv_lite86::generic::G1\">G1</a>","synthetic":true,"types":["ppv_lite86::generic::G1"]}];
implementors["proc_macro2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/token_stream/struct.IntoIter.html\" title=\"struct proc_macro2::token_stream::IntoIter\">IntoIter</a>","synthetic":true,"types":["proc_macro2::token_stream::IntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>","synthetic":true,"types":["proc_macro2::TokenStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.LexError.html\" title=\"struct proc_macro2::LexError\">LexError</a>","synthetic":true,"types":["proc_macro2::LexError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Span.html\" title=\"struct proc_macro2::Span\">Span</a>","synthetic":true,"types":["proc_macro2::Span"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.TokenTree.html\" title=\"enum proc_macro2::TokenTree\">TokenTree</a>","synthetic":true,"types":["proc_macro2::TokenTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Group.html\" title=\"struct proc_macro2::Group\">Group</a>","synthetic":true,"types":["proc_macro2::Group"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Delimiter.html\" title=\"enum proc_macro2::Delimiter\">Delimiter</a>","synthetic":true,"types":["proc_macro2::Delimiter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Punct.html\" title=\"struct proc_macro2::Punct\">Punct</a>","synthetic":true,"types":["proc_macro2::Punct"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Spacing.html\" title=\"enum proc_macro2::Spacing\">Spacing</a>","synthetic":true,"types":["proc_macro2::Spacing"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Ident.html\" title=\"struct proc_macro2::Ident\">Ident</a>","synthetic":true,"types":["proc_macro2::Ident"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Literal.html\" title=\"struct proc_macro2::Literal\">Literal</a>","synthetic":true,"types":["proc_macro2::Literal"]}];
implementors["pulldown_cmark"] = [{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"pulldown_cmark/escape/struct.WriteWrapper.html\" title=\"struct pulldown_cmark::escape::WriteWrapper\">WriteWrapper</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["pulldown_cmark::escape::WriteWrapper"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"pulldown_cmark/struct.BrokenLink.html\" title=\"struct pulldown_cmark::BrokenLink\">BrokenLink</a>&lt;'a&gt;","synthetic":true,"types":["pulldown_cmark::parse::BrokenLink"]},{"text":"impl&lt;'input, 'callback&gt; Freeze for <a class=\"struct\" href=\"pulldown_cmark/struct.Parser.html\" title=\"struct pulldown_cmark::Parser\">Parser</a>&lt;'input, 'callback&gt;","synthetic":true,"types":["pulldown_cmark::parse::Parser"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"pulldown_cmark/struct.LinkDef.html\" title=\"struct pulldown_cmark::LinkDef\">LinkDef</a>&lt;'a&gt;","synthetic":true,"types":["pulldown_cmark::parse::LinkDef"]},{"text":"impl&lt;'input&gt; Freeze for <a class=\"struct\" href=\"pulldown_cmark/struct.RefDefs.html\" title=\"struct pulldown_cmark::RefDefs\">RefDefs</a>&lt;'input&gt;","synthetic":true,"types":["pulldown_cmark::parse::RefDefs"]},{"text":"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"pulldown_cmark/struct.OffsetIter.html\" title=\"struct pulldown_cmark::OffsetIter\">OffsetIter</a>&lt;'a, 'b&gt;","synthetic":true,"types":["pulldown_cmark::parse::OffsetIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pulldown_cmark/struct.InlineStr.html\" title=\"struct pulldown_cmark::InlineStr\">InlineStr</a>","synthetic":true,"types":["pulldown_cmark::strings::InlineStr"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"pulldown_cmark/enum.CowStr.html\" title=\"enum pulldown_cmark::CowStr\">CowStr</a>&lt;'a&gt;","synthetic":true,"types":["pulldown_cmark::strings::CowStr"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"pulldown_cmark/enum.CodeBlockKind.html\" title=\"enum pulldown_cmark::CodeBlockKind\">CodeBlockKind</a>&lt;'a&gt;","synthetic":true,"types":["pulldown_cmark::CodeBlockKind"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"pulldown_cmark/enum.Tag.html\" title=\"enum pulldown_cmark::Tag\">Tag</a>&lt;'a&gt;","synthetic":true,"types":["pulldown_cmark::Tag"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pulldown_cmark/enum.HeadingLevel.html\" title=\"enum pulldown_cmark::HeadingLevel\">HeadingLevel</a>","synthetic":true,"types":["pulldown_cmark::HeadingLevel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pulldown_cmark/struct.InvalidHeadingLevel.html\" title=\"struct pulldown_cmark::InvalidHeadingLevel\">InvalidHeadingLevel</a>","synthetic":true,"types":["pulldown_cmark::InvalidHeadingLevel"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pulldown_cmark/enum.LinkType.html\" title=\"enum pulldown_cmark::LinkType\">LinkType</a>","synthetic":true,"types":["pulldown_cmark::LinkType"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"pulldown_cmark/enum.Event.html\" title=\"enum pulldown_cmark::Event\">Event</a>&lt;'a&gt;","synthetic":true,"types":["pulldown_cmark::Event"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pulldown_cmark/enum.Alignment.html\" title=\"enum pulldown_cmark::Alignment\">Alignment</a>","synthetic":true,"types":["pulldown_cmark::Alignment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pulldown_cmark/struct.Options.html\" title=\"struct pulldown_cmark::Options\">Options</a>","synthetic":true,"types":["pulldown_cmark::Options"]}];
implementors["rand"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Bernoulli.html\" title=\"struct rand::distributions::Bernoulli\">Bernoulli</a>","synthetic":true,"types":["rand::distributions::bernoulli::Bernoulli"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/distributions/enum.BernoulliError.html\" title=\"enum rand::distributions::BernoulliError\">BernoulliError</a>","synthetic":true,"types":["rand::distributions::bernoulli::BernoulliError"]},{"text":"impl&lt;D, R, T&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.DistIter.html\" title=\"struct rand::distributions::DistIter\">DistIter</a>&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::distribution::DistIter"]},{"text":"impl&lt;D, F, T, S&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.DistMap.html\" title=\"struct rand::distributions::DistMap\">DistMap</a>&lt;D, F, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::distribution::DistMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.OpenClosed01.html\" title=\"struct rand::distributions::OpenClosed01\">OpenClosed01</a>","synthetic":true,"types":["rand::distributions::float::OpenClosed01"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Open01.html\" title=\"struct rand::distributions::Open01\">Open01</a>","synthetic":true,"types":["rand::distributions::float::Open01"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Alphanumeric.html\" title=\"struct rand::distributions::Alphanumeric\">Alphanumeric</a>","synthetic":true,"types":["rand::distributions::other::Alphanumeric"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Slice.html\" title=\"struct rand::distributions::Slice\">Slice</a>&lt;'a, T&gt;","synthetic":true,"types":["rand::distributions::slice::Slice"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/weighted/struct.WeightedIndex.html\" title=\"struct rand::distributions::weighted::WeightedIndex\">WeightedIndex</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"associatedtype\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::weighted_index::WeightedIndex"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/distributions/weighted/enum.WeightedError.html\" title=\"enum rand::distributions::weighted::WeightedError\">WeightedError</a>","synthetic":true,"types":["rand::distributions::weighted_index::WeightedError"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Uniform.html\" title=\"struct rand::distributions::Uniform\">Uniform</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"associatedtype\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::Uniform"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformInt.html\" title=\"struct rand::distributions::uniform::UniformInt\">UniformInt</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::UniformInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformChar.html\" title=\"struct rand::distributions::uniform::UniformChar\">UniformChar</a>","synthetic":true,"types":["rand::distributions::uniform::UniformChar"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformFloat.html\" title=\"struct rand::distributions::uniform::UniformFloat\">UniformFloat</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::UniformFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformDuration.html\" title=\"struct rand::distributions::uniform::UniformDuration\">UniformDuration</a>","synthetic":true,"types":["rand::distributions::uniform::UniformDuration"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/weighted/alias_method/struct.WeightedIndex.html\" title=\"struct rand::distributions::weighted::alias_method::WeightedIndex\">WeightedIndex</a>&lt;W&gt;","synthetic":true,"types":["rand::distributions::weighted::alias_method::WeightedIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Standard.html\" title=\"struct rand::distributions::Standard\">Standard</a>","synthetic":true,"types":["rand::distributions::Standard"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadRng.html\" title=\"struct rand::rngs::adapter::ReadRng\">ReadRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::rngs::adapter::read::ReadRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadError.html\" title=\"struct rand::rngs::adapter::ReadError\">ReadError</a>","synthetic":true,"types":["rand::rngs::adapter::read::ReadError"]},{"text":"impl&lt;R, Rsdr&gt; Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReseedingRng.html\" title=\"struct rand::rngs::adapter::ReseedingRng\">ReseedingRng</a>&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"associatedtype\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::rngs::adapter::reseeding::ReseedingRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/mock/struct.StepRng.html\" title=\"struct rand::rngs::mock::StepRng\">StepRng</a>","synthetic":true,"types":["rand::rngs::mock::StepRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.StdRng.html\" title=\"struct rand::rngs::StdRng\">StdRng</a>","synthetic":true,"types":["rand::rngs::std::StdRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.ThreadRng.html\" title=\"struct rand::rngs::ThreadRng\">ThreadRng</a>","synthetic":true,"types":["rand::rngs::thread::ThreadRng"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVec.html\" title=\"enum rand::seq::index::IndexVec\">IndexVec</a>","synthetic":true,"types":["rand::seq::index::IndexVec"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVecIter.html\" title=\"enum rand::seq::index::IndexVecIter\">IndexVecIter</a>&lt;'a&gt;","synthetic":true,"types":["rand::seq::index::IndexVecIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVecIntoIter.html\" title=\"enum rand::seq::index::IndexVecIntoIter\">IndexVecIntoIter</a>","synthetic":true,"types":["rand::seq::index::IndexVecIntoIter"]},{"text":"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, T&gt; Freeze for <a class=\"struct\" href=\"rand/seq/struct.SliceChooseIter.html\" title=\"struct rand::seq::SliceChooseIter\">SliceChooseIter</a>&lt;'a, S, T&gt;","synthetic":true,"types":["rand::seq::SliceChooseIter"]}];
implementors["rand_chacha"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha20Core.html\" title=\"struct rand_chacha::ChaCha20Core\">ChaCha20Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha20Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha20Rng.html\" title=\"struct rand_chacha::ChaCha20Rng\">ChaCha20Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha20Rng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha12Core.html\" title=\"struct rand_chacha::ChaCha12Core\">ChaCha12Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha12Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha12Rng.html\" title=\"struct rand_chacha::ChaCha12Rng\">ChaCha12Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha12Rng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha8Core.html\" title=\"struct rand_chacha::ChaCha8Core\">ChaCha8Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha8Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha8Rng.html\" title=\"struct rand_chacha::ChaCha8Rng\">ChaCha8Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha8Rng"]}];
implementors["rand_core"] = [{"text":"impl&lt;R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rand_core/block/struct.BlockRng.html\" title=\"struct rand_core::block::BlockRng\">BlockRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"associatedtype\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_core::block::BlockRng"]},{"text":"impl&lt;R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rand_core/block/struct.BlockRng64.html\" title=\"struct rand_core::block::BlockRng64\">BlockRng64</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"associatedtype\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_core::block::BlockRng64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_core/struct.Error.html\" title=\"struct rand_core::Error\">Error</a>","synthetic":true,"types":["rand_core::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_core/struct.OsRng.html\" title=\"struct rand_core::OsRng\">OsRng</a>","synthetic":true,"types":["rand_core::os::OsRng"]}];
implementors["regex"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexBuilder.html\" title=\"struct regex::bytes::RegexBuilder\">RegexBuilder</a>","synthetic":true,"types":["regex::re_builder::bytes::RegexBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexSetBuilder.html\" title=\"struct regex::bytes::RegexSetBuilder\">RegexSetBuilder</a>","synthetic":true,"types":["regex::re_builder::set_bytes::RegexSetBuilder"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Match.html\" title=\"struct regex::bytes::Match\">Match</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Regex.html\" title=\"struct regex::bytes::Regex\">Regex</a>","synthetic":true,"types":["regex::re_bytes::Regex"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Matches.html\" title=\"struct regex::bytes::Matches\">Matches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::Matches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureMatches.html\" title=\"struct regex::bytes::CaptureMatches\">CaptureMatches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::CaptureMatches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Split.html\" title=\"struct regex::bytes::Split\">Split</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::Split"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SplitN.html\" title=\"struct regex::bytes::SplitN\">SplitN</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::SplitN"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureNames.html\" title=\"struct regex::bytes::CaptureNames\">CaptureNames</a>&lt;'r&gt;","synthetic":true,"types":["regex::re_bytes::CaptureNames"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureLocations.html\" title=\"struct regex::bytes::CaptureLocations\">CaptureLocations</a>","synthetic":true,"types":["regex::re_bytes::CaptureLocations"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Captures.html\" title=\"struct regex::bytes::Captures\">Captures</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::Captures"]},{"text":"impl&lt;'c, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SubCaptureMatches.html\" title=\"struct regex::bytes::SubCaptureMatches\">SubCaptureMatches</a>&lt;'c, 't&gt;","synthetic":true,"types":["regex::re_bytes::SubCaptureMatches"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.ReplacerRef.html\" title=\"struct regex::bytes::ReplacerRef\">ReplacerRef</a>&lt;'a, R&gt;","synthetic":true,"types":["regex::re_bytes::ReplacerRef"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.NoExpand.html\" title=\"struct regex::bytes::NoExpand\">NoExpand</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::NoExpand"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexSet.html\" title=\"struct regex::bytes::RegexSet\">RegexSet</a>","synthetic":true,"types":["regex::re_set::bytes::RegexSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatches.html\" title=\"struct regex::bytes::SetMatches\">SetMatches</a>","synthetic":true,"types":["regex::re_set::bytes::SetMatches"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatchesIntoIter.html\" title=\"struct regex::bytes::SetMatchesIntoIter\">SetMatchesIntoIter</a>","synthetic":true,"types":["regex::re_set::bytes::SetMatchesIntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatchesIter.html\" title=\"struct regex::bytes::SetMatchesIter\">SetMatchesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex::re_set::bytes::SetMatchesIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex/enum.Error.html\" title=\"enum regex::Error\">Error</a>","synthetic":true,"types":["regex::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexBuilder.html\" title=\"struct regex::RegexBuilder\">RegexBuilder</a>","synthetic":true,"types":["regex::re_builder::unicode::RegexBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexSetBuilder.html\" title=\"struct regex::RegexSetBuilder\">RegexSetBuilder</a>","synthetic":true,"types":["regex::re_builder::set_unicode::RegexSetBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexSet.html\" title=\"struct regex::RegexSet\">RegexSet</a>","synthetic":true,"types":["regex::re_set::unicode::RegexSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.SetMatches.html\" title=\"struct regex::SetMatches\">SetMatches</a>","synthetic":true,"types":["regex::re_set::unicode::SetMatches"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.SetMatchesIntoIter.html\" title=\"struct regex::SetMatchesIntoIter\">SetMatchesIntoIter</a>","synthetic":true,"types":["regex::re_set::unicode::SetMatchesIntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SetMatchesIter.html\" title=\"struct regex::SetMatchesIter\">SetMatchesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex::re_set::unicode::SetMatchesIter"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Match.html\" title=\"struct regex::Match\">Match</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.Regex.html\" title=\"struct regex::Regex\">Regex</a>","synthetic":true,"types":["regex::re_unicode::Regex"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"regex/struct.CaptureNames.html\" title=\"struct regex::CaptureNames\">CaptureNames</a>&lt;'r&gt;","synthetic":true,"types":["regex::re_unicode::CaptureNames"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Split.html\" title=\"struct regex::Split\">Split</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::Split"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SplitN.html\" title=\"struct regex::SplitN\">SplitN</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::SplitN"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.CaptureLocations.html\" title=\"struct regex::CaptureLocations\">CaptureLocations</a>","synthetic":true,"types":["regex::re_unicode::CaptureLocations"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Captures.html\" title=\"struct regex::Captures\">Captures</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::Captures"]},{"text":"impl&lt;'c, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SubCaptureMatches.html\" title=\"struct regex::SubCaptureMatches\">SubCaptureMatches</a>&lt;'c, 't&gt;","synthetic":true,"types":["regex::re_unicode::SubCaptureMatches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.CaptureMatches.html\" title=\"struct regex::CaptureMatches\">CaptureMatches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::CaptureMatches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Matches.html\" title=\"struct regex::Matches\">Matches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::Matches"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"regex/struct.ReplacerRef.html\" title=\"struct regex::ReplacerRef\">ReplacerRef</a>&lt;'a, R&gt;","synthetic":true,"types":["regex::re_unicode::ReplacerRef"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.NoExpand.html\" title=\"struct regex::NoExpand\">NoExpand</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::NoExpand"]}];
implementors["regex_syntax"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/parse/struct.ParserBuilder.html\" title=\"struct regex_syntax::ast::parse::ParserBuilder\">ParserBuilder</a>","synthetic":true,"types":["regex_syntax::ast::parse::ParserBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/ast/parse/struct.Parser.html\" title=\"struct regex_syntax::ast::parse::Parser\">Parser</a>","synthetic":true,"types":["regex_syntax::ast::parse::Parser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/print/struct.Printer.html\" title=\"struct regex_syntax::ast::print::Printer\">Printer</a>","synthetic":true,"types":["regex_syntax::ast::print::Printer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Error.html\" title=\"struct regex_syntax::ast::Error\">Error</a>","synthetic":true,"types":["regex_syntax::ast::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ErrorKind.html\" title=\"enum regex_syntax::ast::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["regex_syntax::ast::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Span.html\" title=\"struct regex_syntax::ast::Span\">Span</a>","synthetic":true,"types":["regex_syntax::ast::Span"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Position.html\" title=\"struct regex_syntax::ast::Position\">Position</a>","synthetic":true,"types":["regex_syntax::ast::Position"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.WithComments.html\" title=\"struct regex_syntax::ast::WithComments\">WithComments</a>","synthetic":true,"types":["regex_syntax::ast::WithComments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Comment.html\" title=\"struct regex_syntax::ast::Comment\">Comment</a>","synthetic":true,"types":["regex_syntax::ast::Comment"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Ast.html\" title=\"enum regex_syntax::ast::Ast\">Ast</a>","synthetic":true,"types":["regex_syntax::ast::Ast"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Alternation.html\" title=\"struct regex_syntax::ast::Alternation\">Alternation</a>","synthetic":true,"types":["regex_syntax::ast::Alternation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Concat.html\" title=\"struct regex_syntax::ast::Concat\">Concat</a>","synthetic":true,"types":["regex_syntax::ast::Concat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Literal.html\" title=\"struct regex_syntax::ast::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::ast::Literal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.LiteralKind.html\" title=\"enum regex_syntax::ast::LiteralKind\">LiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::LiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.SpecialLiteralKind.html\" title=\"enum regex_syntax::ast::SpecialLiteralKind\">SpecialLiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::SpecialLiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.HexLiteralKind.html\" title=\"enum regex_syntax::ast::HexLiteralKind\">HexLiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::HexLiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Class.html\" title=\"enum regex_syntax::ast::Class\">Class</a>","synthetic":true,"types":["regex_syntax::ast::Class"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassPerl.html\" title=\"struct regex_syntax::ast::ClassPerl\">ClassPerl</a>","synthetic":true,"types":["regex_syntax::ast::ClassPerl"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassPerlKind.html\" title=\"enum regex_syntax::ast::ClassPerlKind\">ClassPerlKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassPerlKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassAscii.html\" title=\"struct regex_syntax::ast::ClassAscii\">ClassAscii</a>","synthetic":true,"types":["regex_syntax::ast::ClassAscii"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassAsciiKind.html\" title=\"enum regex_syntax::ast::ClassAsciiKind\">ClassAsciiKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassAsciiKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassUnicode.html\" title=\"struct regex_syntax::ast::ClassUnicode\">ClassUnicode</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassUnicodeKind.html\" title=\"enum regex_syntax::ast::ClassUnicodeKind\">ClassUnicodeKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicodeKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassUnicodeOpKind.html\" title=\"enum regex_syntax::ast::ClassUnicodeOpKind\">ClassUnicodeOpKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicodeOpKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassBracketed.html\" title=\"struct regex_syntax::ast::ClassBracketed\">ClassBracketed</a>","synthetic":true,"types":["regex_syntax::ast::ClassBracketed"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSet.html\" title=\"enum regex_syntax::ast::ClassSet\">ClassSet</a>","synthetic":true,"types":["regex_syntax::ast::ClassSet"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSetItem.html\" title=\"enum regex_syntax::ast::ClassSetItem\">ClassSetItem</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetRange.html\" title=\"struct regex_syntax::ast::ClassSetRange\">ClassSetRange</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetUnion.html\" title=\"struct regex_syntax::ast::ClassSetUnion\">ClassSetUnion</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetBinaryOp.html\" title=\"struct regex_syntax::ast::ClassSetBinaryOp\">ClassSetBinaryOp</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetBinaryOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSetBinaryOpKind.html\" title=\"enum regex_syntax::ast::ClassSetBinaryOpKind\">ClassSetBinaryOpKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetBinaryOpKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Assertion.html\" title=\"struct regex_syntax::ast::Assertion\">Assertion</a>","synthetic":true,"types":["regex_syntax::ast::Assertion"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.AssertionKind.html\" title=\"enum regex_syntax::ast::AssertionKind\">AssertionKind</a>","synthetic":true,"types":["regex_syntax::ast::AssertionKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Repetition.html\" title=\"struct regex_syntax::ast::Repetition\">Repetition</a>","synthetic":true,"types":["regex_syntax::ast::Repetition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.RepetitionOp.html\" title=\"struct regex_syntax::ast::RepetitionOp\">RepetitionOp</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.RepetitionKind.html\" title=\"enum regex_syntax::ast::RepetitionKind\">RepetitionKind</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.RepetitionRange.html\" title=\"enum regex_syntax::ast::RepetitionRange\">RepetitionRange</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Group.html\" title=\"struct regex_syntax::ast::Group\">Group</a>","synthetic":true,"types":["regex_syntax::ast::Group"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.GroupKind.html\" title=\"enum regex_syntax::ast::GroupKind\">GroupKind</a>","synthetic":true,"types":["regex_syntax::ast::GroupKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.CaptureName.html\" title=\"struct regex_syntax::ast::CaptureName\">CaptureName</a>","synthetic":true,"types":["regex_syntax::ast::CaptureName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.SetFlags.html\" title=\"struct regex_syntax::ast::SetFlags\">SetFlags</a>","synthetic":true,"types":["regex_syntax::ast::SetFlags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Flags.html\" title=\"struct regex_syntax::ast::Flags\">Flags</a>","synthetic":true,"types":["regex_syntax::ast::Flags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.FlagsItem.html\" title=\"struct regex_syntax::ast::FlagsItem\">FlagsItem</a>","synthetic":true,"types":["regex_syntax::ast::FlagsItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.FlagsItemKind.html\" title=\"enum regex_syntax::ast::FlagsItemKind\">FlagsItemKind</a>","synthetic":true,"types":["regex_syntax::ast::FlagsItemKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Flag.html\" title=\"enum regex_syntax::ast::Flag\">Flag</a>","synthetic":true,"types":["regex_syntax::ast::Flag"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/enum.Error.html\" title=\"enum regex_syntax::Error\">Error</a>","synthetic":true,"types":["regex_syntax::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literals.html\" title=\"struct regex_syntax::hir::literal::Literals\">Literals</a>","synthetic":true,"types":["regex_syntax::hir::literal::Literals"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literal.html\" title=\"struct regex_syntax::hir::literal::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::hir::literal::Literal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/print/struct.Printer.html\" title=\"struct regex_syntax::hir::print::Printer\">Printer</a>","synthetic":true,"types":["regex_syntax::hir::print::Printer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/translate/struct.TranslatorBuilder.html\" title=\"struct regex_syntax::hir::translate::TranslatorBuilder\">TranslatorBuilder</a>","synthetic":true,"types":["regex_syntax::hir::translate::TranslatorBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/hir/translate/struct.Translator.html\" title=\"struct regex_syntax::hir::translate::Translator\">Translator</a>","synthetic":true,"types":["regex_syntax::hir::translate::Translator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.CaseFoldError.html\" title=\"struct regex_syntax::hir::CaseFoldError\">CaseFoldError</a>","synthetic":true,"types":["regex_syntax::unicode::CaseFoldError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Error.html\" title=\"struct regex_syntax::hir::Error\">Error</a>","synthetic":true,"types":["regex_syntax::hir::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.ErrorKind.html\" title=\"enum regex_syntax::hir::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["regex_syntax::hir::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Hir.html\" title=\"struct regex_syntax::hir::Hir\">Hir</a>","synthetic":true,"types":["regex_syntax::hir::Hir"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.HirKind.html\" title=\"enum regex_syntax::hir::HirKind\">HirKind</a>","synthetic":true,"types":["regex_syntax::hir::HirKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Literal.html\" title=\"enum regex_syntax::hir::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::hir::Literal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Class.html\" title=\"enum regex_syntax::hir::Class\">Class</a>","synthetic":true,"types":["regex_syntax::hir::Class"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicode.html\" title=\"struct regex_syntax::hir::ClassUnicode\">ClassUnicode</a>","synthetic":true,"types":["regex_syntax::hir::ClassUnicode"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicodeIter.html\" title=\"struct regex_syntax::hir::ClassUnicodeIter\">ClassUnicodeIter</a>&lt;'a&gt;","synthetic":true,"types":["regex_syntax::hir::ClassUnicodeIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicodeRange.html\" title=\"struct regex_syntax::hir::ClassUnicodeRange\">ClassUnicodeRange</a>","synthetic":true,"types":["regex_syntax::hir::ClassUnicodeRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytes.html\" title=\"struct regex_syntax::hir::ClassBytes\">ClassBytes</a>","synthetic":true,"types":["regex_syntax::hir::ClassBytes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytesIter.html\" title=\"struct regex_syntax::hir::ClassBytesIter\">ClassBytesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex_syntax::hir::ClassBytesIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytesRange.html\" title=\"struct regex_syntax::hir::ClassBytesRange\">ClassBytesRange</a>","synthetic":true,"types":["regex_syntax::hir::ClassBytesRange"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Anchor.html\" title=\"enum regex_syntax::hir::Anchor\">Anchor</a>","synthetic":true,"types":["regex_syntax::hir::Anchor"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.WordBoundary.html\" title=\"enum regex_syntax::hir::WordBoundary\">WordBoundary</a>","synthetic":true,"types":["regex_syntax::hir::WordBoundary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Group.html\" title=\"struct regex_syntax::hir::Group\">Group</a>","synthetic":true,"types":["regex_syntax::hir::Group"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.GroupKind.html\" title=\"enum regex_syntax::hir::GroupKind\">GroupKind</a>","synthetic":true,"types":["regex_syntax::hir::GroupKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Repetition.html\" title=\"struct regex_syntax::hir::Repetition\">Repetition</a>","synthetic":true,"types":["regex_syntax::hir::Repetition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.RepetitionKind.html\" title=\"enum regex_syntax::hir::RepetitionKind\">RepetitionKind</a>","synthetic":true,"types":["regex_syntax::hir::RepetitionKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.RepetitionRange.html\" title=\"enum regex_syntax::hir::RepetitionRange\">RepetitionRange</a>","synthetic":true,"types":["regex_syntax::hir::RepetitionRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/struct.ParserBuilder.html\" title=\"struct regex_syntax::ParserBuilder\">ParserBuilder</a>","synthetic":true,"types":["regex_syntax::parser::ParserBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/struct.Parser.html\" title=\"struct regex_syntax::Parser\">Parser</a>","synthetic":true,"types":["regex_syntax::parser::Parser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/struct.UnicodeWordError.html\" title=\"struct regex_syntax::UnicodeWordError\">UnicodeWordError</a>","synthetic":true,"types":["regex_syntax::unicode::UnicodeWordError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/utf8/enum.Utf8Sequence.html\" title=\"enum regex_syntax::utf8::Utf8Sequence\">Utf8Sequence</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Sequence"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/utf8/struct.Utf8Range.html\" title=\"struct regex_syntax::utf8::Utf8Range\">Utf8Range</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Range"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/utf8/struct.Utf8Sequences.html\" title=\"struct regex_syntax::utf8::Utf8Sequences\">Utf8Sequences</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Sequences"]}];
implementors["ryu"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ryu/struct.Buffer.html\" title=\"struct ryu::Buffer\">Buffer</a>","synthetic":true,"types":["ryu::buffer::Buffer"]}];
implementors["same_file"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"same_file/struct.Handle.html\" title=\"struct same_file::Handle\">Handle</a>","synthetic":true,"types":["same_file::Handle"]}];
implementors["scopeguard"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"scopeguard/enum.Always.html\" title=\"enum scopeguard::Always\">Always</a>","synthetic":true,"types":["scopeguard::Always"]},{"text":"impl&lt;T, F, S&gt; Freeze for <a class=\"struct\" href=\"scopeguard/struct.ScopeGuard.html\" title=\"struct scopeguard::ScopeGuard\">ScopeGuard</a>&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["scopeguard::ScopeGuard"]}];
implementors["serde"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"serde/de/value/struct.Error.html\" title=\"struct serde::de::value::Error\">Error</a>","synthetic":true,"types":["serde::de::value::Error"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.UnitDeserializer.html\" title=\"struct serde::de::value::UnitDeserializer\">UnitDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::UnitDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BoolDeserializer.html\" title=\"struct serde::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::BoolDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I8Deserializer.html\" title=\"struct serde::de::value::I8Deserializer\">I8Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I8Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I16Deserializer.html\" title=\"struct serde::de::value::I16Deserializer\">I16Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I16Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I32Deserializer.html\" title=\"struct serde::de::value::I32Deserializer\">I32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I32Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I64Deserializer.html\" title=\"struct serde::de::value::I64Deserializer\">I64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.IsizeDeserializer.html\" title=\"struct serde::de::value::IsizeDeserializer\">IsizeDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::IsizeDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U8Deserializer.html\" title=\"struct serde::de::value::U8Deserializer\">U8Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U8Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U16Deserializer.html\" title=\"struct serde::de::value::U16Deserializer\">U16Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U16Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U64Deserializer.html\" title=\"struct serde::de::value::U64Deserializer\">U64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.UsizeDeserializer.html\" title=\"struct serde::de::value::UsizeDeserializer\">UsizeDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::UsizeDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.F32Deserializer.html\" title=\"struct serde::de::value::F32Deserializer\">F32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::F32Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.F64Deserializer.html\" title=\"struct serde::de::value::F64Deserializer\">F64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::F64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.CharDeserializer.html\" title=\"struct serde::de::value::CharDeserializer\">CharDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::CharDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I128Deserializer.html\" title=\"struct serde::de::value::I128Deserializer\">I128Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I128Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U128Deserializer.html\" title=\"struct serde::de::value::U128Deserializer\">U128Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U128Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U32Deserializer.html\" title=\"struct serde::de::value::U32Deserializer\">U32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U32Deserializer"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.StrDeserializer.html\" title=\"struct serde::de::value::StrDeserializer\">StrDeserializer</a>&lt;'a, E&gt;","synthetic":true,"types":["serde::de::value::StrDeserializer"]},{"text":"impl&lt;'de, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BorrowedStrDeserializer.html\" title=\"struct serde::de::value::BorrowedStrDeserializer\">BorrowedStrDeserializer</a>&lt;'de, E&gt;","synthetic":true,"types":["serde::de::value::BorrowedStrDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.StringDeserializer.html\" title=\"struct serde::de::value::StringDeserializer\">StringDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::StringDeserializer"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.CowStrDeserializer.html\" title=\"struct serde::de::value::CowStrDeserializer\">CowStrDeserializer</a>&lt;'a, E&gt;","synthetic":true,"types":["serde::de::value::CowStrDeserializer"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BytesDeserializer.html\" title=\"struct serde::de::value::BytesDeserializer\">BytesDeserializer</a>&lt;'a, E&gt;","synthetic":true,"types":["serde::de::value::BytesDeserializer"]},{"text":"impl&lt;'de, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BorrowedBytesDeserializer.html\" title=\"struct serde::de::value::BorrowedBytesDeserializer\">BorrowedBytesDeserializer</a>&lt;'de, E&gt;","synthetic":true,"types":["serde::de::value::BorrowedBytesDeserializer"]},{"text":"impl&lt;I, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.SeqDeserializer.html\" title=\"struct serde::de::value::SeqDeserializer\">SeqDeserializer</a>&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::SeqDeserializer"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.SeqAccessDeserializer.html\" title=\"struct serde::de::value::SeqAccessDeserializer\">SeqAccessDeserializer</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::SeqAccessDeserializer"]},{"text":"impl&lt;'de, I, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.MapDeserializer.html\" title=\"struct serde::de::value::MapDeserializer\">MapDeserializer</a>&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.64.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as Pair&gt;::Second: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::MapDeserializer"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.MapAccessDeserializer.html\" title=\"struct serde::de::value::MapAccessDeserializer\">MapAccessDeserializer</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::MapAccessDeserializer"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.EnumAccessDeserializer.html\" title=\"struct serde::de::value::EnumAccessDeserializer\">EnumAccessDeserializer</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::EnumAccessDeserializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde/de/struct.IgnoredAny.html\" title=\"struct serde::de::IgnoredAny\">IgnoredAny</a>","synthetic":true,"types":["serde::de::ignored_any::IgnoredAny"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde/de/enum.Unexpected.html\" title=\"enum serde::de::Unexpected\">Unexpected</a>&lt;'a&gt;","synthetic":true,"types":["serde::de::Unexpected"]},{"text":"impl&lt;Ok, Error&gt; Freeze for <a class=\"struct\" href=\"serde/ser/struct.Impossible.html\" title=\"struct serde::ser::Impossible\">Impossible</a>&lt;Ok, Error&gt;","synthetic":true,"types":["serde::ser::impossible::Impossible"]}];
implementors["serde_json"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.SliceRead.html\" title=\"struct serde_json::de::SliceRead\">SliceRead</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::read::SliceRead"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.StrRead.html\" title=\"struct serde_json::de::StrRead\">StrRead</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::read::StrRead"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.IoRead.html\" title=\"struct serde_json::de::IoRead\">IoRead</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::read::IoRead"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"serde_json/struct.Deserializer.html\" title=\"struct serde_json::Deserializer\">Deserializer</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::de::Deserializer"]},{"text":"impl&lt;'de, R, T&gt; Freeze for <a class=\"struct\" href=\"serde_json/struct.StreamDeserializer.html\" title=\"struct serde_json::StreamDeserializer\">StreamDeserializer</a>&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::de::StreamDeserializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/struct.Error.html\" title=\"struct serde_json::Error\">Error</a>","synthetic":true,"types":["serde_json::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_json/error/enum.Category.html\" title=\"enum serde_json::error::Category\">Category</a>","synthetic":true,"types":["serde_json::error::Category"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"serde_json/struct.Map.html\" title=\"struct serde_json::Map\">Map</a>&lt;K, V&gt;","synthetic":true,"types":["serde_json::map::Map"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde_json/map/enum.Entry.html\" title=\"enum serde_json::map::Entry\">Entry</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Entry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.VacantEntry.html\" title=\"struct serde_json::map::VacantEntry\">VacantEntry</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::VacantEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.OccupiedEntry.html\" title=\"struct serde_json::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::OccupiedEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Iter.html\" title=\"struct serde_json::map::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Iter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.IterMut.html\" title=\"struct serde_json::map::IterMut\">IterMut</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::IterMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/map/struct.IntoIter.html\" title=\"struct serde_json::map::IntoIter\">IntoIter</a>","synthetic":true,"types":["serde_json::map::IntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Keys.html\" title=\"struct serde_json::map::Keys\">Keys</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Keys"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Values.html\" title=\"struct serde_json::map::Values\">Values</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Values"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.ValuesMut.html\" title=\"struct serde_json::map::ValuesMut\">ValuesMut</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::ValuesMut"]},{"text":"impl&lt;W, F&gt; Freeze for <a class=\"struct\" href=\"serde_json/struct.Serializer.html\" title=\"struct serde_json::Serializer\">Serializer</a>&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::ser::Serializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_json/ser/enum.CharEscape.html\" title=\"enum serde_json::ser::CharEscape\">CharEscape</a>","synthetic":true,"types":["serde_json::ser::CharEscape"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.CompactFormatter.html\" title=\"struct serde_json::ser::CompactFormatter\">CompactFormatter</a>","synthetic":true,"types":["serde_json::ser::CompactFormatter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.PrettyFormatter.html\" title=\"struct serde_json::ser::PrettyFormatter\">PrettyFormatter</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::ser::PrettyFormatter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/value/struct.Serializer.html\" title=\"struct serde_json::value::Serializer\">Serializer</a>","synthetic":true,"types":["serde_json::value::ser::Serializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/value/struct.Number.html\" title=\"struct serde_json::value::Number\">Number</a>","synthetic":true,"types":["serde_json::number::Number"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_json/enum.Value.html\" title=\"enum serde_json::Value\">Value</a>","synthetic":true,"types":["serde_json::value::Value"]}];
implementors["serde_urlencoded"] = [{"text":"impl&lt;'de&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/struct.Deserializer.html\" title=\"struct serde_urlencoded::Deserializer\">Deserializer</a>&lt;'de&gt;","synthetic":true,"types":["serde_urlencoded::de::Deserializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/struct.Serializer.html\" title=\"struct serde_urlencoded::Serializer\">Serializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::Serializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_urlencoded/ser/enum.Error.html\" title=\"enum serde_urlencoded::ser::Error\">Error</a>","synthetic":true,"types":["serde_urlencoded::ser::Error"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.SeqSerializer.html\" title=\"struct serde_urlencoded::ser::SeqSerializer\">SeqSerializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::SeqSerializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.TupleSerializer.html\" title=\"struct serde_urlencoded::ser::TupleSerializer\">TupleSerializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::TupleSerializer"]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.TupleStructSerializer.html\" title=\"struct serde_urlencoded::ser::TupleStructSerializer\">TupleStructSerializer</a>&lt;'input, 'output, T&gt;","synthetic":true,"types":["serde_urlencoded::ser::TupleStructSerializer"]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.TupleVariantSerializer.html\" title=\"struct serde_urlencoded::ser::TupleVariantSerializer\">TupleVariantSerializer</a>&lt;'input, 'output, T&gt;","synthetic":true,"types":["serde_urlencoded::ser::TupleVariantSerializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.MapSerializer.html\" title=\"struct serde_urlencoded::ser::MapSerializer\">MapSerializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::MapSerializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.StructSerializer.html\" title=\"struct serde_urlencoded::ser::StructSerializer\">StructSerializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::StructSerializer"]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.StructVariantSerializer.html\" title=\"struct serde_urlencoded::ser::StructVariantSerializer\">StructVariantSerializer</a>&lt;'input, 'output, T&gt;","synthetic":true,"types":["serde_urlencoded::ser::StructVariantSerializer"]}];
implementors["sha1"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"sha1/struct.Sha1Core.html\" title=\"struct sha1::Sha1Core\">Sha1Core</a>","synthetic":true,"types":["sha1::Sha1Core"]}];
implementors["signal_hook_registry"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"signal_hook_registry/struct.SigId.html\" title=\"struct signal_hook_registry::SigId\">SigId</a>","synthetic":true,"types":["signal_hook_registry::SigId"]}];
implementors["siphasher"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip/struct.SipHasher13.html\" title=\"struct siphasher::sip::SipHasher13\">SipHasher13</a>","synthetic":true,"types":["siphasher::sip::SipHasher13"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip/struct.SipHasher24.html\" title=\"struct siphasher::sip::SipHasher24\">SipHasher24</a>","synthetic":true,"types":["siphasher::sip::SipHasher24"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip/struct.SipHasher.html\" title=\"struct siphasher::sip::SipHasher\">SipHasher</a>","synthetic":true,"types":["siphasher::sip::SipHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip128/struct.Hash128.html\" title=\"struct siphasher::sip128::Hash128\">Hash128</a>","synthetic":true,"types":["siphasher::sip128::Hash128"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip128/struct.SipHasher13.html\" title=\"struct siphasher::sip128::SipHasher13\">SipHasher13</a>","synthetic":true,"types":["siphasher::sip128::SipHasher13"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip128/struct.SipHasher24.html\" title=\"struct siphasher::sip128::SipHasher24\">SipHasher24</a>","synthetic":true,"types":["siphasher::sip128::SipHasher24"]},{"text":"impl Freeze for <a class=\"struct\" href=\"siphasher/sip128/struct.SipHasher.html\" title=\"struct siphasher::sip128::SipHasher\">SipHasher</a>","synthetic":true,"types":["siphasher::sip128::SipHasher"]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Slab.html\" title=\"struct slab::Slab\">Slab</a>&lt;T&gt;","synthetic":true,"types":["slab::Slab"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.VacantEntry.html\" title=\"struct slab::VacantEntry\">VacantEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::VacantEntry"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.IntoIter.html\" title=\"struct slab::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["slab::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Iter.html\" title=\"struct slab::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.IterMut.html\" title=\"struct slab::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::IterMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Drain.html\" title=\"struct slab::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::Drain"]}];
implementors["smallvec"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"smallvec/enum.CollectionAllocErr.html\" title=\"enum smallvec::CollectionAllocErr\">CollectionAllocErr</a>","synthetic":true,"types":["smallvec::CollectionAllocErr"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.Drain.html\" title=\"struct smallvec::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["smallvec::Drain"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.SmallVec.html\" title=\"struct smallvec::SmallVec\">SmallVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["smallvec::SmallVec"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.IntoIter.html\" title=\"struct smallvec::IntoIter\">IntoIter</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["smallvec::IntoIter"]}];
implementors["socket2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.SockAddr.html\" title=\"struct socket2::SockAddr\">SockAddr</a>","synthetic":true,"types":["socket2::sockaddr::SockAddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Socket.html\" title=\"struct socket2::Socket\">Socket</a>","synthetic":true,"types":["socket2::socket::Socket"]},{"text":"impl Freeze for <a class=\"enum\" href=\"socket2/enum.InterfaceIndexOrAddress.html\" title=\"enum socket2::InterfaceIndexOrAddress\">InterfaceIndexOrAddress</a>","synthetic":true,"types":["socket2::socket::InterfaceIndexOrAddress"]},{"text":"impl&lt;'s&gt; Freeze for <a class=\"struct\" href=\"socket2/struct.SockRef.html\" title=\"struct socket2::SockRef\">SockRef</a>&lt;'s&gt;","synthetic":true,"types":["socket2::sockref::SockRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Domain.html\" title=\"struct socket2::Domain\">Domain</a>","synthetic":true,"types":["socket2::Domain"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Type.html\" title=\"struct socket2::Type\">Type</a>","synthetic":true,"types":["socket2::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Protocol.html\" title=\"struct socket2::Protocol\">Protocol</a>","synthetic":true,"types":["socket2::Protocol"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.RecvFlags.html\" title=\"struct socket2::RecvFlags\">RecvFlags</a>","synthetic":true,"types":["socket2::RecvFlags"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"socket2/struct.MaybeUninitSlice.html\" title=\"struct socket2::MaybeUninitSlice\">MaybeUninitSlice</a>&lt;'a&gt;","synthetic":true,"types":["socket2::MaybeUninitSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.TcpKeepalive.html\" title=\"struct socket2::TcpKeepalive\">TcpKeepalive</a>","synthetic":true,"types":["socket2::TcpKeepalive"]}];
implementors["syn"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Underscore.html\" title=\"struct syn::token::Underscore\">Underscore</a>","synthetic":true,"types":["syn::token::Underscore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Abstract.html\" title=\"struct syn::token::Abstract\">Abstract</a>","synthetic":true,"types":["syn::token::Abstract"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.As.html\" title=\"struct syn::token::As\">As</a>","synthetic":true,"types":["syn::token::As"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Async.html\" title=\"struct syn::token::Async\">Async</a>","synthetic":true,"types":["syn::token::Async"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Auto.html\" title=\"struct syn::token::Auto\">Auto</a>","synthetic":true,"types":["syn::token::Auto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Await.html\" title=\"struct syn::token::Await\">Await</a>","synthetic":true,"types":["syn::token::Await"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Become.html\" title=\"struct syn::token::Become\">Become</a>","synthetic":true,"types":["syn::token::Become"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Box.html\" title=\"struct syn::token::Box\">Box</a>","synthetic":true,"types":["syn::token::Box"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Break.html\" title=\"struct syn::token::Break\">Break</a>","synthetic":true,"types":["syn::token::Break"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Const.html\" title=\"struct syn::token::Const\">Const</a>","synthetic":true,"types":["syn::token::Const"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Continue.html\" title=\"struct syn::token::Continue\">Continue</a>","synthetic":true,"types":["syn::token::Continue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Crate.html\" title=\"struct syn::token::Crate\">Crate</a>","synthetic":true,"types":["syn::token::Crate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Default.html\" title=\"struct syn::token::Default\">Default</a>","synthetic":true,"types":["syn::token::Default"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Do.html\" title=\"struct syn::token::Do\">Do</a>","synthetic":true,"types":["syn::token::Do"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dyn.html\" title=\"struct syn::token::Dyn\">Dyn</a>","synthetic":true,"types":["syn::token::Dyn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Else.html\" title=\"struct syn::token::Else\">Else</a>","synthetic":true,"types":["syn::token::Else"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Enum.html\" title=\"struct syn::token::Enum\">Enum</a>","synthetic":true,"types":["syn::token::Enum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Extern.html\" title=\"struct syn::token::Extern\">Extern</a>","synthetic":true,"types":["syn::token::Extern"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Final.html\" title=\"struct syn::token::Final\">Final</a>","synthetic":true,"types":["syn::token::Final"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Fn.html\" title=\"struct syn::token::Fn\">Fn</a>","synthetic":true,"types":["syn::token::Fn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.For.html\" title=\"struct syn::token::For\">For</a>","synthetic":true,"types":["syn::token::For"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.If.html\" title=\"struct syn::token::If\">If</a>","synthetic":true,"types":["syn::token::If"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Impl.html\" title=\"struct syn::token::Impl\">Impl</a>","synthetic":true,"types":["syn::token::Impl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.In.html\" title=\"struct syn::token::In\">In</a>","synthetic":true,"types":["syn::token::In"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Let.html\" title=\"struct syn::token::Let\">Let</a>","synthetic":true,"types":["syn::token::Let"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Loop.html\" title=\"struct syn::token::Loop\">Loop</a>","synthetic":true,"types":["syn::token::Loop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Macro.html\" title=\"struct syn::token::Macro\">Macro</a>","synthetic":true,"types":["syn::token::Macro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Match.html\" title=\"struct syn::token::Match\">Match</a>","synthetic":true,"types":["syn::token::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mod.html\" title=\"struct syn::token::Mod\">Mod</a>","synthetic":true,"types":["syn::token::Mod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Move.html\" title=\"struct syn::token::Move\">Move</a>","synthetic":true,"types":["syn::token::Move"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mut.html\" title=\"struct syn::token::Mut\">Mut</a>","synthetic":true,"types":["syn::token::Mut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Override.html\" title=\"struct syn::token::Override\">Override</a>","synthetic":true,"types":["syn::token::Override"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Priv.html\" title=\"struct syn::token::Priv\">Priv</a>","synthetic":true,"types":["syn::token::Priv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pub.html\" title=\"struct syn::token::Pub\">Pub</a>","synthetic":true,"types":["syn::token::Pub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ref.html\" title=\"struct syn::token::Ref\">Ref</a>","synthetic":true,"types":["syn::token::Ref"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Return.html\" title=\"struct syn::token::Return\">Return</a>","synthetic":true,"types":["syn::token::Return"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfType.html\" title=\"struct syn::token::SelfType\">SelfType</a>","synthetic":true,"types":["syn::token::SelfType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfValue.html\" title=\"struct syn::token::SelfValue\">SelfValue</a>","synthetic":true,"types":["syn::token::SelfValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Static.html\" title=\"struct syn::token::Static\">Static</a>","synthetic":true,"types":["syn::token::Static"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Struct.html\" title=\"struct syn::token::Struct\">Struct</a>","synthetic":true,"types":["syn::token::Struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Super.html\" title=\"struct syn::token::Super\">Super</a>","synthetic":true,"types":["syn::token::Super"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Trait.html\" title=\"struct syn::token::Trait\">Trait</a>","synthetic":true,"types":["syn::token::Trait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Try.html\" title=\"struct syn::token::Try\">Try</a>","synthetic":true,"types":["syn::token::Try"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Type.html\" title=\"struct syn::token::Type\">Type</a>","synthetic":true,"types":["syn::token::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Typeof.html\" title=\"struct syn::token::Typeof\">Typeof</a>","synthetic":true,"types":["syn::token::Typeof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Union.html\" title=\"struct syn::token::Union\">Union</a>","synthetic":true,"types":["syn::token::Union"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsafe.html\" title=\"struct syn::token::Unsafe\">Unsafe</a>","synthetic":true,"types":["syn::token::Unsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsized.html\" title=\"struct syn::token::Unsized\">Unsized</a>","synthetic":true,"types":["syn::token::Unsized"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Use.html\" title=\"struct syn::token::Use\">Use</a>","synthetic":true,"types":["syn::token::Use"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Virtual.html\" title=\"struct syn::token::Virtual\">Virtual</a>","synthetic":true,"types":["syn::token::Virtual"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Where.html\" title=\"struct syn::token::Where\">Where</a>","synthetic":true,"types":["syn::token::Where"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.While.html\" title=\"struct syn::token::While\">While</a>","synthetic":true,"types":["syn::token::While"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Yield.html\" title=\"struct syn::token::Yield\">Yield</a>","synthetic":true,"types":["syn::token::Yield"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Add.html\" title=\"struct syn::token::Add\">Add</a>","synthetic":true,"types":["syn::token::Add"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AddEq.html\" title=\"struct syn::token::AddEq\">AddEq</a>","synthetic":true,"types":["syn::token::AddEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.And.html\" title=\"struct syn::token::And\">And</a>","synthetic":true,"types":["syn::token::And"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndAnd.html\" title=\"struct syn::token::AndAnd\">AndAnd</a>","synthetic":true,"types":["syn::token::AndAnd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndEq.html\" title=\"struct syn::token::AndEq\">AndEq</a>","synthetic":true,"types":["syn::token::AndEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.At.html\" title=\"struct syn::token::At\">At</a>","synthetic":true,"types":["syn::token::At"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bang.html\" title=\"struct syn::token::Bang\">Bang</a>","synthetic":true,"types":["syn::token::Bang"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Caret.html\" title=\"struct syn::token::Caret\">Caret</a>","synthetic":true,"types":["syn::token::Caret"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.CaretEq.html\" title=\"struct syn::token::CaretEq\">CaretEq</a>","synthetic":true,"types":["syn::token::CaretEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon.html\" title=\"struct syn::token::Colon\">Colon</a>","synthetic":true,"types":["syn::token::Colon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon2.html\" title=\"struct syn::token::Colon2\">Colon2</a>","synthetic":true,"types":["syn::token::Colon2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Comma.html\" title=\"struct syn::token::Comma\">Comma</a>","synthetic":true,"types":["syn::token::Comma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Div.html\" title=\"struct syn::token::Div\">Div</a>","synthetic":true,"types":["syn::token::Div"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DivEq.html\" title=\"struct syn::token::DivEq\">DivEq</a>","synthetic":true,"types":["syn::token::DivEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dollar.html\" title=\"struct syn::token::Dollar\">Dollar</a>","synthetic":true,"types":["syn::token::Dollar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot.html\" title=\"struct syn::token::Dot\">Dot</a>","synthetic":true,"types":["syn::token::Dot"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot2.html\" title=\"struct syn::token::Dot2\">Dot2</a>","synthetic":true,"types":["syn::token::Dot2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot3.html\" title=\"struct syn::token::Dot3\">Dot3</a>","synthetic":true,"types":["syn::token::Dot3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DotDotEq.html\" title=\"struct syn::token::DotDotEq\">DotDotEq</a>","synthetic":true,"types":["syn::token::DotDotEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Eq.html\" title=\"struct syn::token::Eq\">Eq</a>","synthetic":true,"types":["syn::token::Eq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.EqEq.html\" title=\"struct syn::token::EqEq\">EqEq</a>","synthetic":true,"types":["syn::token::EqEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ge.html\" title=\"struct syn::token::Ge\">Ge</a>","synthetic":true,"types":["syn::token::Ge"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Gt.html\" title=\"struct syn::token::Gt\">Gt</a>","synthetic":true,"types":["syn::token::Gt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Le.html\" title=\"struct syn::token::Le\">Le</a>","synthetic":true,"types":["syn::token::Le"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Lt.html\" title=\"struct syn::token::Lt\">Lt</a>","synthetic":true,"types":["syn::token::Lt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.MulEq.html\" title=\"struct syn::token::MulEq\">MulEq</a>","synthetic":true,"types":["syn::token::MulEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ne.html\" title=\"struct syn::token::Ne\">Ne</a>","synthetic":true,"types":["syn::token::Ne"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Or.html\" title=\"struct syn::token::Or\">Or</a>","synthetic":true,"types":["syn::token::Or"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrEq.html\" title=\"struct syn::token::OrEq\">OrEq</a>","synthetic":true,"types":["syn::token::OrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrOr.html\" title=\"struct syn::token::OrOr\">OrOr</a>","synthetic":true,"types":["syn::token::OrOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pound.html\" title=\"struct syn::token::Pound\">Pound</a>","synthetic":true,"types":["syn::token::Pound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Question.html\" title=\"struct syn::token::Question\">Question</a>","synthetic":true,"types":["syn::token::Question"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RArrow.html\" title=\"struct syn::token::RArrow\">RArrow</a>","synthetic":true,"types":["syn::token::RArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.LArrow.html\" title=\"struct syn::token::LArrow\">LArrow</a>","synthetic":true,"types":["syn::token::LArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Rem.html\" title=\"struct syn::token::Rem\">Rem</a>","synthetic":true,"types":["syn::token::Rem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RemEq.html\" title=\"struct syn::token::RemEq\">RemEq</a>","synthetic":true,"types":["syn::token::RemEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.FatArrow.html\" title=\"struct syn::token::FatArrow\">FatArrow</a>","synthetic":true,"types":["syn::token::FatArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Semi.html\" title=\"struct syn::token::Semi\">Semi</a>","synthetic":true,"types":["syn::token::Semi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shl.html\" title=\"struct syn::token::Shl\">Shl</a>","synthetic":true,"types":["syn::token::Shl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShlEq.html\" title=\"struct syn::token::ShlEq\">ShlEq</a>","synthetic":true,"types":["syn::token::ShlEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shr.html\" title=\"struct syn::token::Shr\">Shr</a>","synthetic":true,"types":["syn::token::Shr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShrEq.html\" title=\"struct syn::token::ShrEq\">ShrEq</a>","synthetic":true,"types":["syn::token::ShrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Star.html\" title=\"struct syn::token::Star\">Star</a>","synthetic":true,"types":["syn::token::Star"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Sub.html\" title=\"struct syn::token::Sub\">Sub</a>","synthetic":true,"types":["syn::token::Sub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SubEq.html\" title=\"struct syn::token::SubEq\">SubEq</a>","synthetic":true,"types":["syn::token::SubEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Tilde.html\" title=\"struct syn::token::Tilde\">Tilde</a>","synthetic":true,"types":["syn::token::Tilde"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Brace.html\" title=\"struct syn::token::Brace\">Brace</a>","synthetic":true,"types":["syn::token::Brace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bracket.html\" title=\"struct syn::token::Bracket\">Bracket</a>","synthetic":true,"types":["syn::token::Bracket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Paren.html\" title=\"struct syn::token::Paren\">Paren</a>","synthetic":true,"types":["syn::token::Paren"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Group.html\" title=\"struct syn::token::Group\">Group</a>","synthetic":true,"types":["syn::token::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Attribute.html\" title=\"struct syn::Attribute\">Attribute</a>","synthetic":true,"types":["syn::attr::Attribute"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.AttrStyle.html\" title=\"enum syn::AttrStyle\">AttrStyle</a>","synthetic":true,"types":["syn::attr::AttrStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Meta.html\" title=\"enum syn::Meta\">Meta</a>","synthetic":true,"types":["syn::attr::Meta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaList.html\" title=\"struct syn::MetaList\">MetaList</a>","synthetic":true,"types":["syn::attr::MetaList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaNameValue.html\" title=\"struct syn::MetaNameValue\">MetaNameValue</a>","synthetic":true,"types":["syn::attr::MetaNameValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.NestedMeta.html\" title=\"enum syn::NestedMeta\">NestedMeta</a>","synthetic":true,"types":["syn::attr::NestedMeta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variant.html\" title=\"struct syn::Variant\">Variant</a>","synthetic":true,"types":["syn::data::Variant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Fields.html\" title=\"enum syn::Fields\">Fields</a>","synthetic":true,"types":["syn::data::Fields"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsNamed.html\" title=\"struct syn::FieldsNamed\">FieldsNamed</a>","synthetic":true,"types":["syn::data::FieldsNamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsUnnamed.html\" title=\"struct syn::FieldsUnnamed\">FieldsUnnamed</a>","synthetic":true,"types":["syn::data::FieldsUnnamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Field.html\" title=\"struct syn::Field\">Field</a>","synthetic":true,"types":["syn::data::Field"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Visibility.html\" title=\"enum syn::Visibility\">Visibility</a>","synthetic":true,"types":["syn::data::Visibility"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisPublic.html\" title=\"struct syn::VisPublic\">VisPublic</a>","synthetic":true,"types":["syn::data::VisPublic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisCrate.html\" title=\"struct syn::VisCrate\">VisCrate</a>","synthetic":true,"types":["syn::data::VisCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisRestricted.html\" title=\"struct syn::VisRestricted\">VisRestricted</a>","synthetic":true,"types":["syn::data::VisRestricted"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Expr.html\" title=\"enum syn::Expr\">Expr</a>","synthetic":true,"types":["syn::expr::Expr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprArray.html\" title=\"struct syn::ExprArray\">ExprArray</a>","synthetic":true,"types":["syn::expr::ExprArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssign.html\" title=\"struct syn::ExprAssign\">ExprAssign</a>","synthetic":true,"types":["syn::expr::ExprAssign"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssignOp.html\" title=\"struct syn::ExprAssignOp\">ExprAssignOp</a>","synthetic":true,"types":["syn::expr::ExprAssignOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAsync.html\" title=\"struct syn::ExprAsync\">ExprAsync</a>","synthetic":true,"types":["syn::expr::ExprAsync"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAwait.html\" title=\"struct syn::ExprAwait\">ExprAwait</a>","synthetic":true,"types":["syn::expr::ExprAwait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBinary.html\" title=\"struct syn::ExprBinary\">ExprBinary</a>","synthetic":true,"types":["syn::expr::ExprBinary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBlock.html\" title=\"struct syn::ExprBlock\">ExprBlock</a>","synthetic":true,"types":["syn::expr::ExprBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBox.html\" title=\"struct syn::ExprBox\">ExprBox</a>","synthetic":true,"types":["syn::expr::ExprBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBreak.html\" title=\"struct syn::ExprBreak\">ExprBreak</a>","synthetic":true,"types":["syn::expr::ExprBreak"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCall.html\" title=\"struct syn::ExprCall\">ExprCall</a>","synthetic":true,"types":["syn::expr::ExprCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCast.html\" title=\"struct syn::ExprCast\">ExprCast</a>","synthetic":true,"types":["syn::expr::ExprCast"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprClosure.html\" title=\"struct syn::ExprClosure\">ExprClosure</a>","synthetic":true,"types":["syn::expr::ExprClosure"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprContinue.html\" title=\"struct syn::ExprContinue\">ExprContinue</a>","synthetic":true,"types":["syn::expr::ExprContinue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprField.html\" title=\"struct syn::ExprField\">ExprField</a>","synthetic":true,"types":["syn::expr::ExprField"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprForLoop.html\" title=\"struct syn::ExprForLoop\">ExprForLoop</a>","synthetic":true,"types":["syn::expr::ExprForLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprGroup.html\" title=\"struct syn::ExprGroup\">ExprGroup</a>","synthetic":true,"types":["syn::expr::ExprGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIf.html\" title=\"struct syn::ExprIf\">ExprIf</a>","synthetic":true,"types":["syn::expr::ExprIf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIndex.html\" title=\"struct syn::ExprIndex\">ExprIndex</a>","synthetic":true,"types":["syn::expr::ExprIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLet.html\" title=\"struct syn::ExprLet\">ExprLet</a>","synthetic":true,"types":["syn::expr::ExprLet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLit.html\" title=\"struct syn::ExprLit\">ExprLit</a>","synthetic":true,"types":["syn::expr::ExprLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLoop.html\" title=\"struct syn::ExprLoop\">ExprLoop</a>","synthetic":true,"types":["syn::expr::ExprLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMacro.html\" title=\"struct syn::ExprMacro\">ExprMacro</a>","synthetic":true,"types":["syn::expr::ExprMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMatch.html\" title=\"struct syn::ExprMatch\">ExprMatch</a>","synthetic":true,"types":["syn::expr::ExprMatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMethodCall.html\" title=\"struct syn::ExprMethodCall\">ExprMethodCall</a>","synthetic":true,"types":["syn::expr::ExprMethodCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprParen.html\" title=\"struct syn::ExprParen\">ExprParen</a>","synthetic":true,"types":["syn::expr::ExprParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprPath.html\" title=\"struct syn::ExprPath\">ExprPath</a>","synthetic":true,"types":["syn::expr::ExprPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRange.html\" title=\"struct syn::ExprRange\">ExprRange</a>","synthetic":true,"types":["syn::expr::ExprRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReference.html\" title=\"struct syn::ExprReference\">ExprReference</a>","synthetic":true,"types":["syn::expr::ExprReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRepeat.html\" title=\"struct syn::ExprRepeat\">ExprRepeat</a>","synthetic":true,"types":["syn::expr::ExprRepeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReturn.html\" title=\"struct syn::ExprReturn\">ExprReturn</a>","synthetic":true,"types":["syn::expr::ExprReturn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprStruct.html\" title=\"struct syn::ExprStruct\">ExprStruct</a>","synthetic":true,"types":["syn::expr::ExprStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTry.html\" title=\"struct syn::ExprTry\">ExprTry</a>","synthetic":true,"types":["syn::expr::ExprTry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTryBlock.html\" title=\"struct syn::ExprTryBlock\">ExprTryBlock</a>","synthetic":true,"types":["syn::expr::ExprTryBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTuple.html\" title=\"struct syn::ExprTuple\">ExprTuple</a>","synthetic":true,"types":["syn::expr::ExprTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprType.html\" title=\"struct syn::ExprType\">ExprType</a>","synthetic":true,"types":["syn::expr::ExprType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnary.html\" title=\"struct syn::ExprUnary\">ExprUnary</a>","synthetic":true,"types":["syn::expr::ExprUnary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnsafe.html\" title=\"struct syn::ExprUnsafe\">ExprUnsafe</a>","synthetic":true,"types":["syn::expr::ExprUnsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprWhile.html\" title=\"struct syn::ExprWhile\">ExprWhile</a>","synthetic":true,"types":["syn::expr::ExprWhile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprYield.html\" title=\"struct syn::ExprYield\">ExprYield</a>","synthetic":true,"types":["syn::expr::ExprYield"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Member.html\" title=\"enum syn::Member\">Member</a>","synthetic":true,"types":["syn::expr::Member"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Index.html\" title=\"struct syn::Index\">Index</a>","synthetic":true,"types":["syn::expr::Index"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MethodTurbofish.html\" title=\"struct syn::MethodTurbofish\">MethodTurbofish</a>","synthetic":true,"types":["syn::expr::MethodTurbofish"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericMethodArgument.html\" title=\"enum syn::GenericMethodArgument\">GenericMethodArgument</a>","synthetic":true,"types":["syn::expr::GenericMethodArgument"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldValue.html\" title=\"struct syn::FieldValue\">FieldValue</a>","synthetic":true,"types":["syn::expr::FieldValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Label.html\" title=\"struct syn::Label\">Label</a>","synthetic":true,"types":["syn::expr::Label"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Arm.html\" title=\"struct syn::Arm\">Arm</a>","synthetic":true,"types":["syn::expr::Arm"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.RangeLimits.html\" title=\"enum syn::RangeLimits\">RangeLimits</a>","synthetic":true,"types":["syn::expr::RangeLimits"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Generics.html\" title=\"struct syn::Generics\">Generics</a>","synthetic":true,"types":["syn::generics::Generics"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericParam.html\" title=\"enum syn::GenericParam\">GenericParam</a>","synthetic":true,"types":["syn::generics::GenericParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParam.html\" title=\"struct syn::TypeParam\">TypeParam</a>","synthetic":true,"types":["syn::generics::TypeParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LifetimeDef.html\" title=\"struct syn::LifetimeDef\">LifetimeDef</a>","synthetic":true,"types":["syn::generics::LifetimeDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ConstParam.html\" title=\"struct syn::ConstParam\">ConstParam</a>","synthetic":true,"types":["syn::generics::ConstParam"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.ImplGenerics.html\" title=\"struct syn::ImplGenerics\">ImplGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::ImplGenerics"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.TypeGenerics.html\" title=\"struct syn::TypeGenerics\">TypeGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::TypeGenerics"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.Turbofish.html\" title=\"struct syn::Turbofish\">Turbofish</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::Turbofish"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BoundLifetimes.html\" title=\"struct syn::BoundLifetimes\">BoundLifetimes</a>","synthetic":true,"types":["syn::generics::BoundLifetimes"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TypeParamBound.html\" title=\"enum syn::TypeParamBound\">TypeParamBound</a>","synthetic":true,"types":["syn::generics::TypeParamBound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitBound.html\" title=\"struct syn::TraitBound\">TraitBound</a>","synthetic":true,"types":["syn::generics::TraitBound"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitBoundModifier.html\" title=\"enum syn::TraitBoundModifier\">TraitBoundModifier</a>","synthetic":true,"types":["syn::generics::TraitBoundModifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.WhereClause.html\" title=\"struct syn::WhereClause\">WhereClause</a>","synthetic":true,"types":["syn::generics::WhereClause"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.WherePredicate.html\" title=\"enum syn::WherePredicate\">WherePredicate</a>","synthetic":true,"types":["syn::generics::WherePredicate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateType.html\" title=\"struct syn::PredicateType\">PredicateType</a>","synthetic":true,"types":["syn::generics::PredicateType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateLifetime.html\" title=\"struct syn::PredicateLifetime\">PredicateLifetime</a>","synthetic":true,"types":["syn::generics::PredicateLifetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateEq.html\" title=\"struct syn::PredicateEq\">PredicateEq</a>","synthetic":true,"types":["syn::generics::PredicateEq"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Item.html\" title=\"enum syn::Item\">Item</a>","synthetic":true,"types":["syn::item::Item"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemConst.html\" title=\"struct syn::ItemConst\">ItemConst</a>","synthetic":true,"types":["syn::item::ItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemEnum.html\" title=\"struct syn::ItemEnum\">ItemEnum</a>","synthetic":true,"types":["syn::item::ItemEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemExternCrate.html\" title=\"struct syn::ItemExternCrate\">ItemExternCrate</a>","synthetic":true,"types":["syn::item::ItemExternCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemFn.html\" title=\"struct syn::ItemFn\">ItemFn</a>","synthetic":true,"types":["syn::item::ItemFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemForeignMod.html\" title=\"struct syn::ItemForeignMod\">ItemForeignMod</a>","synthetic":true,"types":["syn::item::ItemForeignMod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemImpl.html\" title=\"struct syn::ItemImpl\">ItemImpl</a>","synthetic":true,"types":["syn::item::ItemImpl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMacro.html\" title=\"struct syn::ItemMacro\">ItemMacro</a>","synthetic":true,"types":["syn::item::ItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMacro2.html\" title=\"struct syn::ItemMacro2\">ItemMacro2</a>","synthetic":true,"types":["syn::item::ItemMacro2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMod.html\" title=\"struct syn::ItemMod\">ItemMod</a>","synthetic":true,"types":["syn::item::ItemMod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemStatic.html\" title=\"struct syn::ItemStatic\">ItemStatic</a>","synthetic":true,"types":["syn::item::ItemStatic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemStruct.html\" title=\"struct syn::ItemStruct\">ItemStruct</a>","synthetic":true,"types":["syn::item::ItemStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemTrait.html\" title=\"struct syn::ItemTrait\">ItemTrait</a>","synthetic":true,"types":["syn::item::ItemTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemTraitAlias.html\" title=\"struct syn::ItemTraitAlias\">ItemTraitAlias</a>","synthetic":true,"types":["syn::item::ItemTraitAlias"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemType.html\" title=\"struct syn::ItemType\">ItemType</a>","synthetic":true,"types":["syn::item::ItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemUnion.html\" title=\"struct syn::ItemUnion\">ItemUnion</a>","synthetic":true,"types":["syn::item::ItemUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemUse.html\" title=\"struct syn::ItemUse\">ItemUse</a>","synthetic":true,"types":["syn::item::ItemUse"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UseTree.html\" title=\"enum syn::UseTree\">UseTree</a>","synthetic":true,"types":["syn::item::UseTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UsePath.html\" title=\"struct syn::UsePath\">UsePath</a>","synthetic":true,"types":["syn::item::UsePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseName.html\" title=\"struct syn::UseName\">UseName</a>","synthetic":true,"types":["syn::item::UseName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseRename.html\" title=\"struct syn::UseRename\">UseRename</a>","synthetic":true,"types":["syn::item::UseRename"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseGlob.html\" title=\"struct syn::UseGlob\">UseGlob</a>","synthetic":true,"types":["syn::item::UseGlob"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseGroup.html\" title=\"struct syn::UseGroup\">UseGroup</a>","synthetic":true,"types":["syn::item::UseGroup"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ForeignItem.html\" title=\"enum syn::ForeignItem\">ForeignItem</a>","synthetic":true,"types":["syn::item::ForeignItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemFn.html\" title=\"struct syn::ForeignItemFn\">ForeignItemFn</a>","synthetic":true,"types":["syn::item::ForeignItemFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemStatic.html\" title=\"struct syn::ForeignItemStatic\">ForeignItemStatic</a>","synthetic":true,"types":["syn::item::ForeignItemStatic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemType.html\" title=\"struct syn::ForeignItemType\">ForeignItemType</a>","synthetic":true,"types":["syn::item::ForeignItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemMacro.html\" title=\"struct syn::ForeignItemMacro\">ForeignItemMacro</a>","synthetic":true,"types":["syn::item::ForeignItemMacro"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitItem.html\" title=\"enum syn::TraitItem\">TraitItem</a>","synthetic":true,"types":["syn::item::TraitItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemConst.html\" title=\"struct syn::TraitItemConst\">TraitItemConst</a>","synthetic":true,"types":["syn::item::TraitItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemMethod.html\" title=\"struct syn::TraitItemMethod\">TraitItemMethod</a>","synthetic":true,"types":["syn::item::TraitItemMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemType.html\" title=\"struct syn::TraitItemType\">TraitItemType</a>","synthetic":true,"types":["syn::item::TraitItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemMacro.html\" title=\"struct syn::TraitItemMacro\">TraitItemMacro</a>","synthetic":true,"types":["syn::item::TraitItemMacro"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ImplItem.html\" title=\"enum syn::ImplItem\">ImplItem</a>","synthetic":true,"types":["syn::item::ImplItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemConst.html\" title=\"struct syn::ImplItemConst\">ImplItemConst</a>","synthetic":true,"types":["syn::item::ImplItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemMethod.html\" title=\"struct syn::ImplItemMethod\">ImplItemMethod</a>","synthetic":true,"types":["syn::item::ImplItemMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemType.html\" title=\"struct syn::ImplItemType\">ImplItemType</a>","synthetic":true,"types":["syn::item::ImplItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemMacro.html\" title=\"struct syn::ImplItemMacro\">ImplItemMacro</a>","synthetic":true,"types":["syn::item::ImplItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Signature.html\" title=\"struct syn::Signature\">Signature</a>","synthetic":true,"types":["syn::item::Signature"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.FnArg.html\" title=\"enum syn::FnArg\">FnArg</a>","synthetic":true,"types":["syn::item::FnArg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Receiver.html\" title=\"struct syn::Receiver\">Receiver</a>","synthetic":true,"types":["syn::item::Receiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.File.html\" title=\"struct syn::File\">File</a>","synthetic":true,"types":["syn::file::File"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Lifetime.html\" title=\"struct syn::Lifetime\">Lifetime</a>","synthetic":true,"types":["syn::lifetime::Lifetime"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Lit.html\" title=\"enum syn::Lit\">Lit</a>","synthetic":true,"types":["syn::lit::Lit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitStr.html\" title=\"struct syn::LitStr\">LitStr</a>","synthetic":true,"types":["syn::lit::LitStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByteStr.html\" title=\"struct syn::LitByteStr\">LitByteStr</a>","synthetic":true,"types":["syn::lit::LitByteStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByte.html\" title=\"struct syn::LitByte\">LitByte</a>","synthetic":true,"types":["syn::lit::LitByte"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitChar.html\" title=\"struct syn::LitChar\">LitChar</a>","synthetic":true,"types":["syn::lit::LitChar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitInt.html\" title=\"struct syn::LitInt\">LitInt</a>","synthetic":true,"types":["syn::lit::LitInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitFloat.html\" title=\"struct syn::LitFloat\">LitFloat</a>","synthetic":true,"types":["syn::lit::LitFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitBool.html\" title=\"struct syn::LitBool\">LitBool</a>","synthetic":true,"types":["syn::lit::LitBool"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.StrStyle.html\" title=\"enum syn::StrStyle\">StrStyle</a>","synthetic":true,"types":["syn::lit::StrStyle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Macro.html\" title=\"struct syn::Macro\">Macro</a>","synthetic":true,"types":["syn::mac::Macro"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.MacroDelimiter.html\" title=\"enum syn::MacroDelimiter\">MacroDelimiter</a>","synthetic":true,"types":["syn::mac::MacroDelimiter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DeriveInput.html\" title=\"struct syn::DeriveInput\">DeriveInput</a>","synthetic":true,"types":["syn::derive::DeriveInput"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Data.html\" title=\"enum syn::Data\">Data</a>","synthetic":true,"types":["syn::derive::Data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataStruct.html\" title=\"struct syn::DataStruct\">DataStruct</a>","synthetic":true,"types":["syn::derive::DataStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataEnum.html\" title=\"struct syn::DataEnum\">DataEnum</a>","synthetic":true,"types":["syn::derive::DataEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataUnion.html\" title=\"struct syn::DataUnion\">DataUnion</a>","synthetic":true,"types":["syn::derive::DataUnion"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.BinOp.html\" title=\"enum syn::BinOp\">BinOp</a>","synthetic":true,"types":["syn::op::BinOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UnOp.html\" title=\"enum syn::UnOp\">UnOp</a>","synthetic":true,"types":["syn::op::UnOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Block.html\" title=\"struct syn::Block\">Block</a>","synthetic":true,"types":["syn::stmt::Block"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Stmt.html\" title=\"enum syn::Stmt\">Stmt</a>","synthetic":true,"types":["syn::stmt::Stmt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Local.html\" title=\"struct syn::Local\">Local</a>","synthetic":true,"types":["syn::stmt::Local"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Type.html\" title=\"enum syn::Type\">Type</a>","synthetic":true,"types":["syn::ty::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeArray.html\" title=\"struct syn::TypeArray\">TypeArray</a>","synthetic":true,"types":["syn::ty::TypeArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeBareFn.html\" title=\"struct syn::TypeBareFn\">TypeBareFn</a>","synthetic":true,"types":["syn::ty::TypeBareFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeGroup.html\" title=\"struct syn::TypeGroup\">TypeGroup</a>","synthetic":true,"types":["syn::ty::TypeGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeImplTrait.html\" title=\"struct syn::TypeImplTrait\">TypeImplTrait</a>","synthetic":true,"types":["syn::ty::TypeImplTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeInfer.html\" title=\"struct syn::TypeInfer\">TypeInfer</a>","synthetic":true,"types":["syn::ty::TypeInfer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeMacro.html\" title=\"struct syn::TypeMacro\">TypeMacro</a>","synthetic":true,"types":["syn::ty::TypeMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeNever.html\" title=\"struct syn::TypeNever\">TypeNever</a>","synthetic":true,"types":["syn::ty::TypeNever"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParen.html\" title=\"struct syn::TypeParen\">TypeParen</a>","synthetic":true,"types":["syn::ty::TypeParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePath.html\" title=\"struct syn::TypePath\">TypePath</a>","synthetic":true,"types":["syn::ty::TypePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePtr.html\" title=\"struct syn::TypePtr\">TypePtr</a>","synthetic":true,"types":["syn::ty::TypePtr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeReference.html\" title=\"struct syn::TypeReference\">TypeReference</a>","synthetic":true,"types":["syn::ty::TypeReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeSlice.html\" title=\"struct syn::TypeSlice\">TypeSlice</a>","synthetic":true,"types":["syn::ty::TypeSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTraitObject.html\" title=\"struct syn::TypeTraitObject\">TypeTraitObject</a>","synthetic":true,"types":["syn::ty::TypeTraitObject"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTuple.html\" title=\"struct syn::TypeTuple\">TypeTuple</a>","synthetic":true,"types":["syn::ty::TypeTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Abi.html\" title=\"struct syn::Abi\">Abi</a>","synthetic":true,"types":["syn::ty::Abi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BareFnArg.html\" title=\"struct syn::BareFnArg\">BareFnArg</a>","synthetic":true,"types":["syn::ty::BareFnArg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variadic.html\" title=\"struct syn::Variadic\">Variadic</a>","synthetic":true,"types":["syn::ty::Variadic"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ReturnType.html\" title=\"enum syn::ReturnType\">ReturnType</a>","synthetic":true,"types":["syn::ty::ReturnType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Pat.html\" title=\"enum syn::Pat\">Pat</a>","synthetic":true,"types":["syn::pat::Pat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatBox.html\" title=\"struct syn::PatBox\">PatBox</a>","synthetic":true,"types":["syn::pat::PatBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatIdent.html\" title=\"struct syn::PatIdent\">PatIdent</a>","synthetic":true,"types":["syn::pat::PatIdent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatLit.html\" title=\"struct syn::PatLit\">PatLit</a>","synthetic":true,"types":["syn::pat::PatLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatMacro.html\" title=\"struct syn::PatMacro\">PatMacro</a>","synthetic":true,"types":["syn::pat::PatMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatOr.html\" title=\"struct syn::PatOr\">PatOr</a>","synthetic":true,"types":["syn::pat::PatOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatPath.html\" title=\"struct syn::PatPath\">PatPath</a>","synthetic":true,"types":["syn::pat::PatPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatRange.html\" title=\"struct syn::PatRange\">PatRange</a>","synthetic":true,"types":["syn::pat::PatRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatReference.html\" title=\"struct syn::PatReference\">PatReference</a>","synthetic":true,"types":["syn::pat::PatReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatRest.html\" title=\"struct syn::PatRest\">PatRest</a>","synthetic":true,"types":["syn::pat::PatRest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatSlice.html\" title=\"struct syn::PatSlice\">PatSlice</a>","synthetic":true,"types":["syn::pat::PatSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatStruct.html\" title=\"struct syn::PatStruct\">PatStruct</a>","synthetic":true,"types":["syn::pat::PatStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatTuple.html\" title=\"struct syn::PatTuple\">PatTuple</a>","synthetic":true,"types":["syn::pat::PatTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatTupleStruct.html\" title=\"struct syn::PatTupleStruct\">PatTupleStruct</a>","synthetic":true,"types":["syn::pat::PatTupleStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatType.html\" title=\"struct syn::PatType\">PatType</a>","synthetic":true,"types":["syn::pat::PatType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatWild.html\" title=\"struct syn::PatWild\">PatWild</a>","synthetic":true,"types":["syn::pat::PatWild"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldPat.html\" title=\"struct syn::FieldPat\">FieldPat</a>","synthetic":true,"types":["syn::pat::FieldPat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Path.html\" title=\"struct syn::Path\">Path</a>","synthetic":true,"types":["syn::path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PathSegment.html\" title=\"struct syn::PathSegment\">PathSegment</a>","synthetic":true,"types":["syn::path::PathSegment"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.PathArguments.html\" title=\"enum syn::PathArguments\">PathArguments</a>","synthetic":true,"types":["syn::path::PathArguments"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericArgument.html\" title=\"enum syn::GenericArgument\">GenericArgument</a>","synthetic":true,"types":["syn::path::GenericArgument"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.AngleBracketedGenericArguments.html\" title=\"struct syn::AngleBracketedGenericArguments\">AngleBracketedGenericArguments</a>","synthetic":true,"types":["syn::path::AngleBracketedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Binding.html\" title=\"struct syn::Binding\">Binding</a>","synthetic":true,"types":["syn::path::Binding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Constraint.html\" title=\"struct syn::Constraint\">Constraint</a>","synthetic":true,"types":["syn::path::Constraint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ParenthesizedGenericArguments.html\" title=\"struct syn::ParenthesizedGenericArguments\">ParenthesizedGenericArguments</a>","synthetic":true,"types":["syn::path::ParenthesizedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.QSelf.html\" title=\"struct syn::QSelf\">QSelf</a>","synthetic":true,"types":["syn::path::QSelf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/buffer/struct.TokenBuffer.html\" title=\"struct syn::buffer::TokenBuffer\">TokenBuffer</a>","synthetic":true,"types":["syn::buffer::TokenBuffer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/buffer/struct.Cursor.html\" title=\"struct syn::buffer::Cursor\">Cursor</a>&lt;'a&gt;","synthetic":true,"types":["syn::buffer::Cursor"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Punctuated.html\" title=\"struct syn::punctuated::Punctuated\">Punctuated</a>&lt;T, P&gt;","synthetic":true,"types":["syn::punctuated::Punctuated"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Pairs.html\" title=\"struct syn::punctuated::Pairs\">Pairs</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::Pairs"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.PairsMut.html\" title=\"struct syn::punctuated::PairsMut\">PairsMut</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::PairsMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoPairs.html\" title=\"struct syn::punctuated::IntoPairs\">IntoPairs</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::IntoPairs"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoIter.html\" title=\"struct syn::punctuated::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["syn::punctuated::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Iter.html\" title=\"struct syn::punctuated::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IterMut.html\" title=\"struct syn::punctuated::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::IterMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"enum\" href=\"syn/punctuated/enum.Pair.html\" title=\"enum syn::punctuated::Pair\">Pair</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::Pair"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.Lookahead1.html\" title=\"struct syn::parse::Lookahead1\">Lookahead1</a>&lt;'a&gt;","synthetic":true,"types":["syn::lookahead::Lookahead1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/parse/struct.Error.html\" title=\"struct syn::parse::Error\">Error</a>","synthetic":true,"types":["syn::error::Error"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.ParseBuffer.html\" title=\"struct syn::parse::ParseBuffer\">ParseBuffer</a>&lt;'a&gt;","synthetic":true,"types":["syn::parse::ParseBuffer"]},{"text":"impl&lt;'c, 'a&gt; Freeze for <a class=\"struct\" href=\"syn/parse/struct.StepCursor.html\" title=\"struct syn::parse::StepCursor\">StepCursor</a>&lt;'c, 'a&gt;","synthetic":true,"types":["syn::parse::StepCursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/parse/struct.Nothing.html\" title=\"struct syn::parse::Nothing\">Nothing</a>","synthetic":true,"types":["syn::parse::Nothing"]}];
implementors["tera"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tera/struct.Context.html\" title=\"struct tera::Context\">Context</a>","synthetic":true,"types":["tera::context::Context"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tera/enum.ErrorKind.html\" title=\"enum tera::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["tera::errors::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tera/struct.Error.html\" title=\"struct tera::Error\">Error</a>","synthetic":true,"types":["tera::errors::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tera/struct.Tera.html\" title=\"struct tera::Tera\">Tera</a>","synthetic":true,"types":["tera::tera::Tera"]}];
implementors["termcolor"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"termcolor/enum.ColorChoice.html\" title=\"enum termcolor::ColorChoice\">ColorChoice</a>","synthetic":true,"types":["termcolor::ColorChoice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.StandardStream.html\" title=\"struct termcolor::StandardStream\">StandardStream</a>","synthetic":true,"types":["termcolor::StandardStream"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.StandardStreamLock.html\" title=\"struct termcolor::StandardStreamLock\">StandardStreamLock</a>&lt;'a&gt;","synthetic":true,"types":["termcolor::StandardStreamLock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.BufferedStandardStream.html\" title=\"struct termcolor::BufferedStandardStream\">BufferedStandardStream</a>","synthetic":true,"types":["termcolor::BufferedStandardStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"termcolor/struct.BufferWriter.html\" title=\"struct termcolor::BufferWriter\">BufferWriter</a>","synthetic":true,"types":["termcolor::BufferWriter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.Buffer.html\" title=\"struct termcolor::Buffer\">Buffer</a>","synthetic":true,"types":["termcolor::Buffer"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.NoColor.html\" title=\"struct termcolor::NoColor\">NoColor</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["termcolor::NoColor"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.Ansi.html\" title=\"struct termcolor::Ansi\">Ansi</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["termcolor::Ansi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.ColorSpec.html\" title=\"struct termcolor::ColorSpec\">ColorSpec</a>","synthetic":true,"types":["termcolor::ColorSpec"]},{"text":"impl Freeze for <a class=\"enum\" href=\"termcolor/enum.Color.html\" title=\"enum termcolor::Color\">Color</a>","synthetic":true,"types":["termcolor::Color"]},{"text":"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.ParseColorError.html\" title=\"struct termcolor::ParseColorError\">ParseColorError</a>","synthetic":true,"types":["termcolor::ParseColorError"]}];
implementors["thread_local"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.CachedThreadLocal.html\" title=\"struct thread_local::CachedThreadLocal\">CachedThreadLocal</a>&lt;T&gt;","synthetic":true,"types":["thread_local::cached::CachedThreadLocal"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"thread_local/struct.CachedIterMut.html\" title=\"struct thread_local::CachedIterMut\">CachedIterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["thread_local::cached::CachedIterMut"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.CachedIntoIter.html\" title=\"struct thread_local::CachedIntoIter\">CachedIntoIter</a>&lt;T&gt;","synthetic":true,"types":["thread_local::cached::CachedIntoIter"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.ThreadLocal.html\" title=\"struct thread_local::ThreadLocal\">ThreadLocal</a>&lt;T&gt;","synthetic":true,"types":["thread_local::ThreadLocal"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"thread_local/struct.Iter.html\" title=\"struct thread_local::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["thread_local::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"thread_local/struct.IterMut.html\" title=\"struct thread_local::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["thread_local::IterMut"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.IntoIter.html\" title=\"struct thread_local::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["thread_local::IntoIter"]}];
implementors["time"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.Date.html\" title=\"struct time::Date\">Date</a>","synthetic":true,"types":["time::date::Date"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.Duration.html\" title=\"struct time::Duration\">Duration</a>","synthetic":true,"types":["time::duration::Duration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/error/struct.ComponentRange.html\" title=\"struct time::error::ComponentRange\">ComponentRange</a>","synthetic":true,"types":["time::error::component_range::ComponentRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/error/struct.ConversionRange.html\" title=\"struct time::error::ConversionRange\">ConversionRange</a>","synthetic":true,"types":["time::error::conversion_range::ConversionRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/error/struct.DifferentVariant.html\" title=\"struct time::error::DifferentVariant\">DifferentVariant</a>","synthetic":true,"types":["time::error::different_variant::DifferentVariant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.Format.html\" title=\"enum time::error::Format\">Format</a>","synthetic":true,"types":["time::error::format::Format"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.InvalidFormatDescription.html\" title=\"enum time::error::InvalidFormatDescription\">InvalidFormatDescription</a>","synthetic":true,"types":["time::error::invalid_format_description::InvalidFormatDescription"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/error/struct.InvalidVariant.html\" title=\"struct time::error::InvalidVariant\">InvalidVariant</a>","synthetic":true,"types":["time::error::invalid_variant::InvalidVariant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.Parse.html\" title=\"enum time::error::Parse\">Parse</a>","synthetic":true,"types":["time::error::parse::Parse"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.ParseFromDescription.html\" title=\"enum time::error::ParseFromDescription\">ParseFromDescription</a>","synthetic":true,"types":["time::error::parse_from_description::ParseFromDescription"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.TryFromParsed.html\" title=\"enum time::error::TryFromParsed\">TryFromParsed</a>","synthetic":true,"types":["time::error::try_from_parsed::TryFromParsed"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.Error.html\" title=\"enum time::error::Error\">Error</a>","synthetic":true,"types":["time::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/enum.Component.html\" title=\"enum time::format_description::Component\">Component</a>","synthetic":true,"types":["time::format_description::component::Component"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Day.html\" title=\"struct time::format_description::modifier::Day\">Day</a>","synthetic":true,"types":["time::format_description::modifier::Day"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.MonthRepr.html\" title=\"enum time::format_description::modifier::MonthRepr\">MonthRepr</a>","synthetic":true,"types":["time::format_description::modifier::MonthRepr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Month.html\" title=\"struct time::format_description::modifier::Month\">Month</a>","synthetic":true,"types":["time::format_description::modifier::Month"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Ordinal.html\" title=\"struct time::format_description::modifier::Ordinal\">Ordinal</a>","synthetic":true,"types":["time::format_description::modifier::Ordinal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.WeekdayRepr.html\" title=\"enum time::format_description::modifier::WeekdayRepr\">WeekdayRepr</a>","synthetic":true,"types":["time::format_description::modifier::WeekdayRepr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Weekday.html\" title=\"struct time::format_description::modifier::Weekday\">Weekday</a>","synthetic":true,"types":["time::format_description::modifier::Weekday"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.WeekNumberRepr.html\" title=\"enum time::format_description::modifier::WeekNumberRepr\">WeekNumberRepr</a>","synthetic":true,"types":["time::format_description::modifier::WeekNumberRepr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.WeekNumber.html\" title=\"struct time::format_description::modifier::WeekNumber\">WeekNumber</a>","synthetic":true,"types":["time::format_description::modifier::WeekNumber"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.YearRepr.html\" title=\"enum time::format_description::modifier::YearRepr\">YearRepr</a>","synthetic":true,"types":["time::format_description::modifier::YearRepr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Year.html\" title=\"struct time::format_description::modifier::Year\">Year</a>","synthetic":true,"types":["time::format_description::modifier::Year"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Hour.html\" title=\"struct time::format_description::modifier::Hour\">Hour</a>","synthetic":true,"types":["time::format_description::modifier::Hour"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Minute.html\" title=\"struct time::format_description::modifier::Minute\">Minute</a>","synthetic":true,"types":["time::format_description::modifier::Minute"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Period.html\" title=\"struct time::format_description::modifier::Period\">Period</a>","synthetic":true,"types":["time::format_description::modifier::Period"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Second.html\" title=\"struct time::format_description::modifier::Second\">Second</a>","synthetic":true,"types":["time::format_description::modifier::Second"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.SubsecondDigits.html\" title=\"enum time::format_description::modifier::SubsecondDigits\">SubsecondDigits</a>","synthetic":true,"types":["time::format_description::modifier::SubsecondDigits"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Subsecond.html\" title=\"struct time::format_description::modifier::Subsecond\">Subsecond</a>","synthetic":true,"types":["time::format_description::modifier::Subsecond"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.OffsetHour.html\" title=\"struct time::format_description::modifier::OffsetHour\">OffsetHour</a>","synthetic":true,"types":["time::format_description::modifier::OffsetHour"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.OffsetMinute.html\" title=\"struct time::format_description::modifier::OffsetMinute\">OffsetMinute</a>","synthetic":true,"types":["time::format_description::modifier::OffsetMinute"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.OffsetSecond.html\" title=\"struct time::format_description::modifier::OffsetSecond\">OffsetSecond</a>","synthetic":true,"types":["time::format_description::modifier::OffsetSecond"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.Padding.html\" title=\"enum time::format_description::modifier::Padding\">Padding</a>","synthetic":true,"types":["time::format_description::modifier::Padding"]},{"text":"impl&lt;const CONFIG:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/std/primitive.u128.html\">u128</a>&gt; Freeze for <a class=\"struct\" href=\"time/format_description/well_known/struct.Iso8601.html\" title=\"struct time::format_description::well_known::Iso8601\">Iso8601</a>&lt;CONFIG&gt;","synthetic":true,"types":["time::format_description::well_known::iso8601::Iso8601"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/well_known/iso8601/enum.FormattedComponents.html\" title=\"enum time::format_description::well_known::iso8601::FormattedComponents\">FormattedComponents</a>","synthetic":true,"types":["time::format_description::well_known::iso8601::FormattedComponents"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/well_known/iso8601/enum.DateKind.html\" title=\"enum time::format_description::well_known::iso8601::DateKind\">DateKind</a>","synthetic":true,"types":["time::format_description::well_known::iso8601::DateKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/well_known/iso8601/enum.TimePrecision.html\" title=\"enum time::format_description::well_known::iso8601::TimePrecision\">TimePrecision</a>","synthetic":true,"types":["time::format_description::well_known::iso8601::TimePrecision"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/well_known/iso8601/enum.OffsetPrecision.html\" title=\"enum time::format_description::well_known::iso8601::OffsetPrecision\">OffsetPrecision</a>","synthetic":true,"types":["time::format_description::well_known::iso8601::OffsetPrecision"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/well_known/iso8601/struct.Config.html\" title=\"struct time::format_description::well_known::iso8601::Config\">Config</a>","synthetic":true,"types":["time::format_description::well_known::iso8601::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/well_known/struct.Rfc2822.html\" title=\"struct time::format_description::well_known::Rfc2822\">Rfc2822</a>","synthetic":true,"types":["time::format_description::well_known::rfc2822::Rfc2822"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/well_known/struct.Rfc3339.html\" title=\"struct time::format_description::well_known::Rfc3339\">Rfc3339</a>","synthetic":true,"types":["time::format_description::well_known::rfc3339::Rfc3339"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"time/format_description/enum.FormatItem.html\" title=\"enum time::format_description::FormatItem\">FormatItem</a>&lt;'a&gt;","synthetic":true,"types":["time::format_description::FormatItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.Instant.html\" title=\"struct time::Instant\">Instant</a>","synthetic":true,"types":["time::instant::Instant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/enum.Month.html\" title=\"enum time::Month\">Month</a>","synthetic":true,"types":["time::month::Month"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.OffsetDateTime.html\" title=\"struct time::OffsetDateTime\">OffsetDateTime</a>","synthetic":true,"types":["time::offset_date_time::OffsetDateTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/parsing/struct.Parsed.html\" title=\"struct time::parsing::Parsed\">Parsed</a>","synthetic":true,"types":["time::parsing::parsed::Parsed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.PrimitiveDateTime.html\" title=\"struct time::PrimitiveDateTime\">PrimitiveDateTime</a>","synthetic":true,"types":["time::primitive_date_time::PrimitiveDateTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.Time.html\" title=\"struct time::Time\">Time</a>","synthetic":true,"types":["time::time::Time"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.UtcOffset.html\" title=\"struct time::UtcOffset\">UtcOffset</a>","synthetic":true,"types":["time::utc_offset::UtcOffset"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/enum.Weekday.html\" title=\"enum time::Weekday\">Weekday</a>","synthetic":true,"types":["time::weekday::Weekday"]}];
implementors["tinyvec"] = [{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.ArrayVec.html\" title=\"struct tinyvec::ArrayVec\">ArrayVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::arrayvec::ArrayVec"]},{"text":"impl&lt;'p, A, I&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.ArrayVecSplice.html\" title=\"struct tinyvec::ArrayVecSplice\">ArrayVecSplice</a>&lt;'p, A, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::arrayvec::ArrayVecSplice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tinyvec/struct.TryFromSliceError.html\" title=\"struct tinyvec::TryFromSliceError\">TryFromSliceError</a>","synthetic":true,"types":["tinyvec::arrayvec::TryFromSliceError"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.ArrayVecIterator.html\" title=\"struct tinyvec::ArrayVecIterator\">ArrayVecIterator</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::arrayvec::ArrayVecIterator"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.ArrayVecDrain.html\" title=\"struct tinyvec::ArrayVecDrain\">ArrayVecDrain</a>&lt;'a, T&gt;","synthetic":true,"types":["tinyvec::arrayvec_drain::ArrayVecDrain"]},{"text":"impl&lt;'s, T&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.SliceVec.html\" title=\"struct tinyvec::SliceVec\">SliceVec</a>&lt;'s, T&gt;","synthetic":true,"types":["tinyvec::slicevec::SliceVec"]},{"text":"impl&lt;'p, 's, T&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.SliceVecDrain.html\" title=\"struct tinyvec::SliceVecDrain\">SliceVecDrain</a>&lt;'p, 's, T&gt;","synthetic":true,"types":["tinyvec::slicevec::SliceVecDrain"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"enum\" href=\"tinyvec/enum.TinyVec.html\" title=\"enum tinyvec::TinyVec\">TinyVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::tinyvec::TinyVec"]},{"text":"impl&lt;'p, A&gt; Freeze for <a class=\"enum\" href=\"tinyvec/enum.TinyVecDrain.html\" title=\"enum tinyvec::TinyVecDrain\">TinyVecDrain</a>&lt;'p, A&gt;","synthetic":true,"types":["tinyvec::tinyvec::TinyVecDrain"]},{"text":"impl&lt;'p, A, I&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.TinyVecSplice.html\" title=\"struct tinyvec::TinyVecSplice\">TinyVecSplice</a>&lt;'p, A, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::tinyvec::TinyVecSplice"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"enum\" href=\"tinyvec/enum.TinyVecIterator.html\" title=\"enum tinyvec::TinyVecIterator\">TinyVecIterator</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::tinyvec::TinyVecIterator"]}];
implementors["tokio"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.ReadBuf.html\" title=\"struct tokio::io::ReadBuf\">ReadBuf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::io::read_buf::ReadBuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Interest.html\" title=\"struct tokio::io::Interest\">Interest</a>","synthetic":true,"types":["tokio::io::interest::Interest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Ready.html\" title=\"struct tokio::io::Ready\">Ready</a>","synthetic":true,"types":["tokio::io::ready::Ready"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/unix/struct.AsyncFd.html\" title=\"struct tokio::io::unix::AsyncFd\">AsyncFd</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::async_fd::AsyncFd"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/unix/struct.AsyncFdReadyGuard.html\" title=\"struct tokio::io::unix::AsyncFdReadyGuard\">AsyncFdReadyGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::io::async_fd::AsyncFdReadyGuard"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/unix/struct.AsyncFdReadyMutGuard.html\" title=\"struct tokio::io::unix::AsyncFdReadyMutGuard\">AsyncFdReadyMutGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::io::async_fd::AsyncFdReadyMutGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/unix/struct.TryIoError.html\" title=\"struct tokio::io::unix::TryIoError\">TryIoError</a>","synthetic":true,"types":["tokio::io::async_fd::TryIoError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.ReadHalf.html\" title=\"struct tokio::io::ReadHalf\">ReadHalf</a>&lt;T&gt;","synthetic":true,"types":["tokio::io::split::ReadHalf"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.WriteHalf.html\" title=\"struct tokio::io::WriteHalf\">WriteHalf</a>&lt;T&gt;","synthetic":true,"types":["tokio::io::split::WriteHalf"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.BufReader.html\" title=\"struct tokio::io::BufReader\">BufReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::buf_reader::BufReader"]},{"text":"impl&lt;RW&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.BufStream.html\" title=\"struct tokio::io::BufStream\">BufStream</a>&lt;RW&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RW: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::buf_stream::BufStream"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.BufWriter.html\" title=\"struct tokio::io::BufWriter\">BufWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::buf_writer::BufWriter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Empty.html\" title=\"struct tokio::io::Empty\">Empty</a>","synthetic":true,"types":["tokio::io::util::empty::Empty"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.Lines.html\" title=\"struct tokio::io::Lines\">Lines</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::lines::Lines"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.DuplexStream.html\" title=\"struct tokio::io::DuplexStream\">DuplexStream</a>","synthetic":true,"types":["tokio::io::util::mem::DuplexStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Repeat.html\" title=\"struct tokio::io::Repeat\">Repeat</a>","synthetic":true,"types":["tokio::io::util::repeat::Repeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Sink.html\" title=\"struct tokio::io::Sink\">Sink</a>","synthetic":true,"types":["tokio::io::util::sink::Sink"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.Split.html\" title=\"struct tokio::io::Split\">Split</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::split::Split"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.Take.html\" title=\"struct tokio::io::Take\">Take</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::take::Take"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.TcpListener.html\" title=\"struct tokio::net::TcpListener\">TcpListener</a>","synthetic":true,"types":["tokio::net::tcp::listener::TcpListener"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/struct.TcpSocket.html\" title=\"struct tokio::net::TcpSocket\">TcpSocket</a>","synthetic":true,"types":["tokio::net::tcp::socket::TcpSocket"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.ReadHalf.html\" title=\"struct tokio::net::tcp::ReadHalf\">ReadHalf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::tcp::split::ReadHalf"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.WriteHalf.html\" title=\"struct tokio::net::tcp::WriteHalf\">WriteHalf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::tcp::split::WriteHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.OwnedReadHalf.html\" title=\"struct tokio::net::tcp::OwnedReadHalf\">OwnedReadHalf</a>","synthetic":true,"types":["tokio::net::tcp::split_owned::OwnedReadHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.OwnedWriteHalf.html\" title=\"struct tokio::net::tcp::OwnedWriteHalf\">OwnedWriteHalf</a>","synthetic":true,"types":["tokio::net::tcp::split_owned::OwnedWriteHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.ReuniteError.html\" title=\"struct tokio::net::tcp::ReuniteError\">ReuniteError</a>","synthetic":true,"types":["tokio::net::tcp::split_owned::ReuniteError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.TcpStream.html\" title=\"struct tokio::net::TcpStream\">TcpStream</a>","synthetic":true,"types":["tokio::net::tcp::stream::TcpStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.UdpSocket.html\" title=\"struct tokio::net::UdpSocket\">UdpSocket</a>","synthetic":true,"types":["tokio::net::udp::UdpSocket"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.UnixDatagram.html\" title=\"struct tokio::net::UnixDatagram\">UnixDatagram</a>","synthetic":true,"types":["tokio::net::unix::datagram::socket::UnixDatagram"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.UnixListener.html\" title=\"struct tokio::net::UnixListener\">UnixListener</a>","synthetic":true,"types":["tokio::net::unix::listener::UnixListener"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.ReadHalf.html\" title=\"struct tokio::net::unix::ReadHalf\">ReadHalf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::unix::split::ReadHalf"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.WriteHalf.html\" title=\"struct tokio::net::unix::WriteHalf\">WriteHalf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::unix::split::WriteHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.OwnedReadHalf.html\" title=\"struct tokio::net::unix::OwnedReadHalf\">OwnedReadHalf</a>","synthetic":true,"types":["tokio::net::unix::split_owned::OwnedReadHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.OwnedWriteHalf.html\" title=\"struct tokio::net::unix::OwnedWriteHalf\">OwnedWriteHalf</a>","synthetic":true,"types":["tokio::net::unix::split_owned::OwnedWriteHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.ReuniteError.html\" title=\"struct tokio::net::unix::ReuniteError\">ReuniteError</a>","synthetic":true,"types":["tokio::net::unix::split_owned::ReuniteError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.SocketAddr.html\" title=\"struct tokio::net::unix::SocketAddr\">SocketAddr</a>","synthetic":true,"types":["tokio::net::unix::socketaddr::SocketAddr"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.UnixStream.html\" title=\"struct tokio::net::UnixStream\">UnixStream</a>","synthetic":true,"types":["tokio::net::unix::stream::UnixStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.UCred.html\" title=\"struct tokio::net::unix::UCred\">UCred</a>","synthetic":true,"types":["tokio::net::unix::ucred::UCred"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/task/struct.JoinError.html\" title=\"struct tokio::task::JoinError\">JoinError</a>","synthetic":true,"types":["tokio::runtime::task::error::JoinError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/task/struct.AbortHandle.html\" title=\"struct tokio::task::AbortHandle\">AbortHandle</a>","synthetic":true,"types":["tokio::runtime::task::abort::AbortHandle"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/task/struct.JoinHandle.html\" title=\"struct tokio::task::JoinHandle\">JoinHandle</a>&lt;T&gt;","synthetic":true,"types":["tokio::runtime::task::join::JoinHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.Builder.html\" title=\"struct tokio::runtime::Builder\">Builder</a>","synthetic":true,"types":["tokio::runtime::builder::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.Handle.html\" title=\"struct tokio::runtime::Handle\">Handle</a>","synthetic":true,"types":["tokio::runtime::handle::Handle"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.EnterGuard.html\" title=\"struct tokio::runtime::EnterGuard\">EnterGuard</a>&lt;'a&gt;","synthetic":true,"types":["tokio::runtime::handle::EnterGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.TryCurrentError.html\" title=\"struct tokio::runtime::TryCurrentError\">TryCurrentError</a>","synthetic":true,"types":["tokio::runtime::handle::TryCurrentError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.Runtime.html\" title=\"struct tokio::runtime::Runtime\">Runtime</a>","synthetic":true,"types":["tokio::runtime::Runtime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/signal/unix/struct.SignalKind.html\" title=\"struct tokio::signal::unix::SignalKind\">SignalKind</a>","synthetic":true,"types":["tokio::signal::unix::SignalKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/signal/unix/struct.Signal.html\" title=\"struct tokio::signal::unix::Signal\">Signal</a>","synthetic":true,"types":["tokio::signal::unix::Signal"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"tokio/sync/futures/struct.Notified.html\" title=\"struct tokio::sync::futures::Notified\">Notified</a>&lt;'a&gt;","synthetic":true,"types":["tokio::sync::notify::Notified"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.Barrier.html\" title=\"struct tokio::sync::Barrier\">Barrier</a>","synthetic":true,"types":["tokio::sync::barrier::Barrier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/struct.BarrierWaitResult.html\" title=\"struct tokio::sync::BarrierWaitResult\">BarrierWaitResult</a>","synthetic":true,"types":["tokio::sync::barrier::BarrierWaitResult"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/broadcast/error/struct.SendError.html\" title=\"struct tokio::sync::broadcast::error::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::broadcast::error::SendError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/broadcast/error/enum.RecvError.html\" title=\"enum tokio::sync::broadcast::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio::sync::broadcast::error::RecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/broadcast/error/enum.TryRecvError.html\" title=\"enum tokio::sync::broadcast::error::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["tokio::sync::broadcast::error::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/broadcast/struct.Sender.html\" title=\"struct tokio::sync::broadcast::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::broadcast::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/broadcast/struct.Receiver.html\" title=\"struct tokio::sync::broadcast::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::broadcast::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.Sender.html\" title=\"struct tokio::sync::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::bounded::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.WeakSender.html\" title=\"struct tokio::sync::mpsc::WeakSender\">WeakSender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::bounded::WeakSender"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.Permit.html\" title=\"struct tokio::sync::mpsc::Permit\">Permit</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::mpsc::bounded::Permit"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.OwnedPermit.html\" title=\"struct tokio::sync::mpsc::OwnedPermit\">OwnedPermit</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::bounded::OwnedPermit"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.Receiver.html\" title=\"struct tokio::sync::mpsc::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::bounded::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.UnboundedSender.html\" title=\"struct tokio::sync::mpsc::UnboundedSender\">UnboundedSender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::unbounded::UnboundedSender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.UnboundedReceiver.html\" title=\"struct tokio::sync::mpsc::UnboundedReceiver\">UnboundedReceiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::unbounded::UnboundedReceiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/error/struct.SendError.html\" title=\"struct tokio::sync::mpsc::error::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::mpsc::error::SendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"tokio/sync/mpsc/error/enum.TrySendError.html\" title=\"enum tokio::sync::mpsc::error::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::mpsc::error::TrySendError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/mpsc/error/enum.TryRecvError.html\" title=\"enum tokio::sync::mpsc::error::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["tokio::sync::mpsc::error::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"tokio/sync/mpsc/error/enum.SendTimeoutError.html\" title=\"enum tokio::sync::mpsc::error::SendTimeoutError\">SendTimeoutError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::mpsc::error::SendTimeoutError"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.Mutex.html\" title=\"struct tokio::sync::Mutex\">Mutex</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mutex::Mutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.MutexGuard.html\" title=\"struct tokio::sync::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::mutex::MutexGuard"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OwnedMutexGuard.html\" title=\"struct tokio::sync::OwnedMutexGuard\">OwnedMutexGuard</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mutex::OwnedMutexGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.MappedMutexGuard.html\" title=\"struct tokio::sync::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::mutex::MappedMutexGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/struct.TryLockError.html\" title=\"struct tokio::sync::TryLockError\">TryLockError</a>","synthetic":true,"types":["tokio::sync::mutex::TryLockError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.Notify.html\" title=\"struct tokio::sync::Notify\">Notify</a>","synthetic":true,"types":["tokio::sync::notify::Notify"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/oneshot/error/struct.RecvError.html\" title=\"struct tokio::sync::oneshot::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio::sync::oneshot::error::RecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/oneshot/error/enum.TryRecvError.html\" title=\"enum tokio::sync::oneshot::error::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["tokio::sync::oneshot::error::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/oneshot/struct.Sender.html\" title=\"struct tokio::sync::oneshot::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::oneshot::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/oneshot/struct.Receiver.html\" title=\"struct tokio::sync::oneshot::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::oneshot::Receiver"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/enum.TryAcquireError.html\" title=\"enum tokio::sync::TryAcquireError\">TryAcquireError</a>","synthetic":true,"types":["tokio::sync::batch_semaphore::TryAcquireError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/struct.AcquireError.html\" title=\"struct tokio::sync::AcquireError\">AcquireError</a>","synthetic":true,"types":["tokio::sync::batch_semaphore::AcquireError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.Semaphore.html\" title=\"struct tokio::sync::Semaphore\">Semaphore</a>","synthetic":true,"types":["tokio::sync::semaphore::Semaphore"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.SemaphorePermit.html\" title=\"struct tokio::sync::SemaphorePermit\">SemaphorePermit</a>&lt;'a&gt;","synthetic":true,"types":["tokio::sync::semaphore::SemaphorePermit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OwnedSemaphorePermit.html\" title=\"struct tokio::sync::OwnedSemaphorePermit\">OwnedSemaphorePermit</a>","synthetic":true,"types":["tokio::sync::semaphore::OwnedSemaphorePermit"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, U:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OwnedRwLockReadGuard.html\" title=\"struct tokio::sync::OwnedRwLockReadGuard\">OwnedRwLockReadGuard</a>&lt;T, U&gt;","synthetic":true,"types":["tokio::sync::rwlock::owned_read_guard::OwnedRwLockReadGuard"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OwnedRwLockWriteGuard.html\" title=\"struct tokio::sync::OwnedRwLockWriteGuard\">OwnedRwLockWriteGuard</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::rwlock::owned_write_guard::OwnedRwLockWriteGuard"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, U:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OwnedRwLockMappedWriteGuard.html\" title=\"struct tokio::sync::OwnedRwLockMappedWriteGuard\">OwnedRwLockMappedWriteGuard</a>&lt;T, U&gt;","synthetic":true,"types":["tokio::sync::rwlock::owned_write_guard_mapped::OwnedRwLockMappedWriteGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.RwLockReadGuard.html\" title=\"struct tokio::sync::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::rwlock::read_guard::RwLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.RwLockWriteGuard.html\" title=\"struct tokio::sync::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::rwlock::write_guard::RwLockWriteGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.RwLockMappedWriteGuard.html\" title=\"struct tokio::sync::RwLockMappedWriteGuard\">RwLockMappedWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::rwlock::write_guard_mapped::RwLockMappedWriteGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.RwLock.html\" title=\"struct tokio::sync::RwLock\">RwLock</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::rwlock::RwLock"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OnceCell.html\" title=\"struct tokio::sync::OnceCell\">OnceCell</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::once_cell::OnceCell"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"tokio/sync/enum.SetError.html\" title=\"enum tokio::sync::SetError\">SetError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::once_cell::SetError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/watch/error/struct.SendError.html\" title=\"struct tokio::sync::watch::error::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::watch::error::SendError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/watch/error/struct.RecvError.html\" title=\"struct tokio::sync::watch::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio::sync::watch::error::RecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/watch/struct.Receiver.html\" title=\"struct tokio::sync::watch::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::watch::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/watch/struct.Sender.html\" title=\"struct tokio::sync::watch::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::watch::Sender"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/watch/struct.Ref.html\" title=\"struct tokio::sync::watch::Ref\">Ref</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::watch::Ref"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/task/struct.LocalSet.html\" title=\"struct tokio::task::LocalSet\">LocalSet</a>","synthetic":true,"types":["tokio::task::local::LocalSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/task/struct.LocalEnterGuard.html\" title=\"struct tokio::task::LocalEnterGuard\">LocalEnterGuard</a>","synthetic":true,"types":["tokio::task::local::LocalEnterGuard"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/task/struct.LocalKey.html\" title=\"struct tokio::task::LocalKey\">LocalKey</a>&lt;T&gt;","synthetic":true,"types":["tokio::task::task_local::LocalKey"]},{"text":"impl&lt;T, F&gt; Freeze for <a class=\"struct\" href=\"tokio/task/futures/struct.TaskLocalFuture.html\" title=\"struct tokio::task::futures::TaskLocalFuture\">TaskLocalFuture</a>&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::task::task_local::TaskLocalFuture"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"tokio/task/struct.Unconstrained.html\" title=\"struct tokio::task::Unconstrained\">Unconstrained</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::task::unconstrained::Unconstrained"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/task/struct.JoinSet.html\" title=\"struct tokio::task::JoinSet\">JoinSet</a>&lt;T&gt;","synthetic":true,"types":["tokio::task::join_set::JoinSet"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/time/struct.Sleep.html\" title=\"struct tokio::time::Sleep\">Sleep</a>","synthetic":true,"types":["tokio::time::driver::sleep::Sleep"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/error/struct.Error.html\" title=\"struct tokio::time::error::Error\">Error</a>","synthetic":true,"types":["tokio::time::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/error/struct.Elapsed.html\" title=\"struct tokio::time::error::Elapsed\">Elapsed</a>","synthetic":true,"types":["tokio::time::error::Elapsed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/struct.Instant.html\" title=\"struct tokio::time::Instant\">Instant</a>","synthetic":true,"types":["tokio::time::instant::Instant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/time/enum.MissedTickBehavior.html\" title=\"enum tokio::time::MissedTickBehavior\">MissedTickBehavior</a>","synthetic":true,"types":["tokio::time::interval::MissedTickBehavior"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/struct.Interval.html\" title=\"struct tokio::time::Interval\">Interval</a>","synthetic":true,"types":["tokio::time::interval::Interval"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio/time/struct.Timeout.html\" title=\"struct tokio::time::Timeout\">Timeout</a>&lt;T&gt;","synthetic":true,"types":["tokio::time::timeout::Timeout"]}];
implementors["tokio_util"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.BytesCodec.html\" title=\"struct tokio_util::codec::BytesCodec\">BytesCodec</a>","synthetic":true,"types":["tokio_util::codec::bytes_codec::BytesCodec"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.Framed.html\" title=\"struct tokio_util::codec::Framed\">Framed</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::codec::framed::Framed"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.FramedParts.html\" title=\"struct tokio_util::codec::FramedParts\">FramedParts</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::codec::framed::FramedParts"]},{"text":"impl&lt;T, D&gt; Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.FramedRead.html\" title=\"struct tokio_util::codec::FramedRead\">FramedRead</a>&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::codec::framed_read::FramedRead"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.FramedWrite.html\" title=\"struct tokio_util::codec::FramedWrite\">FramedWrite</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::codec::framed_write::FramedWrite"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/length_delimited/struct.Builder.html\" title=\"struct tokio_util::codec::length_delimited::Builder\">Builder</a>","synthetic":true,"types":["tokio_util::codec::length_delimited::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/length_delimited/struct.LengthDelimitedCodecError.html\" title=\"struct tokio_util::codec::length_delimited::LengthDelimitedCodecError\">LengthDelimitedCodecError</a>","synthetic":true,"types":["tokio_util::codec::length_delimited::LengthDelimitedCodecError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/length_delimited/struct.LengthDelimitedCodec.html\" title=\"struct tokio_util::codec::length_delimited::LengthDelimitedCodec\">LengthDelimitedCodec</a>","synthetic":true,"types":["tokio_util::codec::length_delimited::LengthDelimitedCodec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.LinesCodec.html\" title=\"struct tokio_util::codec::LinesCodec\">LinesCodec</a>","synthetic":true,"types":["tokio_util::codec::lines_codec::LinesCodec"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_util/codec/enum.LinesCodecError.html\" title=\"enum tokio_util::codec::LinesCodecError\">LinesCodecError</a>","synthetic":true,"types":["tokio_util::codec::lines_codec::LinesCodecError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.AnyDelimiterCodec.html\" title=\"struct tokio_util::codec::AnyDelimiterCodec\">AnyDelimiterCodec</a>","synthetic":true,"types":["tokio_util::codec::any_delimiter_codec::AnyDelimiterCodec"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_util/codec/enum.AnyDelimiterCodecError.html\" title=\"enum tokio_util::codec::AnyDelimiterCodecError\">AnyDelimiterCodecError</a>","synthetic":true,"types":["tokio_util::codec::any_delimiter_codec::AnyDelimiterCodecError"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio_util/io/struct.ReaderStream.html\" title=\"struct tokio_util::io::ReaderStream\">ReaderStream</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::io::reader_stream::ReaderStream"]},{"text":"impl&lt;S, B&gt; Freeze for <a class=\"struct\" href=\"tokio_util/io/struct.StreamReader.html\" title=\"struct tokio_util::io::StreamReader\">StreamReader</a>&lt;S, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::io::stream_reader::StreamReader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.DropGuard.html\" title=\"struct tokio_util::sync::DropGuard\">DropGuard</a>","synthetic":true,"types":["tokio_util::sync::cancellation_token::guard::DropGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.CancellationToken.html\" title=\"struct tokio_util::sync::CancellationToken\">CancellationToken</a>","synthetic":true,"types":["tokio_util::sync::cancellation_token::CancellationToken"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.WaitForCancellationFuture.html\" title=\"struct tokio_util::sync::WaitForCancellationFuture\">WaitForCancellationFuture</a>&lt;'a&gt;","synthetic":true,"types":["tokio_util::sync::cancellation_token::WaitForCancellationFuture"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.PollSendError.html\" title=\"struct tokio_util::sync::PollSendError\">PollSendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::sync::mpsc::PollSendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.PollSender.html\" title=\"struct tokio_util::sync::PollSender\">PollSender</a>&lt;T&gt;","synthetic":true,"types":["tokio_util::sync::mpsc::PollSender"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.PollSemaphore.html\" title=\"struct tokio_util::sync::PollSemaphore\">PollSemaphore</a>","synthetic":true,"types":["tokio_util::sync::poll_semaphore::PollSemaphore"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.ReusableBoxFuture.html\" title=\"struct tokio_util::sync::ReusableBoxFuture\">ReusableBoxFuture</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio_util::sync::reusable_box::ReusableBoxFuture"]},{"text":"impl&lt;L, R&gt; Freeze for <a class=\"enum\" href=\"tokio_util/either/enum.Either.html\" title=\"enum tokio_util::either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::either::Either"]}];
implementors["toml"] = [{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Map.html\" title=\"struct toml::map::Map\">Map</a>&lt;K, V&gt;","synthetic":true,"types":["toml::map::Map"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"toml/map/enum.Entry.html\" title=\"enum toml::map::Entry\">Entry</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::Entry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.VacantEntry.html\" title=\"struct toml::map::VacantEntry\">VacantEntry</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::VacantEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.OccupiedEntry.html\" title=\"struct toml::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::OccupiedEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Iter.html\" title=\"struct toml::map::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::Iter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.IterMut.html\" title=\"struct toml::map::IterMut\">IterMut</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::IterMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/map/struct.IntoIter.html\" title=\"struct toml::map::IntoIter\">IntoIter</a>","synthetic":true,"types":["toml::map::IntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Keys.html\" title=\"struct toml::map::Keys\">Keys</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::Keys"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Values.html\" title=\"struct toml::map::Values\">Values</a>&lt;'a&gt;","synthetic":true,"types":["toml::map::Values"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/value/struct.Date.html\" title=\"struct toml::value::Date\">Date</a>","synthetic":true,"types":["toml::datetime::Date"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/value/struct.Datetime.html\" title=\"struct toml::value::Datetime\">Datetime</a>","synthetic":true,"types":["toml::datetime::Datetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/value/struct.DatetimeParseError.html\" title=\"struct toml::value::DatetimeParseError\">DatetimeParseError</a>","synthetic":true,"types":["toml::datetime::DatetimeParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"toml/value/enum.Offset.html\" title=\"enum toml::value::Offset\">Offset</a>","synthetic":true,"types":["toml::datetime::Offset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/value/struct.Time.html\" title=\"struct toml::value::Time\">Time</a>","synthetic":true,"types":["toml::datetime::Time"]},{"text":"impl Freeze for <a class=\"enum\" href=\"toml/value/enum.Value.html\" title=\"enum toml::value::Value\">Value</a>","synthetic":true,"types":["toml::value::Value"]},{"text":"impl Freeze for <a class=\"enum\" href=\"toml/ser/enum.Error.html\" title=\"enum toml::ser::Error\">Error</a>","synthetic":true,"types":["toml::ser::Error"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/ser/struct.Serializer.html\" title=\"struct toml::ser::Serializer\">Serializer</a>&lt;'a&gt;","synthetic":true,"types":["toml::ser::Serializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"toml/de/struct.Error.html\" title=\"struct toml::de::Error\">Error</a>","synthetic":true,"types":["toml::de::Error"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/de/struct.Deserializer.html\" title=\"struct toml::de::Deserializer\">Deserializer</a>&lt;'a&gt;","synthetic":true,"types":["toml::de::Deserializer"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"toml/struct.Spanned.html\" title=\"struct toml::Spanned\">Spanned</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["toml::spanned::Spanned"]}];
implementors["tracing"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tracing/instrument/struct.WithDispatch.html\" title=\"struct tracing::instrument::WithDispatch\">WithDispatch</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing::instrument::WithDispatch"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tracing/instrument/struct.Instrumented.html\" title=\"struct tracing::instrument::Instrumented\">Instrumented</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing::instrument::Instrumented"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing/struct.Span.html\" title=\"struct tracing::Span\">Span</a>","synthetic":true,"types":["tracing::span::Span"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing/span/struct.Entered.html\" title=\"struct tracing::span::Entered\">Entered</a>&lt;'a&gt;","synthetic":true,"types":["tracing::span::Entered"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing/span/struct.EnteredSpan.html\" title=\"struct tracing::span::EnteredSpan\">EnteredSpan</a>","synthetic":true,"types":["tracing::span::EnteredSpan"]}];
implementors["tracing_core"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/callsite/struct.Identifier.html\" title=\"struct tracing_core::callsite::Identifier\">Identifier</a>","synthetic":true,"types":["tracing_core::callsite::Identifier"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tracing_core/callsite/struct.DefaultCallsite.html\" title=\"struct tracing_core::callsite::DefaultCallsite\">DefaultCallsite</a>","synthetic":true,"types":["tracing_core::callsite::DefaultCallsite"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/struct.Dispatch.html\" title=\"struct tracing_core::Dispatch\">Dispatch</a>","synthetic":true,"types":["tracing_core::dispatcher::Dispatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/dispatcher/struct.WeakDispatch.html\" title=\"struct tracing_core::dispatcher::WeakDispatch\">WeakDispatch</a>","synthetic":true,"types":["tracing_core::dispatcher::WeakDispatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/dispatcher/struct.DefaultGuard.html\" title=\"struct tracing_core::dispatcher::DefaultGuard\">DefaultGuard</a>","synthetic":true,"types":["tracing_core::dispatcher::DefaultGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/dispatcher/struct.SetGlobalDefaultError.html\" title=\"struct tracing_core::dispatcher::SetGlobalDefaultError\">SetGlobalDefaultError</a>","synthetic":true,"types":["tracing_core::dispatcher::SetGlobalDefaultError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_core/struct.Event.html\" title=\"struct tracing_core::Event\">Event</a>&lt;'a&gt;","synthetic":true,"types":["tracing_core::event::Event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/struct.Field.html\" title=\"struct tracing_core::Field\">Field</a>","synthetic":true,"types":["tracing_core::field::Field"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.Empty.html\" title=\"struct tracing_core::field::Empty\">Empty</a>","synthetic":true,"types":["tracing_core::field::Empty"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.FieldSet.html\" title=\"struct tracing_core::field::FieldSet\">FieldSet</a>","synthetic":true,"types":["tracing_core::field::FieldSet"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.ValueSet.html\" title=\"struct tracing_core::field::ValueSet\">ValueSet</a>&lt;'a&gt;","synthetic":true,"types":["tracing_core::field::ValueSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.Iter.html\" title=\"struct tracing_core::field::Iter\">Iter</a>","synthetic":true,"types":["tracing_core::field::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.DisplayValue.html\" title=\"struct tracing_core::field::DisplayValue\">DisplayValue</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_core::field::DisplayValue"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.DebugValue.html\" title=\"struct tracing_core::field::DebugValue\">DebugValue</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_core::field::DebugValue"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_core/struct.Metadata.html\" title=\"struct tracing_core::Metadata\">Metadata</a>&lt;'a&gt;","synthetic":true,"types":["tracing_core::metadata::Metadata"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/metadata/struct.Kind.html\" title=\"struct tracing_core::metadata::Kind\">Kind</a>","synthetic":true,"types":["tracing_core::metadata::Kind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/struct.Level.html\" title=\"struct tracing_core::Level\">Level</a>","synthetic":true,"types":["tracing_core::metadata::Level"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/struct.LevelFilter.html\" title=\"struct tracing_core::LevelFilter\">LevelFilter</a>","synthetic":true,"types":["tracing_core::metadata::LevelFilter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/metadata/struct.ParseLevelFilterError.html\" title=\"struct tracing_core::metadata::ParseLevelFilterError\">ParseLevelFilterError</a>","synthetic":true,"types":["tracing_core::metadata::ParseLevelFilterError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/metadata/struct.ParseLevelError.html\" title=\"struct tracing_core::metadata::ParseLevelError\">ParseLevelError</a>","synthetic":true,"types":["tracing_core::metadata::ParseLevelError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>","synthetic":true,"types":["tracing_core::span::Id"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_core/span/struct.Attributes.html\" title=\"struct tracing_core::span::Attributes\">Attributes</a>&lt;'a&gt;","synthetic":true,"types":["tracing_core::span::Attributes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_core/span/struct.Record.html\" title=\"struct tracing_core::span::Record\">Record</a>&lt;'a&gt;","synthetic":true,"types":["tracing_core::span::Record"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/span/struct.Current.html\" title=\"struct tracing_core::span::Current\">Current</a>","synthetic":true,"types":["tracing_core::span::Current"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/subscriber/struct.Interest.html\" title=\"struct tracing_core::subscriber::Interest\">Interest</a>","synthetic":true,"types":["tracing_core::subscriber::Interest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/subscriber/struct.NoSubscriber.html\" title=\"struct tracing_core::subscriber::NoSubscriber\">NoSubscriber</a>","synthetic":true,"types":["tracing_core::subscriber::NoSubscriber"]}];
implementors["typenum"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>","synthetic":true,"types":["typenum::bit::B0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>","synthetic":true,"types":["typenum::bit::B1"]},{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::int::PInt"]},{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"typenum/int/struct.NInt.html\" title=\"struct typenum::int::NInt\">NInt</a>&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::int::NInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>","synthetic":true,"types":["typenum::int::Z0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>","synthetic":true,"types":["typenum::uint::UTerm"]},{"text":"impl&lt;U, B&gt; Freeze for <a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::uint::UInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/array/struct.ATerm.html\" title=\"struct typenum::array::ATerm\">ATerm</a>","synthetic":true,"types":["typenum::array::ATerm"]},{"text":"impl&lt;V, A&gt; Freeze for <a class=\"struct\" href=\"typenum/array/struct.TArr.html\" title=\"struct typenum::array::TArr\">TArr</a>&lt;V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::array::TArr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Greater.html\" title=\"struct typenum::Greater\">Greater</a>","synthetic":true,"types":["typenum::Greater"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Less.html\" title=\"struct typenum::Less\">Less</a>","synthetic":true,"types":["typenum::Less"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Equal.html\" title=\"struct typenum::Equal\">Equal</a>","synthetic":true,"types":["typenum::Equal"]}];
implementors["ucd_trie"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"ucd_trie/enum.Error.html\" title=\"enum ucd_trie::Error\">Error</a>","synthetic":true,"types":["ucd_trie::owned::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ucd_trie/struct.TrieSetOwned.html\" title=\"struct ucd_trie::TrieSetOwned\">TrieSetOwned</a>","synthetic":true,"types":["ucd_trie::owned::TrieSetOwned"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ucd_trie/struct.TrieSetSlice.html\" title=\"struct ucd_trie::TrieSetSlice\">TrieSetSlice</a>&lt;'a&gt;","synthetic":true,"types":["ucd_trie::TrieSetSlice"]}];
implementors["uncased"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"uncased/struct.UncasedStr.html\" title=\"struct uncased::UncasedStr\">UncasedStr</a>","synthetic":true,"types":["uncased::borrowed::UncasedStr"]}];
implementors["unic_char_property"] = [{"text":"impl&lt;V&gt; Freeze for <a class=\"enum\" href=\"unic_char_property/tables/enum.CharDataTable.html\" title=\"enum unic_char_property::tables::CharDataTable\">CharDataTable</a>&lt;V&gt;","synthetic":true,"types":["unic_char_property::tables::CharDataTable"]},{"text":"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"unic_char_property/tables/struct.CharDataTableIter.html\" title=\"struct unic_char_property::tables::CharDataTableIter\">CharDataTableIter</a>&lt;'a, V&gt;","synthetic":true,"types":["unic_char_property::tables::CharDataTableIter"]}];
implementors["unic_char_range"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"unic_char_range/struct.CharIter.html\" title=\"struct unic_char_range::CharIter\">CharIter</a>","synthetic":true,"types":["unic_char_range::iter::CharIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"unic_char_range/struct.CharRange.html\" title=\"struct unic_char_range::CharRange\">CharRange</a>","synthetic":true,"types":["unic_char_range::range::CharRange"]}];
implementors["unic_common"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"unic_common/version/struct.UnicodeVersion.html\" title=\"struct unic_common::version::UnicodeVersion\">UnicodeVersion</a>","synthetic":true,"types":["unic_common::version::UnicodeVersion"]}];
implementors["unic_segment"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unic_segment/struct.GraphemeIndices.html\" title=\"struct unic_segment::GraphemeIndices\">GraphemeIndices</a>&lt;'a&gt;","synthetic":true,"types":["unic_segment::grapheme::GraphemeIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unic_segment/struct.Graphemes.html\" title=\"struct unic_segment::Graphemes\">Graphemes</a>&lt;'a&gt;","synthetic":true,"types":["unic_segment::grapheme::Graphemes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"unic_segment/struct.GraphemeCursor.html\" title=\"struct unic_segment::GraphemeCursor\">GraphemeCursor</a>","synthetic":true,"types":["unic_segment::grapheme::GraphemeCursor"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unic_segment/enum.GraphemeIncomplete.html\" title=\"enum unic_segment::GraphemeIncomplete\">GraphemeIncomplete</a>","synthetic":true,"types":["unic_segment::grapheme::GraphemeIncomplete"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unic_segment/struct.Words.html\" title=\"struct unic_segment::Words\">Words</a>&lt;'a&gt;","synthetic":true,"types":["unic_segment::word::Words"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unic_segment/struct.WordBounds.html\" title=\"struct unic_segment::WordBounds\">WordBounds</a>&lt;'a&gt;","synthetic":true,"types":["unic_segment::word::WordBounds"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unic_segment/struct.WordBoundIndices.html\" title=\"struct unic_segment::WordBoundIndices\">WordBoundIndices</a>&lt;'a&gt;","synthetic":true,"types":["unic_segment::word::WordBoundIndices"]}];
implementors["unic_ucd_segment"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"unic_ucd_segment/grapheme_cluster_break/enum.GraphemeClusterBreak.html\" title=\"enum unic_ucd_segment::grapheme_cluster_break::GraphemeClusterBreak\">GraphemeClusterBreak</a>","synthetic":true,"types":["unic_ucd_segment::grapheme_cluster_break::GraphemeClusterBreak"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unic_ucd_segment/sentence_break/enum.SentenceBreak.html\" title=\"enum unic_ucd_segment::sentence_break::SentenceBreak\">SentenceBreak</a>","synthetic":true,"types":["unic_ucd_segment::sentence_break::SentenceBreak"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unic_ucd_segment/word_break/enum.WordBreak.html\" title=\"enum unic_ucd_segment::word_break::WordBreak\">WordBreak</a>","synthetic":true,"types":["unic_ucd_segment::word_break::WordBreak"]}];
implementors["unicase"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"unicase/struct.UniCase.html\" title=\"struct unicase::UniCase\">UniCase</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["unicase::UniCase"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"unicase/struct.Ascii.html\" title=\"struct unicase::Ascii\">Ascii</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["unicase::Ascii"]}];
implementors["unicode_bidi"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"unicode_bidi/level/struct.Level.html\" title=\"struct unicode_bidi::level::Level\">Level</a>","synthetic":true,"types":["unicode_bidi::level::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_bidi/level/enum.Error.html\" title=\"enum unicode_bidi::level::Error\">Error</a>","synthetic":true,"types":["unicode_bidi::level::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_bidi/enum.BidiClass.html\" title=\"enum unicode_bidi::BidiClass\">BidiClass</a>","synthetic":true,"types":["unicode_bidi::char_data::tables::BidiClass"]},{"text":"impl Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.HardcodedBidiData.html\" title=\"struct unicode_bidi::HardcodedBidiData\">HardcodedBidiData</a>","synthetic":true,"types":["unicode_bidi::char_data::HardcodedBidiData"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_bidi/enum.Direction.html\" title=\"enum unicode_bidi::Direction\">Direction</a>","synthetic":true,"types":["unicode_bidi::Direction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.ParagraphInfo.html\" title=\"struct unicode_bidi::ParagraphInfo\">ParagraphInfo</a>","synthetic":true,"types":["unicode_bidi::ParagraphInfo"]},{"text":"impl&lt;'text&gt; Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.InitialInfo.html\" title=\"struct unicode_bidi::InitialInfo\">InitialInfo</a>&lt;'text&gt;","synthetic":true,"types":["unicode_bidi::InitialInfo"]},{"text":"impl&lt;'text&gt; Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.BidiInfo.html\" title=\"struct unicode_bidi::BidiInfo\">BidiInfo</a>&lt;'text&gt;","synthetic":true,"types":["unicode_bidi::BidiInfo"]},{"text":"impl&lt;'a, 'text&gt; Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.Paragraph.html\" title=\"struct unicode_bidi::Paragraph\">Paragraph</a>&lt;'a, 'text&gt;","synthetic":true,"types":["unicode_bidi::Paragraph"]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.Decompositions.html\" title=\"struct unicode_normalization::Decompositions\">Decompositions</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::decompose::Decompositions"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_normalization/enum.IsNormalized.html\" title=\"enum unicode_normalization::IsNormalized\">IsNormalized</a>","synthetic":true,"types":["unicode_normalization::quick_check::IsNormalized"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.Recompositions.html\" title=\"struct unicode_normalization::Recompositions\">Recompositions</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::recompose::Recompositions"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.Replacements.html\" title=\"struct unicode_normalization::Replacements\">Replacements</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::replace::Replacements"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.StreamSafe.html\" title=\"struct unicode_normalization::StreamSafe\">StreamSafe</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::stream_safe::StreamSafe"]}];
implementors["url"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"enum\" href=\"url/enum.Host.html\" title=\"enum url::Host\">Host</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["url::host::Host"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.Origin.html\" title=\"enum url::Origin\">Origin</a>","synthetic":true,"types":["url::origin::Origin"]},{"text":"impl Freeze for <a class=\"struct\" href=\"url/struct.OpaqueOrigin.html\" title=\"struct url::OpaqueOrigin\">OpaqueOrigin</a>","synthetic":true,"types":["url::origin::OpaqueOrigin"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.ParseError.html\" title=\"enum url::ParseError\">ParseError</a>","synthetic":true,"types":["url::parser::ParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.SyntaxViolation.html\" title=\"enum url::SyntaxViolation\">SyntaxViolation</a>","synthetic":true,"types":["url::parser::SyntaxViolation"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.PathSegmentsMut.html\" title=\"struct url::PathSegmentsMut\">PathSegmentsMut</a>&lt;'a&gt;","synthetic":true,"types":["url::path_segments::PathSegmentsMut"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.Position.html\" title=\"enum url::Position\">Position</a>","synthetic":true,"types":["url::slicing::Position"]},{"text":"impl Freeze for <a class=\"struct\" href=\"url/struct.Url.html\" title=\"struct url::Url\">Url</a>","synthetic":true,"types":["url::Url"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.ParseOptions.html\" title=\"struct url::ParseOptions\">ParseOptions</a>&lt;'a&gt;","synthetic":true,"types":["url::ParseOptions"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.UrlQuery.html\" title=\"struct url::UrlQuery\">UrlQuery</a>&lt;'a&gt;","synthetic":true,"types":["url::UrlQuery"]}];
implementors["walkdir"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"walkdir/struct.DirEntry.html\" title=\"struct walkdir::DirEntry\">DirEntry</a>","synthetic":true,"types":["walkdir::dent::DirEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"walkdir/struct.Error.html\" title=\"struct walkdir::Error\">Error</a>","synthetic":true,"types":["walkdir::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"walkdir/struct.WalkDir.html\" title=\"struct walkdir::WalkDir\">WalkDir</a>","synthetic":true,"types":["walkdir::WalkDir"]},{"text":"impl Freeze for <a class=\"struct\" href=\"walkdir/struct.IntoIter.html\" title=\"struct walkdir::IntoIter\">IntoIter</a>","synthetic":true,"types":["walkdir::IntoIter"]},{"text":"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"walkdir/struct.FilterEntry.html\" title=\"struct walkdir::FilterEntry\">FilterEntry</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["walkdir::FilterEntry"]}];
implementors["zstd"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"zstd/bulk/struct.Compressor.html\" title=\"struct zstd::bulk::Compressor\">Compressor</a>&lt;'a&gt;","synthetic":true,"types":["zstd::bulk::compressor::Compressor"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"zstd/bulk/struct.Decompressor.html\" title=\"struct zstd::bulk::Decompressor\">Decompressor</a>&lt;'a&gt;","synthetic":true,"types":["zstd::bulk::decompressor::Decompressor"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"zstd/dict/struct.EncoderDictionary.html\" title=\"struct zstd::dict::EncoderDictionary\">EncoderDictionary</a>&lt;'a&gt;","synthetic":true,"types":["zstd::dict::EncoderDictionary"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"zstd/dict/struct.DecoderDictionary.html\" title=\"struct zstd::dict::DecoderDictionary\">DecoderDictionary</a>&lt;'a&gt;","synthetic":true,"types":["zstd::dict::DecoderDictionary"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"zstd/stream/read/struct.Decoder.html\" title=\"struct zstd::stream::read::Decoder\">Decoder</a>&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["zstd::stream::read::Decoder"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"zstd/stream/read/struct.Encoder.html\" title=\"struct zstd::stream::read::Encoder\">Encoder</a>&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["zstd::stream::read::Encoder"]},{"text":"impl&lt;'a, W&gt; Freeze for <a class=\"struct\" href=\"zstd/stream/write/struct.Encoder.html\" title=\"struct zstd::stream::write::Encoder\">Encoder</a>&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["zstd::stream::write::Encoder"]},{"text":"impl&lt;'a, W&gt; Freeze for <a class=\"struct\" href=\"zstd/stream/write/struct.Decoder.html\" title=\"struct zstd::stream::write::Decoder\">Decoder</a>&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["zstd::stream::write::Decoder"]},{"text":"impl&lt;'a, W, F&gt; Freeze for <a class=\"struct\" href=\"zstd/stream/write/struct.AutoFinishEncoder.html\" title=\"struct zstd::stream::write::AutoFinishEncoder\">AutoFinishEncoder</a>&lt;'a, W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["zstd::stream::write::AutoFinishEncoder"]},{"text":"impl&lt;'a, W, F&gt; Freeze for <a class=\"struct\" href=\"zstd/stream/write/struct.AutoFlushDecoder.html\" title=\"struct zstd::stream::write::AutoFlushDecoder\">AutoFlushDecoder</a>&lt;'a, W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["zstd::stream::write::AutoFlushDecoder"]},{"text":"impl&lt;R, D&gt; Freeze for <a class=\"struct\" href=\"zstd/stream/zio/struct.Reader.html\" title=\"struct zstd::stream::zio::Reader\">Reader</a>&lt;R, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["zstd::stream::zio::reader::Reader"]},{"text":"impl&lt;W, D&gt; Freeze for <a class=\"struct\" href=\"zstd/stream/zio/struct.Writer.html\" title=\"struct zstd::stream::zio::Writer\">Writer</a>&lt;W, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["zstd::stream::zio::writer::Writer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"zstd/stream/raw/struct.NoOp.html\" title=\"struct zstd::stream::raw::NoOp\">NoOp</a>","synthetic":true,"types":["zstd::stream::raw::NoOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"zstd/stream/raw/struct.Status.html\" title=\"struct zstd::stream::raw::Status\">Status</a>","synthetic":true,"types":["zstd::stream::raw::Status"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"zstd/stream/raw/struct.Decoder.html\" title=\"struct zstd::stream::raw::Decoder\">Decoder</a>&lt;'a&gt;","synthetic":true,"types":["zstd::stream::raw::Decoder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"zstd/stream/raw/struct.Encoder.html\" title=\"struct zstd::stream::raw::Encoder\">Encoder</a>&lt;'a&gt;","synthetic":true,"types":["zstd::stream::raw::Encoder"]}];
implementors["zstd_safe"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"zstd_safe/struct.CCtx.html\" title=\"struct zstd_safe::CCtx\">CCtx</a>&lt;'a&gt;","synthetic":true,"types":["zstd_safe::CCtx"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"zstd_safe/struct.DCtx.html\" title=\"struct zstd_safe::DCtx\">DCtx</a>&lt;'a&gt;","synthetic":true,"types":["zstd_safe::DCtx"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"zstd_safe/struct.CDict.html\" title=\"struct zstd_safe::CDict\">CDict</a>&lt;'a&gt;","synthetic":true,"types":["zstd_safe::CDict"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"zstd_safe/struct.DDict.html\" title=\"struct zstd_safe::DDict\">DDict</a>&lt;'a&gt;","synthetic":true,"types":["zstd_safe::DDict"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"zstd_safe/struct.InBuffer.html\" title=\"struct zstd_safe::InBuffer\">InBuffer</a>&lt;'a&gt;","synthetic":true,"types":["zstd_safe::InBuffer"]},{"text":"impl&lt;'a, C:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"zstd_safe/struct.OutBuffer.html\" title=\"struct zstd_safe::OutBuffer\">OutBuffer</a>&lt;'a, C&gt;","synthetic":true,"types":["zstd_safe::OutBuffer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"zstd_safe/enum.CParameter.html\" title=\"enum zstd_safe::CParameter\">CParameter</a>","synthetic":true,"types":["zstd_safe::CParameter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"zstd_safe/enum.DParameter.html\" title=\"enum zstd_safe::DParameter\">DParameter</a>","synthetic":true,"types":["zstd_safe::DParameter"]}];
implementors["zstd_sys"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"zstd_sys/struct.ZSTD_CCtx_s.html\" title=\"struct zstd_sys::ZSTD_CCtx_s\">ZSTD_CCtx_s</a>","synthetic":true,"types":["zstd_sys::ZSTD_CCtx_s"]},{"text":"impl Freeze for <a class=\"struct\" href=\"zstd_sys/struct.ZSTD_DCtx_s.html\" title=\"struct zstd_sys::ZSTD_DCtx_s\">ZSTD_DCtx_s</a>","synthetic":true,"types":["zstd_sys::ZSTD_DCtx_s"]},{"text":"impl Freeze for <a class=\"enum\" href=\"zstd_sys/enum.ZSTD_strategy.html\" title=\"enum zstd_sys::ZSTD_strategy\">ZSTD_strategy</a>","synthetic":true,"types":["zstd_sys::ZSTD_strategy"]},{"text":"impl Freeze for <a class=\"enum\" href=\"zstd_sys/enum.ZSTD_cParameter.html\" title=\"enum zstd_sys::ZSTD_cParameter\">ZSTD_cParameter</a>","synthetic":true,"types":["zstd_sys::ZSTD_cParameter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"zstd_sys/struct.ZSTD_bounds.html\" title=\"struct zstd_sys::ZSTD_bounds\">ZSTD_bounds</a>","synthetic":true,"types":["zstd_sys::ZSTD_bounds"]},{"text":"impl Freeze for <a class=\"enum\" href=\"zstd_sys/enum.ZSTD_ResetDirective.html\" title=\"enum zstd_sys::ZSTD_ResetDirective\">ZSTD_ResetDirective</a>","synthetic":true,"types":["zstd_sys::ZSTD_ResetDirective"]},{"text":"impl Freeze for <a class=\"enum\" href=\"zstd_sys/enum.ZSTD_dParameter.html\" title=\"enum zstd_sys::ZSTD_dParameter\">ZSTD_dParameter</a>","synthetic":true,"types":["zstd_sys::ZSTD_dParameter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"zstd_sys/struct.ZSTD_inBuffer_s.html\" title=\"struct zstd_sys::ZSTD_inBuffer_s\">ZSTD_inBuffer_s</a>","synthetic":true,"types":["zstd_sys::ZSTD_inBuffer_s"]},{"text":"impl Freeze for <a class=\"struct\" href=\"zstd_sys/struct.ZSTD_outBuffer_s.html\" title=\"struct zstd_sys::ZSTD_outBuffer_s\">ZSTD_outBuffer_s</a>","synthetic":true,"types":["zstd_sys::ZSTD_outBuffer_s"]},{"text":"impl Freeze for <a class=\"enum\" href=\"zstd_sys/enum.ZSTD_EndDirective.html\" title=\"enum zstd_sys::ZSTD_EndDirective\">ZSTD_EndDirective</a>","synthetic":true,"types":["zstd_sys::ZSTD_EndDirective"]},{"text":"impl Freeze for <a class=\"struct\" href=\"zstd_sys/struct.ZSTD_CDict_s.html\" title=\"struct zstd_sys::ZSTD_CDict_s\">ZSTD_CDict_s</a>","synthetic":true,"types":["zstd_sys::ZSTD_CDict_s"]},{"text":"impl Freeze for <a class=\"struct\" href=\"zstd_sys/struct.ZSTD_DDict_s.html\" title=\"struct zstd_sys::ZSTD_DDict_s\">ZSTD_DDict_s</a>","synthetic":true,"types":["zstd_sys::ZSTD_DDict_s"]},{"text":"impl Freeze for <a class=\"struct\" href=\"zstd_sys/struct.ZDICT_params_t.html\" title=\"struct zstd_sys::ZDICT_params_t\">ZDICT_params_t</a>","synthetic":true,"types":["zstd_sys::ZDICT_params_t"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()